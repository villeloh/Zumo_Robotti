ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fcmple
  21              		.global	__aeabi_fcmpgt
  22              		.global	__aeabi_fcmplt
  23              		.global	__aeabi_fcmpge
  24              		.global	__aeabi_fdiv
  25              		.global	__aeabi_f2d
  26              		.global	__aeabi_dmul
  27              		.global	__aeabi_d2uiz
  28              		.global	__aeabi_fmul
  29              		.global	__aeabi_i2d
  30              		.global	__aeabi_dadd
  31              		.global	__aeabi_dsub
  32              		.section	.text.main,"ax",%progbits
  33              		.align	2
  34              		.global	main
  35              		.thumb
  36              		.thumb_func
  37              		.type	main, %function
  38              	main:
  39              	.LFB63:
  40              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  17:main.c        **** */
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 2


  18:main.c        **** 
  19:main.c        **** #include <project.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include "Motor.h"
  22:main.c        **** #include "Ultra.h"
  23:main.c        **** #include "Nunchuk.h"
  24:main.c        **** #include "Reflectance.h"
  25:main.c        **** #include "I2C_made.h"
  26:main.c        **** #include "Gyro.h"
  27:main.c        **** #include "Accel_magnet.h"
  28:main.c        **** #include "IR.h"
  29:main.c        **** #include "Ambient.h"
  30:main.c        **** #include "Beep.h"
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** // Declare used methods
  34:main.c        **** int rread(void);
  35:main.c        **** void motor_start();
  36:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  37:main.c        **** void Custom_forward(uint8 speed);
  38:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  39:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  40:main.c        **** void Measure_Voltage();
  41:main.c        **** void Right_turn(uint8 speed);
  42:main.c        **** void Left_turn(uint8 speed);
  43:main.c        **** 
  44:main.c        **** 
  45:main.c        **** int main()
  46:main.c        **** {
  41              		.loc 1 46 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 24
  44              		@ frame_needed = 0, uses_anonymous_args = 0
  45 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  46              		.cfi_def_cfa_offset 36
  47              		.cfi_offset 4, -36
  48              		.cfi_offset 5, -32
  49              		.cfi_offset 6, -28
  50              		.cfi_offset 7, -24
  51              		.cfi_offset 8, -20
  52              		.cfi_offset 9, -16
  53              		.cfi_offset 10, -12
  54              		.cfi_offset 11, -8
  55              		.cfi_offset 14, -4
  56 0004 87B0     		sub	sp, sp, #28
  57              		.cfi_def_cfa_offset 64
  58              	.LVL0:
  47:main.c        ****     // 'Time counter' for the voltage measurement interval
  48:main.c        ****     int cycles = 0;
  49:main.c        ****     
  50:main.c        ****     // Needed for using the button to start the robot's movement routine
  51:main.c        ****     int exit = 0;
  52:main.c        ****     
  53:main.c        ****     // Needed for enabling correct looping behaviour in the movement routine
  54:main.c        ****     int loopCheck = 0;
  55:main.c        ****     
  56:main.c        ****     // Check for enabling some procedures after the main turn logic has executed
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 3


  57:main.c        ****     int turnFlag = 0;
  58:main.c        ****     
  59:main.c        ****     // For determining behaviour with various values of 'diff'
  60:main.c        ****     int diffCase = 0;
  61:main.c        ****     
  62:main.c        ****     // The diff value which acts as a threshold for 'fast' movement away from / towards the center 
  63:main.c        ****     int diff_Fast = 500;
  64:main.c        ****     
  65:main.c        ****     // Turn value for the motors to use
  66:main.c        ****     uint8 turn = 0;
  67:main.c        ****     
  68:main.c        ****     // (maximum) movement speed of the robot
  69:main.c        ****     uint8 speed = 240;
  70:main.c        ****     
  71:main.c        ****     // reflectance thresholds (determined experimentally) for use in different movement behaviours
  72:main.c        ****     int black_threshold_l3 = 21000;
  73:main.c        ****     int black_threshold_l1 = 18000; // working value: 17 500
  74:main.c        ****     int black_threshold_r1 = 22600; // working value: 22 000
  75:main.c        ****     int black_threshold_r3 = 21500;
  76:main.c        ****         
  77:main.c        ****     int white_threshold_l3 = 5793;
  78:main.c        ****     int white_threshold_l1 = 4500;
  79:main.c        ****     int white_threshold_r1 = 4522;
  80:main.c        ****     int white_threshold_r3 = 6293;
  81:main.c        ****     
  82:main.c        ****     int maxDiff_l3 = black_threshold_l3 - white_threshold_l3;
  83:main.c        ****     int maxDiff_l1 = black_threshold_l1 - white_threshold_l1;
  84:main.c        ****     int maxDiff_r1 = black_threshold_r1 - white_threshold_r1;
  85:main.c        ****     int maxDiff_r3 = black_threshold_r3 - white_threshold_r3;
  86:main.c        ****     
  87:main.c        ****     float blackness1_left = 23999;
  88:main.c        ****     float blackness2_left = 23999;
  89:main.c        ****     float blackness1_right = 23999;
  90:main.c        ****     float blackness2_right = 23999;
  91:main.c        ****     
  92:main.c        ****     float diff_left = 0.0;
  93:main.c        ****     float diff_right = 0.0;
  94:main.c        ****     
  95:main.c        ****     // Initialize various starting thingies
  96:main.c        ****     struct sensors_ ref;
  97:main.c        ****     struct sensors_ dig;
  98:main.c        ****     CyGlobalIntEnable; 
  59              		.loc 1 98 0
  60              	@ 98 "main.c" 1
  61 0006 62B6     		CPSIE   i
  62              	@ 0 "" 2
  99:main.c        ****     UART_1_Start();
  63              		.loc 1 99 0
  64              		.thumb
  65 0008 FFF7FEFF 		bl	UART_1_Start
  66              	.LVL1:
 100:main.c        ****     ADC_Battery_Start();   
  67              		.loc 1 100 0
  68 000c FFF7FEFF 		bl	ADC_Battery_Start
  69              	.LVL2:
 101:main.c        ****     
 102:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 4


  70              		.loc 1 102 0
  71 0010 FFF7FEFF 		bl	Measure_Voltage
  72              	.LVL3:
 103:main.c        ****     
 104:main.c        ****     motor_start();
  73              		.loc 1 104 0
  74 0014 FFF7FEFF 		bl	motor_start
  75              	.LVL4:
 105:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  76              		.loc 1 105 0
  77 0018 0020     		movs	r0, #0
  78 001a 0146     		mov	r1, r0
  79 001c FFF7FEFF 		bl	motor_forward
  80              	.LVL5:
 106:main.c        ****     
 107:main.c        ****     // Initialize IR sensors
 108:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  81              		.loc 1 108 0
  82 0020 AF48     		ldr	r0, .L86+16
  83 0022 FFF7FEFF 		bl	sensor_isr_StartEx
  84              	.LVL6:
 109:main.c        ****     reflectance_set_threshold(black_threshold_l3, black_threshold_l1, black_threshold_r1, black_thr
  85              		.loc 1 109 0
  86 0026 45F20820 		movw	r0, #21000
  87 002a 44F25061 		movw	r1, #18000
  88 002e 45F64802 		movw	r2, #22600
  89 0032 45F2FC33 		movw	r3, #21500
  90 0036 FFF7FEFF 		bl	reflectance_set_threshold
  91              	.LVL7:
 110:main.c        ****     reflectance_start();
  92              		.loc 1 110 0
  93 003a FFF7FEFF 		bl	reflectance_start
  94              	.LVL8:
 111:main.c        ****     IR_led_Write(1);
  95              		.loc 1 111 0
  96 003e 0120     		movs	r0, #1
  97 0040 FFF7FEFF 		bl	IR_led_Write
  98              	.LVL9:
 112:main.c        **** 
 113:main.c        ****     BatteryLed_Write(0); // Switch led off 
  99              		.loc 1 113 0
 100 0044 0020     		movs	r0, #0
 101 0046 FFF7FEFF 		bl	BatteryLed_Write
 102              	.LVL10:
  51:main.c        ****     
 103              		.loc 1 51 0
 104 004a 0024     		movs	r4, #0
 114:main.c        ****     
 115:main.c        ****     uint8 button; // make button exist
 116:main.c        ****     
 117:main.c        ****     // To start the robot's movement routine, press the button
 118:main.c        ****     while (exit == 0) 
 105              		.loc 1 118 0
 106 004c 06E0     		b	.L3
 107              	.LVL11:
 108              	.L4:
 119:main.c        ****     {
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 5


 120:main.c        ****         button = SW1_Read();
 109              		.loc 1 120 0
 110 004e FFF7FEFF 		bl	SW1_Read
 111              	.LVL12:
 121:main.c        ****         
 122:main.c        ****         if (button == 0) 
 112              		.loc 1 122 0
 113 0052 18B9     		cbnz	r0, .L3
 114              	.LVL13:
 123:main.c        ****         {
 124:main.c        ****             exit = 1;
 125:main.c        ****             CyDelay(10);
 115              		.loc 1 125 0
 116 0054 0A20     		movs	r0, #10
 117              	.LVL14:
 118 0056 FFF7FEFF 		bl	CyDelay
 119              	.LVL15:
 124:main.c        ****             CyDelay(10);
 120              		.loc 1 124 0
 121 005a 0124     		movs	r4, #1
 122              	.LVL16:
 123              	.L3:
 118:main.c        ****     {
 124              		.loc 1 118 0
 125 005c 002C     		cmp	r4, #0
 126 005e F6D0     		beq	.L4
 126:main.c        ****         }
 127:main.c        ****     }
 128:main.c        ****     
 129:main.c        ****     // Start going forward.
 130:main.c        ****     Custom_forward(speed);
 127              		.loc 1 130 0
 128 0060 F020     		movs	r0, #240
 129 0062 FFF7FEFF 		bl	Custom_forward
 130              	.LVL17:
  89:main.c        ****     float blackness2_right = 23999;
 131              		.loc 1 89 0
 132 0066 DFF8A092 		ldr	r9, .L86+56
  87:main.c        ****     float blackness2_left = 23999;
 133              		.loc 1 87 0
 134 006a 4C46     		mov	r4, r9
 135              	.LVL18:
  60:main.c        ****     
 136              		.loc 1 60 0
 137 006c 0025     		movs	r5, #0
  48:main.c        ****     
 138              		.loc 1 48 0
 139 006e AA46     		mov	r10, r5
 140              	.LVL19:
 141              	.L50:
 131:main.c        ****     
 132:main.c        ****     // Giant loop to run the movement logic in.
 133:main.c        ****     while(1)
 134:main.c        ****     {    
 135:main.c        ****         
 136:main.c        ****         reflectance_read(&ref); // raw reflectance value ('blackness') from the sensor; 0 - 23 999
 142              		.loc 1 136 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 6


 143 0070 04A8     		add	r0, sp, #16
 144 0072 FFF7FEFF 		bl	reflectance_read
 145              	.LVL20:
 137:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 138:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 146              		.loc 1 138 0
 147 0076 02A8     		add	r0, sp, #8
 148 0078 FFF7FEFF 		bl	reflectance_digital
 149              	.LVL21:
 139:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 140:main.c        ****         //CyDelay(1000); // comment this delay out when doing movement tests / racing !!!
 141:main.c        ****         
 142:main.c        ****         
 143:main.c        ****         // Line-following logic.
 144:main.c        ****         // NOTE: due to the calibration of the motor speeds, 240 (255 - 15) is our current max spee
 145:main.c        ****                
 146:main.c        ****         // When the measured blackness value drops below the threshold, start the appropriate turni
 147:main.c        ****         if (dig.l1 == 1)
 150              		.loc 1 147 0
 151 007c BDF80A30 		ldrh	r3, [sp, #10]
 152 0080 012B     		cmp	r3, #1
 153 0082 40F0B181 		bne	.L5
 154 0086 0027     		movs	r7, #0
 155 0088 B846     		mov	r8, r7
 156              	.LVL22:
 157              	.L26:
 148:main.c        ****         { 
 149:main.c        ****             // When the robot starts to veer off to the left, do a correction towards the right, un
 150:main.c        ****             do {
 151:main.c        ****                 
 152:main.c        ****                 // Obtain an initial value for blackness1_left, then close access to the if stateme
 153:main.c        ****                 if (loopCheck == 0)
 158              		.loc 1 153 0
 159 008a B8F1000F 		cmp	r8, #0
 160 008e 0DD1     		bne	.L51
 154:main.c        ****                 {
 155:main.c        ****                     reflectance_read(&ref);
 161              		.loc 1 155 0
 162 0090 04A8     		add	r0, sp, #16
 163 0092 FFF7FEFF 		bl	reflectance_read
 164              	.LVL23:
 156:main.c        ****                     blackness1_left = ref.l1;
 165              		.loc 1 156 0
 166 0096 BDF81200 		ldrh	r0, [sp, #18]
 167 009a FFF7FEFF 		bl	__aeabi_ui2f
 168              	.LVL24:
 169 009e 0646     		mov	r6, r0
 170              	.LVL25:
 157:main.c        ****                     CyDelay(1);
 171              		.loc 1 157 0
 172 00a0 0120     		movs	r0, #1
 173              	.LVL26:
 174 00a2 FFF7FEFF 		bl	CyDelay
 175              	.LVL27:
 158:main.c        ****                     loopCheck = 1;                   
 176              		.loc 1 158 0
 177 00a6 4FF00108 		mov	r8, #1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 7


 178 00aa 00E0     		b	.L6
 179              	.LVL28:
 180              	.L51:
 181 00ac 2646     		mov	r6, r4
 182              	.LVL29:
 183              	.L6:
 159:main.c        ****                 }
 160:main.c        ****                 
 161:main.c        ****                 // Obtain a second value (1 millisecond later).
 162:main.c        ****                 reflectance_read(&ref);
 184              		.loc 1 162 0
 185 00ae 04A8     		add	r0, sp, #16
 186 00b0 FFF7FEFF 		bl	reflectance_read
 187              	.LVL30:
 163:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 188              		.loc 1 163 0
 189 00b4 02A8     		add	r0, sp, #8
 190 00b6 FFF7FEFF 		bl	reflectance_digital
 191              	.LVL31:
 164:main.c        ****                 blackness2_left = ref.l1;
 192              		.loc 1 164 0
 193 00ba BDF81200 		ldrh	r0, [sp, #18]
 194 00be FFF7FEFF 		bl	__aeabi_ui2f
 195              	.LVL32:
 196 00c2 0446     		mov	r4, r0
 197              	.LVL33:
 165:main.c        ****                 
 166:main.c        ****                 // Calculate the difference between the two values.
 167:main.c        ****                 diff_left = blackness1_left - blackness2_left;
 198              		.loc 1 167 0
 199 00c4 3046     		mov	r0, r6
 200              	.LVL34:
 201 00c6 2146     		mov	r1, r4
 202 00c8 FFF7FEFF 		bl	__aeabi_fsub
 203              	.LVL35:
 204 00cc 0646     		mov	r6, r0
 205              	.LVL36:
 168:main.c        ****        
 169:main.c        ****                 // Make a switch statement based on the determined values of blackness2_left and di
 170:main.c        ****                 // NOTE: diff_Fast = 500 atm (for both sides, left and right).
 171:main.c        ****                 if (diff_left <= -diff_Fast) { diffCase = 1; }
 206              		.loc 1 171 0
 207 00ce 8549     		ldr	r1, .L86+20
 208 00d0 FFF7FEFF 		bl	__aeabi_fcmple
 209              	.LVL37:
 210 00d4 C8B9     		cbnz	r0, .L52
 172:main.c        ****                 else if (diff_left > -diff_Fast && diff_left < 0) { diffCase = 2; }            
 211              		.loc 1 172 0
 212 00d6 3046     		mov	r0, r6
 213 00d8 8249     		ldr	r1, .L86+20
 214 00da FFF7FEFF 		bl	__aeabi_fcmpgt
 215              	.LVL38:
 216 00de 20B1     		cbz	r0, .L8
 217              		.loc 1 172 0 is_stmt 0 discriminator 1
 218 00e0 3046     		mov	r0, r6
 219 00e2 0021     		movs	r1, #0
 220 00e4 FFF7FEFF 		bl	__aeabi_fcmplt
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 8


 221              	.LVL39:
 222 00e8 88B9     		cbnz	r0, .L53
 223              	.L8:
 173:main.c        ****                 else if (diff_left >= 0 && diff_left < diff_Fast) { diffCase = 3; }
 224              		.loc 1 173 0 is_stmt 1
 225 00ea 3046     		mov	r0, r6
 226 00ec 0021     		movs	r1, #0
 227 00ee FFF7FEFF 		bl	__aeabi_fcmpge
 228              	.LVL40:
 229 00f2 20B1     		cbz	r0, .L10
 230              		.loc 1 173 0 is_stmt 0 discriminator 1
 231 00f4 3046     		mov	r0, r6
 232 00f6 7C49     		ldr	r1, .L86+24
 233 00f8 FFF7FEFF 		bl	__aeabi_fcmplt
 234              	.LVL41:
 235 00fc 48B9     		cbnz	r0, .L54
 236              	.L10:
 174:main.c        ****                 else if (diff_left >= diff_Fast) { diffCase = 4; }
 237              		.loc 1 174 0 is_stmt 1
 238 00fe 3046     		mov	r0, r6
 239 0100 7949     		ldr	r1, .L86+24
 240 0102 FFF7FEFF 		bl	__aeabi_fcmpge
 241              	.LVL42:
 242 0106 30B9     		cbnz	r0, .L55
 243 0108 06E0     		b	.L7
 244              	.L52:
 171:main.c        ****                 else if (diff_left > -diff_Fast && diff_left < 0) { diffCase = 2; }            
 245              		.loc 1 171 0
 246 010a 0125     		movs	r5, #1
 247              	.LVL43:
 248 010c 04E0     		b	.L7
 249              	.LVL44:
 250              	.L53:
 172:main.c        ****                 else if (diff_left >= 0 && diff_left < diff_Fast) { diffCase = 3; }
 251              		.loc 1 172 0
 252 010e 0225     		movs	r5, #2
 253              	.LVL45:
 254 0110 02E0     		b	.L7
 255              	.LVL46:
 256              	.L54:
 173:main.c        ****                 else if (diff_left >= diff_Fast) { diffCase = 4; }
 257              		.loc 1 173 0
 258 0112 0325     		movs	r5, #3
 259              	.LVL47:
 260 0114 00E0     		b	.L7
 261              	.LVL48:
 262              	.L55:
 263              		.loc 1 174 0
 264 0116 0425     		movs	r5, #4
 265              	.LVL49:
 266              	.L7:
 175:main.c        ****                 
 176:main.c        ****                 switch (diffCase)
 267              		.loc 1 176 0
 268 0118 6B1E     		subs	r3, r5, #1
 269 011a 032B     		cmp	r3, #3
 270 011c 00F25281 		bhi	.L12
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 9


 271 0120 DFE813F0 		tbh	[pc, r3, lsl #1]
 272              	.L14:
 273 0124 0400     		.2byte	(.L13-.L14)/2
 274 0126 1C00     		.2byte	(.L15-.L14)/2
 275 0128 7900     		.2byte	(.L16-.L14)/2
 276 012a F400     		.2byte	(.L17-.L14)/2
 277              		.p2align 1
 278              	.L13:
 177:main.c        ****                 {
 178:main.c        ****                     case 1: // diff_left <= -diff_Fast
 179:main.c        ****                     
 180:main.c        ****                         // moving fast towards center of line
 181:main.c        ****                         
 182:main.c        ****                         if (blackness2_left < 16000) 
 279              		.loc 1 182 0
 280 012c 2046     		mov	r0, r4
 281 012e 6F49     		ldr	r1, .L86+28
 282 0130 FFF7FEFF 		bl	__aeabi_fcmplt
 283              	.LVL50:
 284 0134 0028     		cmp	r0, #0
 285 0136 00F04481 		beq	.L77
 183:main.c        ****                         {
 184:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 286              		.loc 1 184 0
 287 013a 6D48     		ldr	r0, .L86+32
 288 013c 2146     		mov	r1, r4
 289 013e FFF7FEFF 		bl	__aeabi_fsub
 290              	.LVL51:
 291 0142 6B49     		ldr	r1, .L86+32
 292 0144 FFF7FEFF 		bl	__aeabi_fdiv
 293              	.LVL52:
 294 0148 FFF7FEFF 		bl	__aeabi_f2d
 295              	.LVL53:
 296 014c 0022     		movs	r2, #0
 297 014e 694B     		ldr	r3, .L86+36
 298 0150 FFF7FEFF 		bl	__aeabi_dmul
 299              	.LVL54:
 300 0154 FFF7FEFF 		bl	__aeabi_d2uiz
 301              	.LVL55:
 302 0158 C7B2     		uxtb	r7, r0
 303              	.LVL56:
 304 015a 33E1     		b	.L12
 305              	.L15:
 185:main.c        ****                             
 186:main.c        ****                         } else {
 187:main.c        ****                         
 188:main.c        ****                             turn = 0;
 189:main.c        ****                         }
 190:main.c        ****                               
 191:main.c        ****                     break;
 192:main.c        ****                     
 193:main.c        ****                     case 2: // -diff_Fast < diff_left < 0
 194:main.c        ****                     
 195:main.c        ****                         // moving at a moderate speed towards center of line
 196:main.c        ****                     
 197:main.c        ****                         if (blackness2_left < 16000) 
 306              		.loc 1 197 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 10


 307 015c 2046     		mov	r0, r4
 308 015e 6349     		ldr	r1, .L86+28
 309 0160 FFF7FEFF 		bl	__aeabi_fcmplt
 310              	.LVL57:
 311 0164 58B3     		cbz	r0, .L78
 198:main.c        ****                         {
 199:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 312              		.loc 1 199 0
 313 0166 6248     		ldr	r0, .L86+32
 314 0168 2146     		mov	r1, r4
 315 016a FFF7FEFF 		bl	__aeabi_fsub
 316              	.LVL58:
 317 016e 6049     		ldr	r1, .L86+32
 318 0170 FFF7FEFF 		bl	__aeabi_fdiv
 319              	.LVL59:
 320 0174 FFF7FEFF 		bl	__aeabi_f2d
 321              	.LVL60:
 322 0178 0022     		movs	r2, #0
 323 017a 5E4B     		ldr	r3, .L86+36
 324 017c FFF7FEFF 		bl	__aeabi_dmul
 325              	.LVL61:
 326 0180 FFF7FEFF 		bl	__aeabi_d2uiz
 327              	.LVL62:
 328 0184 5FFA80FB 		uxtb	fp, r0
 329              	.LVL63:
 200:main.c        ****                             turn += 1.4 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 330              		.loc 1 200 0
 331 0188 3046     		mov	r0, r6
 332 018a 3146     		mov	r1, r6
 333 018c FFF7FEFF 		bl	__aeabi_fmul
 334              	.LVL64:
 335 0190 5949     		ldr	r1, .L86+40
 336 0192 FFF7FEFF 		bl	__aeabi_fdiv
 337              	.LVL65:
 338 0196 FFF7FEFF 		bl	__aeabi_f2d
 339              	.LVL66:
 340 019a 4DA3     		adr	r3, .L86
 341 019c D3E90023 		ldrd	r2, [r3]
 342 01a0 FFF7FEFF 		bl	__aeabi_dmul
 343              	.LVL67:
 344 01a4 0646     		mov	r6, r0
 345              	.LVL68:
 346 01a6 0F46     		mov	r7, r1
 347 01a8 5846     		mov	r0, fp
 348 01aa FFF7FEFF 		bl	__aeabi_i2d
 349              	.LVL69:
 350 01ae 3246     		mov	r2, r6
 351 01b0 3B46     		mov	r3, r7
 352 01b2 FFF7FEFF 		bl	__aeabi_dadd
 353              	.LVL70:
 354 01b6 FFF7FEFF 		bl	__aeabi_d2uiz
 355              	.LVL71:
 356 01ba C7B2     		uxtb	r7, r0
 357              	.LVL72:
 358 01bc 02E1     		b	.L12
 359              	.LVL73:
 360              	.L78:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 11


 201:main.c        ****                             
 202:main.c        ****                         } else {
 203:main.c        ****                         
 204:main.c        ****                             turn = 1.1 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 361              		.loc 1 204 0
 362 01be 4C48     		ldr	r0, .L86+32
 363 01c0 2146     		mov	r1, r4
 364 01c2 FFF7FEFF 		bl	__aeabi_fsub
 365              	.LVL74:
 366 01c6 4A49     		ldr	r1, .L86+32
 367 01c8 FFF7FEFF 		bl	__aeabi_fdiv
 368              	.LVL75:
 369 01cc FFF7FEFF 		bl	__aeabi_f2d
 370              	.LVL76:
 371 01d0 0022     		movs	r2, #0
 372 01d2 4A4B     		ldr	r3, .L86+44
 373 01d4 FFF7FEFF 		bl	__aeabi_dmul
 374              	.LVL77:
 375 01d8 FFF7FEFF 		bl	__aeabi_d2uiz
 376              	.LVL78:
 377 01dc 5FFA80FB 		uxtb	fp, r0
 378              	.LVL79:
 205:main.c        ****                             turn -= 1.1 * ( (diff_left * diff_left / maxDiff_l1)); //subtracts from
 379              		.loc 1 205 0
 380 01e0 3046     		mov	r0, r6
 381 01e2 3146     		mov	r1, r6
 382 01e4 FFF7FEFF 		bl	__aeabi_fmul
 383              	.LVL80:
 384 01e8 4349     		ldr	r1, .L86+40
 385 01ea FFF7FEFF 		bl	__aeabi_fdiv
 386              	.LVL81:
 387 01ee FFF7FEFF 		bl	__aeabi_f2d
 388              	.LVL82:
 389 01f2 39A3     		adr	r3, .L86+8
 390 01f4 D3E90023 		ldrd	r2, [r3]
 391 01f8 FFF7FEFF 		bl	__aeabi_dmul
 392              	.LVL83:
 393 01fc 0646     		mov	r6, r0
 394              	.LVL84:
 395 01fe 0F46     		mov	r7, r1
 396 0200 5846     		mov	r0, fp
 397 0202 FFF7FEFF 		bl	__aeabi_i2d
 398              	.LVL85:
 399 0206 3246     		mov	r2, r6
 400 0208 3B46     		mov	r3, r7
 401 020a FFF7FEFF 		bl	__aeabi_dsub
 402              	.LVL86:
 403 020e FFF7FEFF 		bl	__aeabi_d2uiz
 404              	.LVL87:
 405 0212 C7B2     		uxtb	r7, r0
 406              	.LVL88:
 407 0214 D6E0     		b	.L12
 408              	.LVL89:
 409              	.L16:
 206:main.c        ****                         }
 207:main.c        ****                                                          
 208:main.c        ****                     break;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 12


 209:main.c        ****                         
 210:main.c        ****                     case 3: // 0 <= diff_left < diff_Fast
 211:main.c        ****                         
 212:main.c        ****                         // moving at a moderate speed away from center of line
 213:main.c        ****                         
 214:main.c        ****                         if (blackness2_left < 16000) 
 410              		.loc 1 214 0
 411 0216 2046     		mov	r0, r4
 412 0218 3449     		ldr	r1, .L86+28
 413 021a FFF7FEFF 		bl	__aeabi_fcmplt
 414              	.LVL90:
 415 021e 48B3     		cbz	r0, .L79
 215:main.c        ****                         {
 216:main.c        ****                             turn = 1.3 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 416              		.loc 1 216 0
 417 0220 3348     		ldr	r0, .L86+32
 418 0222 2146     		mov	r1, r4
 419 0224 FFF7FEFF 		bl	__aeabi_fsub
 420              	.LVL91:
 421 0228 3149     		ldr	r1, .L86+32
 422 022a FFF7FEFF 		bl	__aeabi_fdiv
 423              	.LVL92:
 424 022e FFF7FEFF 		bl	__aeabi_f2d
 425              	.LVL93:
 426 0232 0022     		movs	r2, #0
 427 0234 324B     		ldr	r3, .L86+48
 428 0236 FFF7FEFF 		bl	__aeabi_dmul
 429              	.LVL94:
 430 023a FFF7FEFF 		bl	__aeabi_d2uiz
 431              	.LVL95:
 432 023e C7B2     		uxtb	r7, r0
 433              	.LVL96:
 217:main.c        ****                             turn += 1.5 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 434              		.loc 1 217 0
 435 0240 3046     		mov	r0, r6
 436 0242 3146     		mov	r1, r6
 437 0244 FFF7FEFF 		bl	__aeabi_fmul
 438              	.LVL97:
 439 0248 2B49     		ldr	r1, .L86+40
 440 024a FFF7FEFF 		bl	__aeabi_fdiv
 441              	.LVL98:
 442 024e FFF7FEFF 		bl	__aeabi_f2d
 443              	.LVL99:
 444 0252 0022     		movs	r2, #0
 445 0254 2B4B     		ldr	r3, .L86+52
 446 0256 FFF7FEFF 		bl	__aeabi_dmul
 447              	.LVL100:
 448 025a CDE90001 		strd	r0, [sp]
 449 025e 3846     		mov	r0, r7
 450 0260 FFF7FEFF 		bl	__aeabi_i2d
 451              	.LVL101:
 452 0264 DDE90023 		ldrd	r2, [sp]
 453 0268 FFF7FEFF 		bl	__aeabi_dadd
 454              	.LVL102:
 455 026c FFF7FEFF 		bl	__aeabi_d2uiz
 456              	.LVL103:
 457 0270 C7B2     		uxtb	r7, r0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 13


 458              	.LVL104:
 459 0272 A7E0     		b	.L12
 460              	.L79:
 218:main.c        ****                             
 219:main.c        ****                         } else {
 220:main.c        ****                         
 221:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 461              		.loc 1 221 0
 462 0274 1E48     		ldr	r0, .L86+32
 463 0276 2146     		mov	r1, r4
 464 0278 FFF7FEFF 		bl	__aeabi_fsub
 465              	.LVL105:
 466 027c 1C49     		ldr	r1, .L86+32
 467 027e FFF7FEFF 		bl	__aeabi_fdiv
 468              	.LVL106:
 469 0282 FFF7FEFF 		bl	__aeabi_f2d
 470              	.LVL107:
 471 0286 0022     		movs	r2, #0
 472 0288 1A4B     		ldr	r3, .L86+36
 473 028a FFF7FEFF 		bl	__aeabi_dmul
 474              	.LVL108:
 475 028e FFF7FEFF 		bl	__aeabi_d2uiz
 476              	.LVL109:
 477 0292 C7B2     		uxtb	r7, r0
 478              	.LVL110:
 222:main.c        ****                             turn += 1.4 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 479              		.loc 1 222 0
 480 0294 3046     		mov	r0, r6
 481 0296 3146     		mov	r1, r6
 482 0298 FFF7FEFF 		bl	__aeabi_fmul
 483              	.LVL111:
 484 029c 1649     		ldr	r1, .L86+40
 485 029e FFF7FEFF 		bl	__aeabi_fdiv
 486              	.LVL112:
 487 02a2 FFF7FEFF 		bl	__aeabi_f2d
 488              	.LVL113:
 489 02a6 0AA3     		adr	r3, .L86
 490 02a8 D3E90023 		ldrd	r2, [r3]
 491 02ac FFF7FEFF 		bl	__aeabi_dmul
 492              	.LVL114:
 493 02b0 CDE90001 		strd	r0, [sp]
 494 02b4 3846     		mov	r0, r7
 495 02b6 FFF7FEFF 		bl	__aeabi_i2d
 496              	.LVL115:
 497 02ba DDE90023 		ldrd	r2, [sp]
 498 02be FFF7FEFF 		bl	__aeabi_dadd
 499              	.LVL116:
 500 02c2 FFF7FEFF 		bl	__aeabi_d2uiz
 501              	.LVL117:
 502 02c6 C7B2     		uxtb	r7, r0
 503              	.LVL118:
 504 02c8 7CE0     		b	.L12
 505              	.L87:
 506 02ca 00BFAFF3 		.align	3
 506      0080
 507              	.L86:
 508 02d0 66666666 		.word	1717986918
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 14


 509 02d4 6666F63F 		.word	1073112678
 510 02d8 9A999999 		.word	-1717986918
 511 02dc 9999F13F 		.word	1072798105
 512 02e0 00000000 		.word	sensor_isr_handler
 513 02e4 0000FAC3 		.word	-1007026176
 514 02e8 0000FA43 		.word	1140457472
 515 02ec 00007A46 		.word	1182400512
 516 02f0 00A08C46 		.word	1183621120
 517 02f4 00007240 		.word	1081212928
 518 02f8 00F05246 		.word	1179840512
 519 02fc 00807040 		.word	1081114624
 520 0300 00807340 		.word	1081311232
 521 0304 0000F83F 		.word	1073217536
 522 0308 007EBB46 		.word	1186692608
 523              	.L17:
 223:main.c        ****                         }
 224:main.c        ****                         
 225:main.c        ****                     break;   
 226:main.c        ****                         
 227:main.c        ****                     case 4: // diff_left >= diff_Fast
 228:main.c        ****                         
 229:main.c        ****                         // moving at a fast speed away from center of line
 230:main.c        ****                     
 231:main.c        ****                         if (blackness2_left < 16000) 
 524              		.loc 1 231 0
 525 030c 2046     		mov	r0, r4
 526 030e A649     		ldr	r1, .L88+32
 527 0310 FFF7FEFF 		bl	__aeabi_fcmplt
 528              	.LVL119:
 529 0314 50B3     		cbz	r0, .L80
 232:main.c        ****                         {
 233:main.c        ****                             turn = 1.5 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 530              		.loc 1 233 0
 531 0316 A548     		ldr	r0, .L88+36
 532 0318 2146     		mov	r1, r4
 533 031a FFF7FEFF 		bl	__aeabi_fsub
 534              	.LVL120:
 535 031e A349     		ldr	r1, .L88+36
 536 0320 FFF7FEFF 		bl	__aeabi_fdiv
 537              	.LVL121:
 538 0324 FFF7FEFF 		bl	__aeabi_f2d
 539              	.LVL122:
 540 0328 0022     		movs	r2, #0
 541 032a A14B     		ldr	r3, .L88+40
 542 032c FFF7FEFF 		bl	__aeabi_dmul
 543              	.LVL123:
 544 0330 FFF7FEFF 		bl	__aeabi_d2uiz
 545              	.LVL124:
 546 0334 C7B2     		uxtb	r7, r0
 547              	.LVL125:
 234:main.c        ****                             turn += 1.7 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 548              		.loc 1 234 0
 549 0336 3046     		mov	r0, r6
 550 0338 3146     		mov	r1, r6
 551 033a FFF7FEFF 		bl	__aeabi_fmul
 552              	.LVL126:
 553 033e 9D49     		ldr	r1, .L88+44
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 15


 554 0340 FFF7FEFF 		bl	__aeabi_fdiv
 555              	.LVL127:
 556 0344 FFF7FEFF 		bl	__aeabi_f2d
 557              	.LVL128:
 558 0348 8FA3     		adr	r3, .L88
 559 034a D3E90023 		ldrd	r2, [r3]
 560 034e FFF7FEFF 		bl	__aeabi_dmul
 561              	.LVL129:
 562 0352 CDE90001 		strd	r0, [sp]
 563 0356 3846     		mov	r0, r7
 564 0358 FFF7FEFF 		bl	__aeabi_i2d
 565              	.LVL130:
 566 035c DDE90023 		ldrd	r2, [sp]
 567 0360 FFF7FEFF 		bl	__aeabi_dadd
 568              	.LVL131:
 569 0364 FFF7FEFF 		bl	__aeabi_d2uiz
 570              	.LVL132:
 571 0368 C7B2     		uxtb	r7, r0
 572              	.LVL133:
 573 036a 2BE0     		b	.L12
 574              	.L80:
 235:main.c        ****                             
 236:main.c        ****                         } else {
 237:main.c        ****                         
 238:main.c        ****                             turn = 1.4 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 575              		.loc 1 238 0
 576 036c 8F48     		ldr	r0, .L88+36
 577 036e 2146     		mov	r1, r4
 578 0370 FFF7FEFF 		bl	__aeabi_fsub
 579              	.LVL134:
 580 0374 8D49     		ldr	r1, .L88+36
 581 0376 FFF7FEFF 		bl	__aeabi_fdiv
 582              	.LVL135:
 583 037a FFF7FEFF 		bl	__aeabi_f2d
 584              	.LVL136:
 585 037e 0022     		movs	r2, #0
 586 0380 8D4B     		ldr	r3, .L88+48
 587 0382 FFF7FEFF 		bl	__aeabi_dmul
 588              	.LVL137:
 589 0386 FFF7FEFF 		bl	__aeabi_d2uiz
 590              	.LVL138:
 591 038a C7B2     		uxtb	r7, r0
 592              	.LVL139:
 239:main.c        ****                             turn += 1.6 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 593              		.loc 1 239 0
 594 038c 3046     		mov	r0, r6
 595 038e 3146     		mov	r1, r6
 596 0390 FFF7FEFF 		bl	__aeabi_fmul
 597              	.LVL140:
 598 0394 8749     		ldr	r1, .L88+44
 599 0396 FFF7FEFF 		bl	__aeabi_fdiv
 600              	.LVL141:
 601 039a FFF7FEFF 		bl	__aeabi_f2d
 602              	.LVL142:
 603 039e 7CA3     		adr	r3, .L88+8
 604 03a0 D3E90023 		ldrd	r2, [r3]
 605 03a4 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 16


 606              	.LVL143:
 607 03a8 CDE90001 		strd	r0, [sp]
 608 03ac 3846     		mov	r0, r7
 609 03ae FFF7FEFF 		bl	__aeabi_i2d
 610              	.LVL144:
 611 03b2 DDE90023 		ldrd	r2, [sp]
 612 03b6 FFF7FEFF 		bl	__aeabi_dadd
 613              	.LVL145:
 614 03ba FFF7FEFF 		bl	__aeabi_d2uiz
 615              	.LVL146:
 616 03be C7B2     		uxtb	r7, r0
 617              	.LVL147:
 618 03c0 00E0     		b	.L12
 619              	.L77:
 188:main.c        ****                         }
 620              		.loc 1 188 0
 621 03c2 0027     		movs	r7, #0
 622              	.LVL148:
 623              	.L12:
 240:main.c        ****                         }
 241:main.c        ****                         
 242:main.c        ****                     break;
 243:main.c        ****                                                                   
 244:main.c        ****                     // possible case 5: diff_left > 9000 (or some high value)
 245:main.c        ****                     // there can be an infinite number of cases for increasingly finer control...
 246:main.c        ****                 }
 247:main.c        ****                 
 248:main.c        ****                 // Check for egregious values of 'turn' and correct them if found
 249:main.c        ****                 if (turn > 240)
 624              		.loc 1 249 0
 625 03c4 F02F     		cmp	r7, #240
 626 03c6 00D9     		bls	.L25
 250:main.c        ****                 {
 251:main.c        ****                     turn = 240;
 627              		.loc 1 251 0
 628 03c8 F027     		movs	r7, #240
 629              	.LVL149:
 630              	.L25:
 252:main.c        ****                 } else if (turn < 0) {
 253:main.c        ****                     turn = 0;   
 254:main.c        ****                 }
 255:main.c        ****                                                           
 256:main.c        ****                 // Execute the turn.
 257:main.c        ****                 Right_turn(turn);
 631              		.loc 1 257 0
 632 03ca 3846     		mov	r0, r7
 633 03cc FFF7FEFF 		bl	Right_turn
 634              	.LVL150:
 258:main.c        ****                              
 259:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 260:main.c        ****                 // As the loop continues, blackness2's value is stored in blackness1 and then black
 261:main.c        ****                 blackness1_left = blackness2_left;
 262:main.c        ****                 
 263:main.c        ****                 CyDelay(1);
 635              		.loc 1 263 0
 636 03d0 0120     		movs	r0, #1
 637 03d2 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 17


 638              	.LVL151:
 264:main.c        ****           
 265:main.c        ****                 turnFlag = 1;
 266:main.c        ****                 
 267:main.c        ****             } while (dig.l1 == 1);
 639              		.loc 1 267 0
 640 03d6 BDF80A30 		ldrh	r3, [sp, #10]
 641 03da 012B     		cmp	r3, #1
 642 03dc 3FF455AE 		beq	.L26
 643              	.LVL152:
 268:main.c        ****                                     
 269:main.c        ****             if (turnFlag == 1) 
 270:main.c        ****             {
 271:main.c        ****                 // After each executed turn, do a small 'corrective twitch' in the opposite directi
 272:main.c        ****                 //Left_turn(speed/2); // experimental value
 273:main.c        ****                 //CyDelay(10); // experimental value
 274:main.c        ****                 
 275:main.c        ****                 // Return 'loopCheck' to its initial value, so that we can get an initial measureme
 276:main.c        ****                 // once the turn loop starts again (i.e. when the robot needs to turn again).
 277:main.c        ****                 loopCheck = 0;
 278:main.c        ****               
 279:main.c        ****                 // For added safety, set turn to zero... May not be necessary.
 280:main.c        ****                 turn = 0;
 281:main.c        ****                 // Since the turn has ended, continue forward at the designated speed.
 282:main.c        ****                 Custom_forward(speed);
 644              		.loc 1 282 0
 645 03e0 F020     		movs	r0, #240
 646 03e2 FFF7FEFF 		bl	Custom_forward
 647              	.LVL153:
 648 03e6 BEE1     		b	.L27
 649              	.LVL154:
 650              	.L5:
 283:main.c        ****                 
 284:main.c        ****                 turnFlag = 0;
 285:main.c        ****             }
 286:main.c        ****                               
 287:main.c        ****         } else if (dig.r1 == 1) {
 651              		.loc 1 287 0
 652 03e8 BDF80C30 		ldrh	r3, [sp, #12]
 653 03ec 012B     		cmp	r3, #1
 654 03ee 40F0BA81 		bne	.L27
 655 03f2 0027     		movs	r7, #0
 656 03f4 B846     		mov	r8, r7
 657              	.LVL155:
 658              	.L48:
 288:main.c        ****             
 289:main.c        ****             // When the robot starts to veer off to the right, do a correction towards the left, un
 290:main.c        ****             do {
 291:main.c        ****                 
 292:main.c        ****                 // Obtain an initial value for blackness1_right, then close access to the if statem
 293:main.c        ****                 if (loopCheck == 0)
 659              		.loc 1 293 0
 660 03f6 B8F1000F 		cmp	r8, #0
 661 03fa 0DD1     		bne	.L58
 294:main.c        ****                 {
 295:main.c        ****                     reflectance_read(&ref);
 662              		.loc 1 295 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 18


 663 03fc 04A8     		add	r0, sp, #16
 664 03fe FFF7FEFF 		bl	reflectance_read
 665              	.LVL156:
 296:main.c        ****                     blackness1_right = ref.r1;
 666              		.loc 1 296 0
 667 0402 BDF81400 		ldrh	r0, [sp, #20]
 668 0406 FFF7FEFF 		bl	__aeabi_ui2f
 669              	.LVL157:
 670 040a 0646     		mov	r6, r0
 671              	.LVL158:
 297:main.c        ****                     CyDelay(1);
 672              		.loc 1 297 0
 673 040c 0120     		movs	r0, #1
 674              	.LVL159:
 675 040e FFF7FEFF 		bl	CyDelay
 676              	.LVL160:
 298:main.c        ****                     loopCheck = 1;
 677              		.loc 1 298 0
 678 0412 4FF00108 		mov	r8, #1
 679 0416 00E0     		b	.L28
 680              	.LVL161:
 681              	.L58:
 682 0418 4E46     		mov	r6, r9
 683              	.LVL162:
 684              	.L28:
 299:main.c        ****                 }
 300:main.c        ****                 
 301:main.c        ****                 // Obtain a second value (1 millisecond later).
 302:main.c        ****                 reflectance_read(&ref);
 685              		.loc 1 302 0
 686 041a 04A8     		add	r0, sp, #16
 687 041c FFF7FEFF 		bl	reflectance_read
 688              	.LVL163:
 303:main.c        ****                 reflectance_digital(&dig); 
 689              		.loc 1 303 0
 690 0420 02A8     		add	r0, sp, #8
 691 0422 FFF7FEFF 		bl	reflectance_digital
 692              	.LVL164:
 304:main.c        ****                 blackness2_right = ref.r1;
 693              		.loc 1 304 0
 694 0426 BDF81400 		ldrh	r0, [sp, #20]
 695 042a FFF7FEFF 		bl	__aeabi_ui2f
 696              	.LVL165:
 697 042e 8146     		mov	r9, r0
 698              	.LVL166:
 305:main.c        ****                 
 306:main.c        ****                 // Calculate the difference between the two values.
 307:main.c        ****                 diff_right = blackness1_right - blackness2_right;
 699              		.loc 1 307 0
 700 0430 3046     		mov	r0, r6
 701              	.LVL167:
 702 0432 4946     		mov	r1, r9
 703 0434 FFF7FEFF 		bl	__aeabi_fsub
 704              	.LVL168:
 705 0438 0646     		mov	r6, r0
 706              	.LVL169:
 308:main.c        **** 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 19


 309:main.c        ****                 // Make a switch statement based on the determined values of blackness2_right and d
 310:main.c        ****                 // NOTE: diff_Fast = 500 atm (for both sides, left and right).
 311:main.c        ****                 if (diff_right <= -diff_Fast) { diffCase = 1; }
 707              		.loc 1 311 0
 708 043a 6049     		ldr	r1, .L88+52
 709 043c FFF7FEFF 		bl	__aeabi_fcmple
 710              	.LVL170:
 711 0440 C8B9     		cbnz	r0, .L59
 312:main.c        ****                 else if (diff_right > -diff_Fast && diff_right < 0) { diffCase = 2; }            
 712              		.loc 1 312 0
 713 0442 3046     		mov	r0, r6
 714 0444 5D49     		ldr	r1, .L88+52
 715 0446 FFF7FEFF 		bl	__aeabi_fcmpgt
 716              	.LVL171:
 717 044a 20B1     		cbz	r0, .L30
 718              		.loc 1 312 0 is_stmt 0 discriminator 1
 719 044c 3046     		mov	r0, r6
 720 044e 0021     		movs	r1, #0
 721 0450 FFF7FEFF 		bl	__aeabi_fcmplt
 722              	.LVL172:
 723 0454 88B9     		cbnz	r0, .L60
 724              	.L30:
 313:main.c        ****                 else if (diff_right >= 0 && diff_right < diff_Fast) { diffCase = 3; }
 725              		.loc 1 313 0 is_stmt 1
 726 0456 3046     		mov	r0, r6
 727 0458 0021     		movs	r1, #0
 728 045a FFF7FEFF 		bl	__aeabi_fcmpge
 729              	.LVL173:
 730 045e 20B1     		cbz	r0, .L32
 731              		.loc 1 313 0 is_stmt 0 discriminator 1
 732 0460 3046     		mov	r0, r6
 733 0462 5749     		ldr	r1, .L88+56
 734 0464 FFF7FEFF 		bl	__aeabi_fcmplt
 735              	.LVL174:
 736 0468 48B9     		cbnz	r0, .L61
 737              	.L32:
 314:main.c        ****                 else if (diff_right >= diff_Fast) { diffCase = 4; }
 738              		.loc 1 314 0 is_stmt 1
 739 046a 3046     		mov	r0, r6
 740 046c 5449     		ldr	r1, .L88+56
 741 046e FFF7FEFF 		bl	__aeabi_fcmpge
 742              	.LVL175:
 743 0472 30B9     		cbnz	r0, .L62
 744 0474 06E0     		b	.L29
 745              	.L59:
 311:main.c        ****                 else if (diff_right > -diff_Fast && diff_right < 0) { diffCase = 2; }            
 746              		.loc 1 311 0
 747 0476 0125     		movs	r5, #1
 748              	.LVL176:
 749 0478 04E0     		b	.L29
 750              	.LVL177:
 751              	.L60:
 312:main.c        ****                 else if (diff_right >= 0 && diff_right < diff_Fast) { diffCase = 3; }
 752              		.loc 1 312 0
 753 047a 0225     		movs	r5, #2
 754              	.LVL178:
 755 047c 02E0     		b	.L29
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 20


 756              	.LVL179:
 757              	.L61:
 313:main.c        ****                 else if (diff_right >= diff_Fast) { diffCase = 4; }
 758              		.loc 1 313 0
 759 047e 0325     		movs	r5, #3
 760              	.LVL180:
 761 0480 00E0     		b	.L29
 762              	.LVL181:
 763              	.L62:
 764              		.loc 1 314 0
 765 0482 0425     		movs	r5, #4
 766              	.LVL182:
 767              	.L29:
 315:main.c        ****                 
 316:main.c        ****                 switch (diffCase)
 768              		.loc 1 316 0
 769 0484 6B1E     		subs	r3, r5, #1
 770 0486 032B     		cmp	r3, #3
 771 0488 00F25C81 		bhi	.L34
 772 048c DFE813F0 		tbh	[pc, r3, lsl #1]
 773              	.L36:
 774 0490 0400     		.2byte	(.L35-.L36)/2
 775 0492 1C00     		.2byte	(.L37-.L36)/2
 776 0494 A400     		.2byte	(.L38-.L36)/2
 777 0496 FE00     		.2byte	(.L39-.L36)/2
 778              		.p2align 1
 779              	.L35:
 317:main.c        ****                 {
 318:main.c        ****                     case 1: // diff_right <= -diff_Fast
 319:main.c        ****                     
 320:main.c        ****                         // moving fast towards center of line
 321:main.c        ****                         
 322:main.c        ****                         if (blackness2_right < 19200) 
 780              		.loc 1 322 0
 781 0498 4846     		mov	r0, r9
 782 049a 4A49     		ldr	r1, .L88+60
 783 049c FFF7FEFF 		bl	__aeabi_fcmplt
 784              	.LVL183:
 785 04a0 0028     		cmp	r0, #0
 786 04a2 00F04E81 		beq	.L81
 323:main.c        ****                         {
 324:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 787              		.loc 1 324 0
 788 04a6 4848     		ldr	r0, .L88+64
 789 04a8 4946     		mov	r1, r9
 790 04aa FFF7FEFF 		bl	__aeabi_fsub
 791              	.LVL184:
 792 04ae 4649     		ldr	r1, .L88+64
 793 04b0 FFF7FEFF 		bl	__aeabi_fdiv
 794              	.LVL185:
 795 04b4 FFF7FEFF 		bl	__aeabi_f2d
 796              	.LVL186:
 797 04b8 0022     		movs	r2, #0
 798 04ba 444B     		ldr	r3, .L88+68
 799 04bc FFF7FEFF 		bl	__aeabi_dmul
 800              	.LVL187:
 801 04c0 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 21


 802              	.LVL188:
 803 04c4 C7B2     		uxtb	r7, r0
 804              	.LVL189:
 805 04c6 3DE1     		b	.L34
 806              	.L37:
 325:main.c        ****                             
 326:main.c        ****                         } else {
 327:main.c        ****                         
 328:main.c        ****                             turn = 0;
 329:main.c        ****                         }
 330:main.c        ****                               
 331:main.c        ****                     break;
 332:main.c        ****                     
 333:main.c        ****                     case 2: // -diff_Fast < diff_right < 0
 334:main.c        ****                     
 335:main.c        ****                         // moving at a moderate speed towards center of line
 336:main.c        ****                     
 337:main.c        ****                         if (blackness2_right < 19200) 
 807              		.loc 1 337 0
 808 04c8 4846     		mov	r0, r9
 809 04ca 3E49     		ldr	r1, .L88+60
 810 04cc FFF7FEFF 		bl	__aeabi_fcmplt
 811              	.LVL190:
 812 04d0 58B3     		cbz	r0, .L82
 338:main.c        ****                         {
 339:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 813              		.loc 1 339 0
 814 04d2 3D48     		ldr	r0, .L88+64
 815 04d4 4946     		mov	r1, r9
 816 04d6 FFF7FEFF 		bl	__aeabi_fsub
 817              	.LVL191:
 818 04da 3B49     		ldr	r1, .L88+64
 819 04dc FFF7FEFF 		bl	__aeabi_fdiv
 820              	.LVL192:
 821 04e0 FFF7FEFF 		bl	__aeabi_f2d
 822              	.LVL193:
 823 04e4 0022     		movs	r2, #0
 824 04e6 394B     		ldr	r3, .L88+68
 825 04e8 FFF7FEFF 		bl	__aeabi_dmul
 826              	.LVL194:
 827 04ec FFF7FEFF 		bl	__aeabi_d2uiz
 828              	.LVL195:
 829 04f0 5FFA80FB 		uxtb	fp, r0
 830              	.LVL196:
 340:main.c        ****                             turn += 1.4 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 831              		.loc 1 340 0
 832 04f4 3046     		mov	r0, r6
 833 04f6 3146     		mov	r1, r6
 834 04f8 FFF7FEFF 		bl	__aeabi_fmul
 835              	.LVL197:
 836 04fc 3449     		ldr	r1, .L88+72
 837 04fe FFF7FEFF 		bl	__aeabi_fdiv
 838              	.LVL198:
 839 0502 FFF7FEFF 		bl	__aeabi_f2d
 840              	.LVL199:
 841 0506 24A3     		adr	r3, .L88+16
 842 0508 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 22


 843 050c FFF7FEFF 		bl	__aeabi_dmul
 844              	.LVL200:
 845 0510 0646     		mov	r6, r0
 846              	.LVL201:
 847 0512 0F46     		mov	r7, r1
 848 0514 5846     		mov	r0, fp
 849 0516 FFF7FEFF 		bl	__aeabi_i2d
 850              	.LVL202:
 851 051a 3246     		mov	r2, r6
 852 051c 3B46     		mov	r3, r7
 853 051e FFF7FEFF 		bl	__aeabi_dadd
 854              	.LVL203:
 855 0522 FFF7FEFF 		bl	__aeabi_d2uiz
 856              	.LVL204:
 857 0526 C7B2     		uxtb	r7, r0
 858              	.LVL205:
 859 0528 0CE1     		b	.L34
 860              	.LVL206:
 861              	.L82:
 341:main.c        ****                             
 342:main.c        ****                         } else {
 343:main.c        ****                         
 344:main.c        ****                             turn = 1.1 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 862              		.loc 1 344 0
 863 052a 2748     		ldr	r0, .L88+64
 864 052c 4946     		mov	r1, r9
 865 052e FFF7FEFF 		bl	__aeabi_fsub
 866              	.LVL207:
 867 0532 2549     		ldr	r1, .L88+64
 868 0534 FFF7FEFF 		bl	__aeabi_fdiv
 869              	.LVL208:
 870 0538 FFF7FEFF 		bl	__aeabi_f2d
 871              	.LVL209:
 872 053c 0022     		movs	r2, #0
 873 053e 254B     		ldr	r3, .L88+76
 874 0540 FFF7FEFF 		bl	__aeabi_dmul
 875              	.LVL210:
 876 0544 FFF7FEFF 		bl	__aeabi_d2uiz
 877              	.LVL211:
 878 0548 5FFA80FB 		uxtb	fp, r0
 879              	.LVL212:
 345:main.c        ****                             turn -= 1.1 * ( (diff_right * diff_right / maxDiff_r1)); //subtracts fr
 880              		.loc 1 345 0
 881 054c 3046     		mov	r0, r6
 882 054e 3146     		mov	r1, r6
 883 0550 FFF7FEFF 		bl	__aeabi_fmul
 884              	.LVL213:
 885 0554 1E49     		ldr	r1, .L88+72
 886 0556 FFF7FEFF 		bl	__aeabi_fdiv
 887              	.LVL214:
 888 055a FFF7FEFF 		bl	__aeabi_f2d
 889              	.LVL215:
 890 055e 10A3     		adr	r3, .L88+24
 891 0560 D3E90023 		ldrd	r2, [r3]
 892 0564 FFF7FEFF 		bl	__aeabi_dmul
 893              	.LVL216:
 894 0568 0646     		mov	r6, r0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 23


 895              	.LVL217:
 896 056a 0F46     		mov	r7, r1
 897 056c 5846     		mov	r0, fp
 898 056e FFF7FEFF 		bl	__aeabi_i2d
 899              	.LVL218:
 900 0572 3246     		mov	r2, r6
 901 0574 3B46     		mov	r3, r7
 902 0576 FFF7FEFF 		bl	__aeabi_dsub
 903              	.LVL219:
 904 057a FFF7FEFF 		bl	__aeabi_d2uiz
 905              	.LVL220:
 906 057e C7B2     		uxtb	r7, r0
 907              	.LVL221:
 908 0580 E0E0     		b	.L34
 909              	.L89:
 910 0582 00BFAFF3 		.align	3
 910      0080
 911              	.L88:
 912 0588 33333333 		.word	858993459
 913 058c 3333FB3F 		.word	1073427251
 914 0590 9A999999 		.word	-1717986918
 915 0594 9999F93F 		.word	1073322393
 916 0598 66666666 		.word	1717986918
 917 059c 6666F63F 		.word	1073112678
 918 05a0 9A999999 		.word	-1717986918
 919 05a4 9999F13F 		.word	1072798105
 920 05a8 00007A46 		.word	1182400512
 921 05ac 00A08C46 		.word	1183621120
 922 05b0 00807640 		.word	1081507840
 923 05b4 00F05246 		.word	1179840512
 924 05b8 00007540 		.word	1081409536
 925 05bc 0000FAC3 		.word	-1007026176
 926 05c0 0000FA43 		.word	1140457472
 927 05c4 00009646 		.word	1184235520
 928 05c8 0090B046 		.word	1185976320
 929 05cc 00007240 		.word	1081212928
 930 05d0 003C8D46 		.word	1183661056
 931 05d4 00807040 		.word	1081114624
 932              	.LVL222:
 933              	.L38:
 346:main.c        ****                         }
 347:main.c        ****                                                          
 348:main.c        ****                     break;
 349:main.c        ****                         
 350:main.c        ****                     case 3: // 0 <= diff_right < diff_Fast
 351:main.c        ****                         
 352:main.c        ****                         // moving at a moderate speed away from center of line
 353:main.c        ****                         
 354:main.c        ****                         if (blackness2_right < 19200) 
 934              		.loc 1 354 0
 935 05d8 4846     		mov	r0, r9
 936 05da 6F49     		ldr	r1, .L90+24
 937 05dc FFF7FEFF 		bl	__aeabi_fcmplt
 938              	.LVL223:
 939 05e0 48B3     		cbz	r0, .L83
 355:main.c        ****                         {
 356:main.c        ****                             turn = 1.3 * speed * ( (black_threshold_r1 - blackness2_right) / black_
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 24


 940              		.loc 1 356 0
 941 05e2 6E48     		ldr	r0, .L90+28
 942 05e4 4946     		mov	r1, r9
 943 05e6 FFF7FEFF 		bl	__aeabi_fsub
 944              	.LVL224:
 945 05ea 6C49     		ldr	r1, .L90+28
 946 05ec FFF7FEFF 		bl	__aeabi_fdiv
 947              	.LVL225:
 948 05f0 FFF7FEFF 		bl	__aeabi_f2d
 949              	.LVL226:
 950 05f4 0022     		movs	r2, #0
 951 05f6 6A4B     		ldr	r3, .L90+32
 952 05f8 FFF7FEFF 		bl	__aeabi_dmul
 953              	.LVL227:
 954 05fc FFF7FEFF 		bl	__aeabi_d2uiz
 955              	.LVL228:
 956 0600 C7B2     		uxtb	r7, r0
 957              	.LVL229:
 357:main.c        ****                             turn += 1.5 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 958              		.loc 1 357 0
 959 0602 3046     		mov	r0, r6
 960 0604 3146     		mov	r1, r6
 961 0606 FFF7FEFF 		bl	__aeabi_fmul
 962              	.LVL230:
 963 060a 6649     		ldr	r1, .L90+36
 964 060c FFF7FEFF 		bl	__aeabi_fdiv
 965              	.LVL231:
 966 0610 FFF7FEFF 		bl	__aeabi_f2d
 967              	.LVL232:
 968 0614 0022     		movs	r2, #0
 969 0616 644B     		ldr	r3, .L90+40
 970 0618 FFF7FEFF 		bl	__aeabi_dmul
 971              	.LVL233:
 972 061c CDE90001 		strd	r0, [sp]
 973 0620 3846     		mov	r0, r7
 974 0622 FFF7FEFF 		bl	__aeabi_i2d
 975              	.LVL234:
 976 0626 DDE90023 		ldrd	r2, [sp]
 977 062a FFF7FEFF 		bl	__aeabi_dadd
 978              	.LVL235:
 979 062e FFF7FEFF 		bl	__aeabi_d2uiz
 980              	.LVL236:
 981 0632 C7B2     		uxtb	r7, r0
 982              	.LVL237:
 983 0634 86E0     		b	.L34
 984              	.L83:
 358:main.c        ****                             
 359:main.c        ****                         } else {
 360:main.c        ****                         
 361:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 985              		.loc 1 361 0
 986 0636 5948     		ldr	r0, .L90+28
 987 0638 4946     		mov	r1, r9
 988 063a FFF7FEFF 		bl	__aeabi_fsub
 989              	.LVL238:
 990 063e 5749     		ldr	r1, .L90+28
 991 0640 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 25


 992              	.LVL239:
 993 0644 FFF7FEFF 		bl	__aeabi_f2d
 994              	.LVL240:
 995 0648 0022     		movs	r2, #0
 996 064a 584B     		ldr	r3, .L90+44
 997 064c FFF7FEFF 		bl	__aeabi_dmul
 998              	.LVL241:
 999 0650 FFF7FEFF 		bl	__aeabi_d2uiz
 1000              	.LVL242:
 1001 0654 C7B2     		uxtb	r7, r0
 1002              	.LVL243:
 362:main.c        ****                             turn += 1.4 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 1003              		.loc 1 362 0
 1004 0656 3046     		mov	r0, r6
 1005 0658 3146     		mov	r1, r6
 1006 065a FFF7FEFF 		bl	__aeabi_fmul
 1007              	.LVL244:
 1008 065e 5149     		ldr	r1, .L90+36
 1009 0660 FFF7FEFF 		bl	__aeabi_fdiv
 1010              	.LVL245:
 1011 0664 FFF7FEFF 		bl	__aeabi_f2d
 1012              	.LVL246:
 1013 0668 45A3     		adr	r3, .L90
 1014 066a D3E90023 		ldrd	r2, [r3]
 1015 066e FFF7FEFF 		bl	__aeabi_dmul
 1016              	.LVL247:
 1017 0672 CDE90001 		strd	r0, [sp]
 1018 0676 3846     		mov	r0, r7
 1019 0678 FFF7FEFF 		bl	__aeabi_i2d
 1020              	.LVL248:
 1021 067c DDE90023 		ldrd	r2, [sp]
 1022 0680 FFF7FEFF 		bl	__aeabi_dadd
 1023              	.LVL249:
 1024 0684 FFF7FEFF 		bl	__aeabi_d2uiz
 1025              	.LVL250:
 1026 0688 C7B2     		uxtb	r7, r0
 1027              	.LVL251:
 1028 068a 5BE0     		b	.L34
 1029              	.L39:
 363:main.c        ****                         }
 364:main.c        ****                         
 365:main.c        ****                     break;   
 366:main.c        ****                         
 367:main.c        ****                     case 4: // diff_right >= diff_Fast
 368:main.c        ****                         
 369:main.c        ****                         // moving at a fast speed away from center of line
 370:main.c        ****                     
 371:main.c        ****                         if (blackness2_right < 19200) 
 1030              		.loc 1 371 0
 1031 068c 4846     		mov	r0, r9
 1032 068e 4249     		ldr	r1, .L90+24
 1033 0690 FFF7FEFF 		bl	__aeabi_fcmplt
 1034              	.LVL252:
 1035 0694 50B3     		cbz	r0, .L84
 372:main.c        ****                         {
 373:main.c        ****                             turn = 1.5 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 1036              		.loc 1 373 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 26


 1037 0696 4148     		ldr	r0, .L90+28
 1038 0698 4946     		mov	r1, r9
 1039 069a FFF7FEFF 		bl	__aeabi_fsub
 1040              	.LVL253:
 1041 069e 3F49     		ldr	r1, .L90+28
 1042 06a0 FFF7FEFF 		bl	__aeabi_fdiv
 1043              	.LVL254:
 1044 06a4 FFF7FEFF 		bl	__aeabi_f2d
 1045              	.LVL255:
 1046 06a8 0022     		movs	r2, #0
 1047 06aa 414B     		ldr	r3, .L90+48
 1048 06ac FFF7FEFF 		bl	__aeabi_dmul
 1049              	.LVL256:
 1050 06b0 FFF7FEFF 		bl	__aeabi_d2uiz
 1051              	.LVL257:
 1052 06b4 C7B2     		uxtb	r7, r0
 1053              	.LVL258:
 374:main.c        ****                             turn += 1.7 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 1054              		.loc 1 374 0
 1055 06b6 3046     		mov	r0, r6
 1056 06b8 3146     		mov	r1, r6
 1057 06ba FFF7FEFF 		bl	__aeabi_fmul
 1058              	.LVL259:
 1059 06be 3949     		ldr	r1, .L90+36
 1060 06c0 FFF7FEFF 		bl	__aeabi_fdiv
 1061              	.LVL260:
 1062 06c4 FFF7FEFF 		bl	__aeabi_f2d
 1063              	.LVL261:
 1064 06c8 2FA3     		adr	r3, .L90+8
 1065 06ca D3E90023 		ldrd	r2, [r3]
 1066 06ce FFF7FEFF 		bl	__aeabi_dmul
 1067              	.LVL262:
 1068 06d2 CDE90001 		strd	r0, [sp]
 1069 06d6 3846     		mov	r0, r7
 1070 06d8 FFF7FEFF 		bl	__aeabi_i2d
 1071              	.LVL263:
 1072 06dc DDE90023 		ldrd	r2, [sp]
 1073 06e0 FFF7FEFF 		bl	__aeabi_dadd
 1074              	.LVL264:
 1075 06e4 FFF7FEFF 		bl	__aeabi_d2uiz
 1076              	.LVL265:
 1077 06e8 C7B2     		uxtb	r7, r0
 1078              	.LVL266:
 1079 06ea 2BE0     		b	.L34
 1080              	.L84:
 375:main.c        ****                             
 376:main.c        ****                         } else {
 377:main.c        ****                         
 378:main.c        ****                             turn = 1.4 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 1081              		.loc 1 378 0
 1082 06ec 2B48     		ldr	r0, .L90+28
 1083 06ee 4946     		mov	r1, r9
 1084 06f0 FFF7FEFF 		bl	__aeabi_fsub
 1085              	.LVL267:
 1086 06f4 2949     		ldr	r1, .L90+28
 1087 06f6 FFF7FEFF 		bl	__aeabi_fdiv
 1088              	.LVL268:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 27


 1089 06fa FFF7FEFF 		bl	__aeabi_f2d
 1090              	.LVL269:
 1091 06fe 0022     		movs	r2, #0
 1092 0700 2C4B     		ldr	r3, .L90+52
 1093 0702 FFF7FEFF 		bl	__aeabi_dmul
 1094              	.LVL270:
 1095 0706 FFF7FEFF 		bl	__aeabi_d2uiz
 1096              	.LVL271:
 1097 070a C7B2     		uxtb	r7, r0
 1098              	.LVL272:
 379:main.c        ****                             turn += 1.6 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 1099              		.loc 1 379 0
 1100 070c 3046     		mov	r0, r6
 1101 070e 3146     		mov	r1, r6
 1102 0710 FFF7FEFF 		bl	__aeabi_fmul
 1103              	.LVL273:
 1104 0714 2349     		ldr	r1, .L90+36
 1105 0716 FFF7FEFF 		bl	__aeabi_fdiv
 1106              	.LVL274:
 1107 071a FFF7FEFF 		bl	__aeabi_f2d
 1108              	.LVL275:
 1109 071e 1CA3     		adr	r3, .L90+16
 1110 0720 D3E90023 		ldrd	r2, [r3]
 1111 0724 FFF7FEFF 		bl	__aeabi_dmul
 1112              	.LVL276:
 1113 0728 CDE90001 		strd	r0, [sp]
 1114 072c 3846     		mov	r0, r7
 1115 072e FFF7FEFF 		bl	__aeabi_i2d
 1116              	.LVL277:
 1117 0732 DDE90023 		ldrd	r2, [sp]
 1118 0736 FFF7FEFF 		bl	__aeabi_dadd
 1119              	.LVL278:
 1120 073a FFF7FEFF 		bl	__aeabi_d2uiz
 1121              	.LVL279:
 1122 073e C7B2     		uxtb	r7, r0
 1123              	.LVL280:
 1124 0740 00E0     		b	.L34
 1125              	.L81:
 328:main.c        ****                         }
 1126              		.loc 1 328 0
 1127 0742 0027     		movs	r7, #0
 1128              	.LVL281:
 1129              	.L34:
 380:main.c        ****                         }
 381:main.c        ****                         
 382:main.c        ****                     break;
 383:main.c        ****                                                                   
 384:main.c        ****                     // possible case 5: diff_left > 9000 (or some high value)
 385:main.c        ****                     // there can be an infinite number of cases for increasingly finer control...
 386:main.c        ****                 }
 387:main.c        ****                 
 388:main.c        ****                 // Check for egregious values of 'turn' and correct them if found
 389:main.c        ****                 if (turn > 240)
 1130              		.loc 1 389 0
 1131 0744 F02F     		cmp	r7, #240
 1132 0746 00D9     		bls	.L47
 390:main.c        ****                 {
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 28


 391:main.c        ****                     turn = 240;
 1133              		.loc 1 391 0
 1134 0748 F027     		movs	r7, #240
 1135              	.LVL282:
 1136              	.L47:
 392:main.c        ****                 } else if (turn < 0) {
 393:main.c        ****                     turn = 0;   
 394:main.c        ****                 }
 395:main.c        ****                 
 396:main.c        ****                 // Execute the turn.
 397:main.c        ****                 Left_turn(turn);
 1137              		.loc 1 397 0
 1138 074a 3846     		mov	r0, r7
 1139 074c FFF7FEFF 		bl	Left_turn
 1140              	.LVL283:
 398:main.c        ****                 
 399:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 400:main.c        ****                 // As the loop continues, blackness2's value is stored in blackness1 and then black
 401:main.c        ****                 blackness1_right = blackness2_right;
 402:main.c        ****                                 
 403:main.c        ****                 CyDelay(1);
 1141              		.loc 1 403 0
 1142 0750 0120     		movs	r0, #1
 1143 0752 FFF7FEFF 		bl	CyDelay
 1144              	.LVL284:
 404:main.c        ****              
 405:main.c        ****                 turnFlag = 1;
 406:main.c        ****                 
 407:main.c        ****             } while (dig.r1 == 1);
 1145              		.loc 1 407 0
 1146 0756 BDF80C30 		ldrh	r3, [sp, #12]
 1147 075a 012B     		cmp	r3, #1
 1148 075c 3FF44BAE 		beq	.L48
 1149              	.LVL285:
 408:main.c        ****                            
 409:main.c        ****             if (turnFlag == 1) 
 410:main.c        ****             {
 411:main.c        ****                 // After each executed turn, do a small 'corrective twitch' in the opposite directi
 412:main.c        ****                 //Right_turn(speed/2); // experimental value
 413:main.c        ****                 //CyDelay(10); // experimental value
 414:main.c        ****                 
 415:main.c        ****                 // Return 'loopCheck' to its initial value, so that we can get an initial measureme
 416:main.c        ****                 // once the turn loop starts again (i.e. when the robot needs to turn again).
 417:main.c        ****                 loopCheck = 0;
 418:main.c        ****               
 419:main.c        ****                 // For added safety, set turn to zero... May not be necessary.
 420:main.c        ****                 turn = 0;
 421:main.c        ****                 // Since the turn has ended, continue forward at the designated speed.
 422:main.c        ****                 Custom_forward(speed);
 1150              		.loc 1 422 0
 1151 0760 F020     		movs	r0, #240
 1152 0762 FFF7FEFF 		bl	Custom_forward
 1153              	.LVL286:
 1154              	.L27:
 423:main.c        ****                 
 424:main.c        ****                 turnFlag = 0;
 425:main.c        ****             }
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 29


 426:main.c        ****         
 427:main.c        ****         }
 428:main.c        ****         
 429:main.c        ****         
 430:main.c        ****                                     
 431:main.c        ****         // For measuring the battery voltage at regular intervals. 
 432:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 433:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 434:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 435:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 436:main.c        ****         cycles++;
 1155              		.loc 1 436 0
 1156 0766 0AF1010A 		add	r10, r10, #1
 1157              	.LVL287:
 437:main.c        ****         if (cycles >= 80000)
 1158              		.loc 1 437 0
 1159 076a 134B     		ldr	r3, .L90+56
 1160 076c 9A45     		cmp	r10, r3
 1161 076e 03DD     		ble	.L49
 438:main.c        ****         {
 439:main.c        ****             Measure_Voltage();
 1162              		.loc 1 439 0
 1163 0770 FFF7FEFF 		bl	Measure_Voltage
 1164              	.LVL288:
 440:main.c        ****             cycles = 0;
 1165              		.loc 1 440 0
 1166 0774 4FF0000A 		mov	r10, #0
 1167              	.LVL289:
 1168              	.L49:
 441:main.c        ****         }
 442:main.c        ****         
 443:main.c        ****         CyDelay(1);
 1169              		.loc 1 443 0
 1170 0778 0120     		movs	r0, #1
 1171 077a FFF7FEFF 		bl	CyDelay
 1172              	.LVL290:
 444:main.c        ****      
 445:main.c        ****     }
 1173              		.loc 1 445 0
 1174 077e 77E4     		b	.L50
 1175              	.L91:
 1176              		.align	3
 1177              	.L90:
 1178 0780 66666666 		.word	1717986918
 1179 0784 6666F63F 		.word	1073112678
 1180 0788 33333333 		.word	858993459
 1181 078c 3333FB3F 		.word	1073427251
 1182 0790 9A999999 		.word	-1717986918
 1183 0794 9999F93F 		.word	1073322393
 1184 0798 00009646 		.word	1184235520
 1185 079c 0090B046 		.word	1185976320
 1186 07a0 00807340 		.word	1081311232
 1187 07a4 003C8D46 		.word	1183661056
 1188 07a8 0000F83F 		.word	1073217536
 1189 07ac 00007240 		.word	1081212928
 1190 07b0 00807640 		.word	1081507840
 1191 07b4 00007540 		.word	1081409536
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 30


 1192 07b8 7F380100 		.word	79999
 1193              		.cfi_endproc
 1194              	.LFE63:
 1195              		.size	main, .-main
 1196 07bc AFF30080 		.section	.text._write,"ax",%progbits
 1197              		.align	2
 1198              		.global	_write
 1199              		.thumb
 1200              		.thumb_func
 1201              		.type	_write, %function
 1202              	_write:
 1203              	.LFB64:
 446:main.c        ****    
 447:main.c        **** }
 448:main.c        ****     
 449:main.c        ****     
 450:main.c        ****     
 451:main.c        ****         // Old comment on the turn logic... Still holds for the most part. There's no room for it i
 452:main.c        ****         // anymore, so I'm putting it down here for the moment:
 453:main.c        ****         
 454:main.c        ****         // Determine the correct turn amount (240 is max turn, 0 is no turn).
 455:main.c        ****         
 456:main.c        ****         // The larger the measured blackness value, the smaller the base turn amount, and vice vers
 457:main.c        ****         // value equals the blackness threshold, base turn amount = 0 (i.e. the robot goes straight
 458:main.c        ****         // The base turn amount is further modified by the rate of blackness change multiplied by a
 459:main.c        ****         // (now using square of diff).
 460:main.c        ****         // The more rapid the change of values (i.e. the difference between two measurements), the 
 461:main.c        ****         // becomes, thus leading to a steeper turn. 
 462:main.c        ****         // Finally, > 240 and < 0 checks were added to pre-empt any potential issues with invalid t
 463:main.c        ****         
 464:main.c        ****         // Calibrated base turn amount with the black_threshold; when blackness2_left = 17 500, tur
 465:main.c        ****         // With 10 000 blackness value, base turn amount = 144.
 466:main.c        ****         // With 15 000 blackness, base turn amount = 48.
 467:main.c        ****         // By adding a multiplying constant, the base turn amount can be raised and the turns tight
 468:main.c        ****         // NOTE: Due to the physical differences between the sensors, 'balancing' the values of tur
 469:main.c        ****         // the left and right sides may well be a 'false friend'!
 470:main.c        **** 
 471:main.c        **** // ================================================================================================
 472:main.c        **** // ================================================================================================
 473:main.c        **** 
 474:main.c        **** 
 475:main.c        **** //*/
 476:main.c        **** 
 477:main.c        **** /*//ultra sonic sensor//
 478:main.c        **** int main()
 479:main.c        **** {
 480:main.c        ****     CyGlobalIntEnable; 
 481:main.c        ****     UART_1_Start();
 482:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 483:main.c        ****     while(1) {
 484:main.c        ****         //If you want to print out the value  
 485:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 486:main.c        ****         CyDelay(1000);
 487:main.c        ****     }
 488:main.c        **** }   
 489:main.c        **** //*/
 490:main.c        **** 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 31


 491:main.c        **** 
 492:main.c        **** /*//nunchuk//
 493:main.c        **** int main()
 494:main.c        **** {
 495:main.c        ****     CyGlobalIntEnable; 
 496:main.c        ****     UART_1_Start();
 497:main.c        ****   
 498:main.c        ****     nunchuk_start();
 499:main.c        ****     nunchuk_init();
 500:main.c        ****     
 501:main.c        ****     for(;;)
 502:main.c        ****     {    
 503:main.c        ****         nunchuk_read();
 504:main.c        ****     }
 505:main.c        **** }   
 506:main.c        **** //*/
 507:main.c        **** 
 508:main.c        **** 
 509:main.c        **** /*//IR receiver//
 510:main.c        **** int main()
 511:main.c        **** {
 512:main.c        ****     CyGlobalIntEnable; 
 513:main.c        ****     UART_1_Start();
 514:main.c        ****     
 515:main.c        ****     unsigned int IR_val; 
 516:main.c        ****     
 517:main.c        ****     for(;;)
 518:main.c        ****     {
 519:main.c        ****        IR_val = get_IR();
 520:main.c        ****        printf("%x\r\n\n",IR_val);
 521:main.c        ****     }    
 522:main.c        ****  }   
 523:main.c        **** //*/
 524:main.c        **** 
 525:main.c        **** 
 526:main.c        **** /*//Ambient light sensor//
 527:main.c        **** int main()
 528:main.c        **** {
 529:main.c        ****     CyGlobalIntEnable; 
 530:main.c        ****     UART_1_Start();
 531:main.c        ****     
 532:main.c        ****     I2C_Start();
 533:main.c        ****     
 534:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 535:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 536:main.c        ****     
 537:main.c        ****     for(;;)
 538:main.c        ****     {    
 539:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 540:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 541:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 542:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 543:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 544:main.c        ****         
 545:main.c        ****         uint8 CH0, CH1;
 546:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 547:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 32


 548:main.c        **** 
 549:main.c        ****         double Ch0 = CH0;
 550:main.c        ****         double Ch1 = CH1;
 551:main.c        ****         
 552:main.c        ****         double data = 0;
 553:main.c        ****         data = getLux(Ch0,Ch1);
 554:main.c        ****         
 555:main.c        ****         // If you want to print out data
 556:main.c        ****         //printf("%lf\r\n",data);    
 557:main.c        ****     }    
 558:main.c        ****  }   
 559:main.c        **** //*/
 560:main.c        **** 
 561:main.c        **** 
 562:main.c        **** /*//accelerometer//
 563:main.c        **** int main()
 564:main.c        **** {
 565:main.c        ****     CyGlobalIntEnable; 
 566:main.c        ****     UART_1_Start();
 567:main.c        ****   
 568:main.c        ****     I2C_Start();
 569:main.c        ****   
 570:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 571:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 572:main.c        ****     
 573:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 574:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 575:main.c        ****     
 576:main.c        ****     
 577:main.c        ****     for(;;)
 578:main.c        ****     {
 579:main.c        ****         //print out accelerometer output
 580:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 581:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 582:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 583:main.c        ****         
 584:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 585:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 586:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 587:main.c        ****         
 588:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 589:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 590:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 591:main.c        ****         
 592:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 593:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 594:main.c        ****         printf("\n");
 595:main.c        ****         
 596:main.c        ****         CyDelay(50);
 597:main.c        ****     }
 598:main.c        **** }   
 599:main.c        **** //*/
 600:main.c        **** 
 601:main.c        **** 
 602:main.c        **** /*//reflectance//
 603:main.c        **** int main()
 604:main.c        **** {
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 33


 605:main.c        ****     struct sensors_ ref;
 606:main.c        ****     struct sensors_ dig;
 607:main.c        ****     CyGlobalIntEnable; 
 608:main.c        ****     UART_1_Start();
 609:main.c        ****   
 610:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 611:main.c        ****     
 612:main.c        ****     reflectance_start();
 613:main.c        **** 
 614:main.c        ****     IR_led_Write(1);
 615:main.c        ****     for(;;)
 616:main.c        ****     {
 617:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 618:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 619:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 620:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 621:main.c        ****         
 622:main.c        ****         CyDelay(500);
 623:main.c        ****     }
 624:main.c        **** }   
 625:main.c        **** //*/
 626:main.c        **** 
 627:main.c        ****  /* //motor//
 628:main.c        **** int main()
 629:main.c        **** {
 630:main.c        ****     CyGlobalIntEnable; 
 631:main.c        ****     UART_1_Start();
 632:main.c        **** 
 633:main.c        ****     motor_start();              // motor start
 634:main.c        **** 
 635:main.c        ****     motor_forward(100,2000);     // moving forward
 636:main.c        ****     motor_turn(200,50,2000);     // turn
 637:main.c        ****     motor_turn(50,200,2000);     // turn
 638:main.c        ****     motor_backward(100,2000);    // movinb backward
 639:main.c        ****        
 640:main.c        ****     motor_stop();               // motor stop
 641:main.c        ****     
 642:main.c        ****     for(;;)
 643:main.c        ****     {
 644:main.c        **** 
 645:main.c        ****     }
 646:main.c        **** }
 647:main.c        **** //*/
 648:main.c        ****     
 649:main.c        **** 
 650:main.c        **** /*//gyroscope//
 651:main.c        **** int main()
 652:main.c        **** {
 653:main.c        ****     CyGlobalIntEnable; 
 654:main.c        ****     UART_1_Start();
 655:main.c        ****   
 656:main.c        ****     I2C_Start();
 657:main.c        ****   
 658:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 659:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 660:main.c        ****     
 661:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 34


 662:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 663:main.c        ****     
 664:main.c        ****     for(;;)
 665:main.c        ****     {
 666:main.c        ****         //print out gyroscope output
 667:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 668:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 669:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 670:main.c        ****         
 671:main.c        ****         
 672:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 673:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 674:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 675:main.c        ****         
 676:main.c        ****         
 677:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 678:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 679:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 680:main.c        ****      
 681:main.c        ****         // If you want to print value
 682:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 683:main.c        ****         CyDelay(50);
 684:main.c        ****     }
 685:main.c        **** }   
 686:main.c        **** //*/
 687:main.c        **** 
 688:main.c        **** 
 689:main.c        **** /*//magnetometer//
 690:main.c        **** int main()
 691:main.c        **** {
 692:main.c        ****     CyGlobalIntEnable; 
 693:main.c        ****     UART_1_Start();
 694:main.c        ****   
 695:main.c        ****     I2C_Start();
 696:main.c        ****    
 697:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 698:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 699:main.c        ****     
 700:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 701:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 702:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 703:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 704:main.c        ****     
 705:main.c        ****     
 706:main.c        ****     for(;;)
 707:main.c        ****     {
 708:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 709:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 710:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 711:main.c        ****         
 712:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 713:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 714:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 715:main.c        ****         
 716:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 717:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 718:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 35


 719:main.c        ****         
 720:main.c        ****         heading(X_AXIS, Y_AXIS);
 721:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 722:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 723:main.c        ****         CyDelay(50);      
 724:main.c        ****     }
 725:main.c        **** }   
 726:main.c        **** //*/
 727:main.c        **** 
 728:main.c        **** 
 729:main.c        **** /*
 730:main.c        **** 
 731:main.c        **** 
 732:main.c        ****     <p>
 733:main.c        ****     <B>Sensors</B><br>
 734:main.c        ****     &nbsp;Included: <br>
 735:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 736:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 737:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 738:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 739:main.c        ****     &nbsp;Wii nunchuck<br>
 740:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 741:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 742:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 743:main.c        ****     &nbsp;IR LED <br><br><br>
 744:main.c        ****     </p>
 745:main.c        ****     
 746:main.c        ****     <p>
 747:main.c        ****     <B>Communication</B><br>
 748:main.c        ****     I2C, UART, Serial<br>
 749:main.c        ****     </p>
 750:main.c        **** 
 751:main.c        **** */
 752:main.c        **** 
 753:main.c        **** 
 754:main.c        **** #if 0
 755:main.c        **** int rread(void)
 756:main.c        **** {
 757:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 758:main.c        ****     SC0_Write(1);
 759:main.c        ****     CyDelayUs(10);
 760:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 761:main.c        ****     Timer_1_Start();
 762:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 763:main.c        ****     uint16_t end = 0;
 764:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 765:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 766:main.c        ****             end = Timer_1_ReadCounter();
 767:main.c        ****         }
 768:main.c        ****     }
 769:main.c        ****     Timer_1_Stop();
 770:main.c        ****     
 771:main.c        ****     return (start - end);
 772:main.c        **** }
 773:main.c        **** #endif
 774:main.c        **** 
 775:main.c        **** /* Don't remove the functions below */
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 36


 776:main.c        **** int _write(int file, char *ptr, int len)
 777:main.c        **** {
 1204              		.loc 1 777 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 1208              	.LVL291:
 1209 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1210              		.cfi_def_cfa_offset 24
 1211              		.cfi_offset 3, -24
 1212              		.cfi_offset 4, -20
 1213              		.cfi_offset 5, -16
 1214              		.cfi_offset 6, -12
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 0C46     		mov	r4, r1
 1218 0004 1746     		mov	r7, r2
 1219              	.LVL292:
 778:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 779:main.c        **** 	int n;
 780:main.c        **** 	for(n = 0; n < len; n++) {
 1220              		.loc 1 780 0
 1221 0006 0025     		movs	r5, #0
 1222 0008 0BE0     		b	.L93
 1223              	.LVL293:
 1224              	.L95:
 781:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 1225              		.loc 1 781 0
 1226 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1227 000c 0A2B     		cmp	r3, #10
 1228 000e 02D1     		bne	.L94
 1229              		.loc 1 781 0 is_stmt 0 discriminator 1
 1230 0010 0D20     		movs	r0, #13
 1231 0012 FFF7FEFF 		bl	UART_1_PutChar
 1232              	.LVL294:
 1233              	.L94:
 782:main.c        **** 		UART_1_PutChar(*ptr++);
 1234              		.loc 1 782 0 is_stmt 1 discriminator 2
 1235 0016 661C     		adds	r6, r4, #1
 1236              	.LVL295:
 1237 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1238 001a FFF7FEFF 		bl	UART_1_PutChar
 1239              	.LVL296:
 780:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 1240              		.loc 1 780 0 discriminator 2
 1241 001e 0135     		adds	r5, r5, #1
 1242              	.LVL297:
 1243              		.loc 1 782 0 discriminator 2
 1244 0020 3446     		mov	r4, r6
 1245              	.LVL298:
 1246              	.L93:
 780:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 1247              		.loc 1 780 0 discriminator 1
 1248 0022 BD42     		cmp	r5, r7
 1249 0024 F1DB     		blt	.L95
 783:main.c        **** 	}
 784:main.c        **** 	return len;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 37


 785:main.c        **** }
 1250              		.loc 1 785 0
 1251 0026 3846     		mov	r0, r7
 1252 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1253              		.cfi_endproc
 1254              	.LFE64:
 1255              		.size	_write, .-_write
 1256 002a 00BF     		.section	.text._read,"ax",%progbits
 1257              		.align	2
 1258              		.global	_read
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	_read, %function
 1262              	_read:
 1263              	.LFB65:
 786:main.c        **** 
 787:main.c        **** int _read (int file, char *ptr, int count)
 788:main.c        **** {
 1264              		.loc 1 788 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              	.LVL299:
 1269 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1270              		.cfi_def_cfa_offset 24
 1271              		.cfi_offset 3, -24
 1272              		.cfi_offset 4, -20
 1273              		.cfi_offset 5, -16
 1274              		.cfi_offset 6, -12
 1275              		.cfi_offset 7, -8
 1276              		.cfi_offset 14, -4
 1277 0002 0F46     		mov	r7, r1
 1278 0004 1446     		mov	r4, r2
 1279              	.LVL300:
 789:main.c        ****     int chs = 0;
 1280              		.loc 1 789 0
 1281 0006 0026     		movs	r6, #0
 790:main.c        ****     char ch;
 791:main.c        ****  
 792:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 793:main.c        ****     while(count > 0) {
 1282              		.loc 1 793 0
 1283 0008 12E0     		b	.L99
 1284              	.LVL301:
 1285              	.L102:
 794:main.c        ****         ch = UART_1_GetChar();
 1286              		.loc 1 794 0
 1287 000a FFF7FEFF 		bl	UART_1_GetChar
 1288              	.LVL302:
 795:main.c        ****         if(ch != 0) {
 1289              		.loc 1 795 0
 1290 000e 0546     		mov	r5, r0
 1291 0010 70B1     		cbz	r0, .L99
 796:main.c        ****             UART_1_PutChar(ch);
 1292              		.loc 1 796 0
 1293 0012 FFF7FEFF 		bl	UART_1_PutChar
 1294              	.LVL303:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 38


 797:main.c        ****             chs++;
 1295              		.loc 1 797 0
 1296 0016 0136     		adds	r6, r6, #1
 1297              	.LVL304:
 798:main.c        ****             if(ch == '\r') {
 1298              		.loc 1 798 0
 1299 0018 0D2D     		cmp	r5, #13
 1300 001a 03D1     		bne	.L100
 1301              	.LVL305:
 799:main.c        ****                 ch = '\n';
 800:main.c        ****                 UART_1_PutChar(ch);
 1302              		.loc 1 800 0
 1303 001c 0A20     		movs	r0, #10
 1304 001e FFF7FEFF 		bl	UART_1_PutChar
 1305              	.LVL306:
 799:main.c        ****                 ch = '\n';
 1306              		.loc 1 799 0
 1307 0022 0A25     		movs	r5, #10
 1308              	.LVL307:
 1309              	.L100:
 801:main.c        ****             }
 802:main.c        ****             *ptr++ = ch;
 1310              		.loc 1 802 0
 1311 0024 7B1C     		adds	r3, r7, #1
 1312              	.LVL308:
 1313 0026 3D70     		strb	r5, [r7]
 803:main.c        ****             count--;
 1314              		.loc 1 803 0
 1315 0028 013C     		subs	r4, r4, #1
 1316              	.LVL309:
 804:main.c        ****             if(ch == '\n') break;
 1317              		.loc 1 804 0
 1318 002a 0A2D     		cmp	r5, #10
 1319 002c 02D0     		beq	.L101
 802:main.c        ****             count--;
 1320              		.loc 1 802 0
 1321 002e 1F46     		mov	r7, r3
 1322              	.LVL310:
 1323              	.L99:
 793:main.c        ****         ch = UART_1_GetChar();
 1324              		.loc 1 793 0
 1325 0030 002C     		cmp	r4, #0
 1326 0032 EADC     		bgt	.L102
 1327              	.LVL311:
 1328              	.L101:
 805:main.c        ****         }
 806:main.c        ****     }
 807:main.c        ****     return chs;
 808:main.c        **** }
 1329              		.loc 1 808 0
 1330 0034 3046     		mov	r0, r6
 1331 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1332              		.cfi_endproc
 1333              	.LFE65:
 1334              		.size	_read, .-_read
 1335              		.text
 1336              	.Letext0:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 39


 1337              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1338              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1339              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1340              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 1341              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 1342              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 1343              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 1344              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 1345              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 1346              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 1347              		.file 12 "Generated_Source\\PSoC5/SW1.h"
 1348              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 1349              		.section	.debug_info,"",%progbits
 1350              	.Ldebug_info0:
 1351 0000 38070000 		.4byte	0x738
 1352 0004 0400     		.2byte	0x4
 1353 0006 00000000 		.4byte	.Ldebug_abbrev0
 1354 000a 04       		.byte	0x4
 1355 000b 01       		.uleb128 0x1
 1356 000c 81020000 		.4byte	.LASF71
 1357 0010 01       		.byte	0x1
 1358 0011 86030000 		.4byte	.LASF72
 1359 0015 24030000 		.4byte	.LASF73
 1360 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1361 001d 00000000 		.4byte	0
 1362 0021 00000000 		.4byte	.Ldebug_line0
 1363 0025 02       		.uleb128 0x2
 1364 0026 01       		.byte	0x1
 1365 0027 06       		.byte	0x6
 1366 0028 0F020000 		.4byte	.LASF0
 1367 002c 02       		.uleb128 0x2
 1368 002d 01       		.byte	0x1
 1369 002e 08       		.byte	0x8
 1370 002f A1010000 		.4byte	.LASF1
 1371 0033 02       		.uleb128 0x2
 1372 0034 02       		.byte	0x2
 1373 0035 05       		.byte	0x5
 1374 0036 0F000000 		.4byte	.LASF2
 1375 003a 03       		.uleb128 0x3
 1376 003b 6B000000 		.4byte	.LASF4
 1377 003f 02       		.byte	0x2
 1378 0040 2B       		.byte	0x2b
 1379 0041 45000000 		.4byte	0x45
 1380 0045 02       		.uleb128 0x2
 1381 0046 02       		.byte	0x2
 1382 0047 07       		.byte	0x7
 1383 0048 5B020000 		.4byte	.LASF3
 1384 004c 03       		.uleb128 0x3
 1385 004d D0030000 		.4byte	.LASF5
 1386 0051 02       		.byte	0x2
 1387 0052 3F       		.byte	0x3f
 1388 0053 57000000 		.4byte	0x57
 1389 0057 02       		.uleb128 0x2
 1390 0058 04       		.byte	0x4
 1391 0059 05       		.byte	0x5
 1392 005a 66010000 		.4byte	.LASF6
 1393 005e 02       		.uleb128 0x2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 40


 1394 005f 04       		.byte	0x4
 1395 0060 07       		.byte	0x7
 1396 0061 98030000 		.4byte	.LASF7
 1397 0065 02       		.uleb128 0x2
 1398 0066 08       		.byte	0x8
 1399 0067 05       		.byte	0x5
 1400 0068 24010000 		.4byte	.LASF8
 1401 006c 02       		.uleb128 0x2
 1402 006d 08       		.byte	0x8
 1403 006e 07       		.byte	0x7
 1404 006f 23020000 		.4byte	.LASF9
 1405 0073 04       		.uleb128 0x4
 1406 0074 04       		.byte	0x4
 1407 0075 05       		.byte	0x5
 1408 0076 696E7400 		.ascii	"int\000"
 1409 007a 02       		.uleb128 0x2
 1410 007b 04       		.byte	0x4
 1411 007c 07       		.byte	0x7
 1412 007d 3A020000 		.4byte	.LASF10
 1413 0081 03       		.uleb128 0x3
 1414 0082 47020000 		.4byte	.LASF11
 1415 0086 03       		.byte	0x3
 1416 0087 21       		.byte	0x21
 1417 0088 3A000000 		.4byte	0x3a
 1418 008c 03       		.uleb128 0x3
 1419 008d 1B020000 		.4byte	.LASF12
 1420 0091 03       		.byte	0x3
 1421 0092 2C       		.byte	0x2c
 1422 0093 4C000000 		.4byte	0x4c
 1423 0097 05       		.uleb128 0x5
 1424 0098 BE000000 		.4byte	.LASF13
 1425 009c 04       		.byte	0x4
 1426 009d 9201     		.2byte	0x192
 1427 009f 2C000000 		.4byte	0x2c
 1428 00a3 05       		.uleb128 0x5
 1429 00a4 7F030000 		.4byte	.LASF14
 1430 00a8 04       		.byte	0x4
 1431 00a9 9401     		.2byte	0x194
 1432 00ab 5E000000 		.4byte	0x5e
 1433 00af 02       		.uleb128 0x2
 1434 00b0 04       		.byte	0x4
 1435 00b1 04       		.byte	0x4
 1436 00b2 15010000 		.4byte	.LASF15
 1437 00b6 02       		.uleb128 0x2
 1438 00b7 08       		.byte	0x8
 1439 00b8 04       		.byte	0x4
 1440 00b9 11040000 		.4byte	.LASF16
 1441 00bd 02       		.uleb128 0x2
 1442 00be 01       		.byte	0x1
 1443 00bf 08       		.byte	0x8
 1444 00c0 7C020000 		.4byte	.LASF17
 1445 00c4 05       		.uleb128 0x5
 1446 00c5 32010000 		.4byte	.LASF18
 1447 00c9 04       		.byte	0x4
 1448 00ca 4E02     		.2byte	0x24e
 1449 00cc D0000000 		.4byte	0xd0
 1450 00d0 06       		.uleb128 0x6
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 41


 1451 00d1 04       		.byte	0x4
 1452 00d2 D6000000 		.4byte	0xd6
 1453 00d6 07       		.uleb128 0x7
 1454 00d7 02       		.uleb128 0x2
 1455 00d8 04       		.byte	0x4
 1456 00d9 07       		.byte	0x7
 1457 00da 19000000 		.4byte	.LASF19
 1458 00de 06       		.uleb128 0x6
 1459 00df 04       		.byte	0x4
 1460 00e0 BD000000 		.4byte	0xbd
 1461 00e4 08       		.uleb128 0x8
 1462 00e5 85000000 		.4byte	.LASF74
 1463 00e9 08       		.byte	0x8
 1464 00ea 05       		.byte	0x5
 1465 00eb 11       		.byte	0x11
 1466 00ec 1D010000 		.4byte	0x11d
 1467 00f0 09       		.uleb128 0x9
 1468 00f1 6C3300   		.ascii	"l3\000"
 1469 00f4 05       		.byte	0x5
 1470 00f5 12       		.byte	0x12
 1471 00f6 81000000 		.4byte	0x81
 1472 00fa 00       		.byte	0
 1473 00fb 09       		.uleb128 0x9
 1474 00fc 6C3100   		.ascii	"l1\000"
 1475 00ff 05       		.byte	0x5
 1476 0100 14       		.byte	0x14
 1477 0101 81000000 		.4byte	0x81
 1478 0105 02       		.byte	0x2
 1479 0106 09       		.uleb128 0x9
 1480 0107 723100   		.ascii	"r1\000"
 1481 010a 05       		.byte	0x5
 1482 010b 15       		.byte	0x15
 1483 010c 81000000 		.4byte	0x81
 1484 0110 04       		.byte	0x4
 1485 0111 09       		.uleb128 0x9
 1486 0112 723300   		.ascii	"r3\000"
 1487 0115 05       		.byte	0x5
 1488 0116 17       		.byte	0x17
 1489 0117 81000000 		.4byte	0x81
 1490 011b 06       		.byte	0x6
 1491 011c 00       		.byte	0
 1492 011d 02       		.uleb128 0x2
 1493 011e 08       		.byte	0x8
 1494 011f 04       		.byte	0x4
 1495 0120 B4010000 		.4byte	.LASF20
 1496 0124 0A       		.uleb128 0xa
 1497 0125 0F030000 		.4byte	.LASF75
 1498 0129 01       		.byte	0x1
 1499 012a 2D       		.byte	0x2d
 1500 012b 73000000 		.4byte	0x73
 1501 012f 00000000 		.4byte	.LFB63
 1502 0133 BC070000 		.4byte	.LFE63-.LFB63
 1503 0137 01       		.uleb128 0x1
 1504 0138 9C       		.byte	0x9c
 1505 0139 F4040000 		.4byte	0x4f4
 1506 013d 0B       		.uleb128 0xb
 1507 013e 37000000 		.4byte	.LASF21
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 42


 1508 0142 01       		.byte	0x1
 1509 0143 30       		.byte	0x30
 1510 0144 73000000 		.4byte	0x73
 1511 0148 00000000 		.4byte	.LLST0
 1512 014c 0B       		.uleb128 0xb
 1513 014d AF010000 		.4byte	.LASF22
 1514 0151 01       		.byte	0x1
 1515 0152 33       		.byte	0x33
 1516 0153 73000000 		.4byte	0x73
 1517 0157 36000000 		.4byte	.LLST1
 1518 015b 0B       		.uleb128 0xb
 1519 015c 7B000000 		.4byte	.LASF23
 1520 0160 01       		.byte	0x1
 1521 0161 36       		.byte	0x36
 1522 0162 73000000 		.4byte	0x73
 1523 0166 6C000000 		.4byte	.LLST2
 1524 016a 0B       		.uleb128 0xb
 1525 016b B5030000 		.4byte	.LASF24
 1526 016f 01       		.byte	0x1
 1527 0170 39       		.byte	0x39
 1528 0171 73000000 		.4byte	0x73
 1529 0175 DC000000 		.4byte	.LLST3
 1530 0179 0B       		.uleb128 0xb
 1531 017a 1B010000 		.4byte	.LASF25
 1532 017e 01       		.byte	0x1
 1533 017f 3C       		.byte	0x3c
 1534 0180 73000000 		.4byte	0x73
 1535 0184 20010000 		.4byte	.LLST4
 1536 0188 0C       		.uleb128 0xc
 1537 0189 22000000 		.4byte	.LASF26
 1538 018d 01       		.byte	0x1
 1539 018e 3F       		.byte	0x3f
 1540 018f 73000000 		.4byte	0x73
 1541 0193 F401     		.2byte	0x1f4
 1542 0195 0B       		.uleb128 0xb
 1543 0196 50020000 		.4byte	.LASF27
 1544 019a 01       		.byte	0x1
 1545 019b 42       		.byte	0x42
 1546 019c 97000000 		.4byte	0x97
 1547 01a0 81010000 		.4byte	.LLST5
 1548 01a4 0D       		.uleb128 0xd
 1549 01a5 55020000 		.4byte	.LASF28
 1550 01a9 01       		.byte	0x1
 1551 01aa 45       		.byte	0x45
 1552 01ab 97000000 		.4byte	0x97
 1553 01af 70       		.sleb128 -16
 1554 01b0 0C       		.uleb128 0xc
 1555 01b1 A1000000 		.4byte	.LASF29
 1556 01b5 01       		.byte	0x1
 1557 01b6 48       		.byte	0x48
 1558 01b7 73000000 		.4byte	0x73
 1559 01bb 0852     		.2byte	0x5208
 1560 01bd 0C       		.uleb128 0xc
 1561 01be 8E000000 		.4byte	.LASF30
 1562 01c2 01       		.byte	0x1
 1563 01c3 49       		.byte	0x49
 1564 01c4 73000000 		.4byte	0x73
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 43


 1565 01c8 5046     		.2byte	0x4650
 1566 01ca 0C       		.uleb128 0xc
 1567 01cb DA030000 		.4byte	.LASF31
 1568 01cf 01       		.byte	0x1
 1569 01d0 4A       		.byte	0x4a
 1570 01d1 73000000 		.4byte	0x73
 1571 01d5 4858     		.2byte	0x5848
 1572 01d7 0C       		.uleb128 0xc
 1573 01d8 FE030000 		.4byte	.LASF32
 1574 01dc 01       		.byte	0x1
 1575 01dd 4B       		.byte	0x4b
 1576 01de 73000000 		.4byte	0x73
 1577 01e2 FC53     		.2byte	0x53fc
 1578 01e4 0C       		.uleb128 0xc
 1579 01e5 2B040000 		.4byte	.LASF33
 1580 01e9 01       		.byte	0x1
 1581 01ea 4D       		.byte	0x4d
 1582 01eb 73000000 		.4byte	0x73
 1583 01ef A116     		.2byte	0x16a1
 1584 01f1 0C       		.uleb128 0xc
 1585 01f2 18040000 		.4byte	.LASF34
 1586 01f6 01       		.byte	0x1
 1587 01f7 4E       		.byte	0x4e
 1588 01f8 73000000 		.4byte	0x73
 1589 01fc 9411     		.2byte	0x1194
 1590 01fe 0C       		.uleb128 0xc
 1591 01ff FC010000 		.4byte	.LASF35
 1592 0203 01       		.byte	0x1
 1593 0204 4F       		.byte	0x4f
 1594 0205 73000000 		.4byte	0x73
 1595 0209 AA11     		.2byte	0x11aa
 1596 020b 0C       		.uleb128 0xc
 1597 020c 53010000 		.4byte	.LASF36
 1598 0210 01       		.byte	0x1
 1599 0211 50       		.byte	0x50
 1600 0212 73000000 		.4byte	0x73
 1601 0216 9518     		.2byte	0x1895
 1602 0218 0C       		.uleb128 0xc
 1603 0219 3E000000 		.4byte	.LASF37
 1604 021d 01       		.byte	0x1
 1605 021e 52       		.byte	0x52
 1606 021f 73000000 		.4byte	0x73
 1607 0223 673B     		.2byte	0x3b67
 1608 0225 0C       		.uleb128 0xc
 1609 0226 2C000000 		.4byte	.LASF38
 1610 022a 01       		.byte	0x1
 1611 022b 53       		.byte	0x53
 1612 022c 73000000 		.4byte	0x73
 1613 0230 BC34     		.2byte	0x34bc
 1614 0232 0C       		.uleb128 0xc
 1615 0233 8D030000 		.4byte	.LASF39
 1616 0237 01       		.byte	0x1
 1617 0238 54       		.byte	0x54
 1618 0239 73000000 		.4byte	0x73
 1619 023d 9E46     		.2byte	0x469e
 1620 023f 0C       		.uleb128 0xc
 1621 0240 AA030000 		.4byte	.LASF40
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 44


 1622 0244 01       		.byte	0x1
 1623 0245 55       		.byte	0x55
 1624 0246 73000000 		.4byte	0x73
 1625 024a 673B     		.2byte	0x3b67
 1626 024c 0B       		.uleb128 0xb
 1627 024d 50000000 		.4byte	.LASF41
 1628 0251 01       		.byte	0x1
 1629 0252 57       		.byte	0x57
 1630 0253 AF000000 		.4byte	0xaf
 1631 0257 1B020000 		.4byte	.LLST6
 1632 025b 0B       		.uleb128 0xb
 1633 025c 14030000 		.4byte	.LASF42
 1634 0260 01       		.byte	0x1
 1635 0261 58       		.byte	0x58
 1636 0262 AF000000 		.4byte	0xaf
 1637 0266 75020000 		.4byte	.LLST7
 1638 026a 0B       		.uleb128 0xb
 1639 026b 90010000 		.4byte	.LASF43
 1640 026f 01       		.byte	0x1
 1641 0270 59       		.byte	0x59
 1642 0271 AF000000 		.4byte	0xaf
 1643 0275 A3020000 		.4byte	.LLST8
 1644 0279 0B       		.uleb128 0xb
 1645 027a 53040000 		.4byte	.LASF44
 1646 027e 01       		.byte	0x1
 1647 027f 5A       		.byte	0x5a
 1648 0280 AF000000 		.4byte	0xaf
 1649 0284 FD020000 		.4byte	.LLST9
 1650 0288 0B       		.uleb128 0xb
 1651 0289 B4000000 		.4byte	.LASF45
 1652 028d 01       		.byte	0x1
 1653 028e 5C       		.byte	0x5c
 1654 028f AF000000 		.4byte	0xaf
 1655 0293 2B030000 		.4byte	.LLST10
 1656 0297 0B       		.uleb128 0xb
 1657 0298 76010000 		.4byte	.LASF46
 1658 029c 01       		.byte	0x1
 1659 029d 5D       		.byte	0x5d
 1660 029e AF000000 		.4byte	0xaf
 1661 02a2 6F030000 		.4byte	.LLST11
 1662 02a6 0E       		.uleb128 0xe
 1663 02a7 72656600 		.ascii	"ref\000"
 1664 02ab 01       		.byte	0x1
 1665 02ac 60       		.byte	0x60
 1666 02ad E4000000 		.4byte	0xe4
 1667 02b1 02       		.uleb128 0x2
 1668 02b2 91       		.byte	0x91
 1669 02b3 50       		.sleb128 -48
 1670 02b4 0E       		.uleb128 0xe
 1671 02b5 64696700 		.ascii	"dig\000"
 1672 02b9 01       		.byte	0x1
 1673 02ba 61       		.byte	0x61
 1674 02bb E4000000 		.4byte	0xe4
 1675 02bf 02       		.uleb128 0x2
 1676 02c0 91       		.byte	0x91
 1677 02c1 48       		.sleb128 -56
 1678 02c2 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 45


 1679 02c3 6F010000 		.4byte	.LASF47
 1680 02c7 01       		.byte	0x1
 1681 02c8 73       		.byte	0x73
 1682 02c9 97000000 		.4byte	0x97
 1683 02cd B3030000 		.4byte	.LLST12
 1684 02d1 0F       		.uleb128 0xf
 1685 02d2 0C000000 		.4byte	.LVL1
 1686 02d6 10060000 		.4byte	0x610
 1687 02da 0F       		.uleb128 0xf
 1688 02db 10000000 		.4byte	.LVL2
 1689 02df 17060000 		.4byte	0x617
 1690 02e3 0F       		.uleb128 0xf
 1691 02e4 14000000 		.4byte	.LVL3
 1692 02e8 1E060000 		.4byte	0x61e
 1693 02ec 0F       		.uleb128 0xf
 1694 02ed 18000000 		.4byte	.LVL4
 1695 02f1 2B060000 		.4byte	0x62b
 1696 02f5 10       		.uleb128 0x10
 1697 02f6 20000000 		.4byte	.LVL5
 1698 02fa 38060000 		.4byte	0x638
 1699 02fe 0D030000 		.4byte	0x30d
 1700 0302 11       		.uleb128 0x11
 1701 0303 01       		.uleb128 0x1
 1702 0304 51       		.byte	0x51
 1703 0305 01       		.uleb128 0x1
 1704 0306 30       		.byte	0x30
 1705 0307 11       		.uleb128 0x11
 1706 0308 01       		.uleb128 0x1
 1707 0309 50       		.byte	0x50
 1708 030a 01       		.uleb128 0x1
 1709 030b 30       		.byte	0x30
 1710 030c 00       		.byte	0
 1711 030d 0F       		.uleb128 0xf
 1712 030e 26000000 		.4byte	.LVL6
 1713 0312 4E060000 		.4byte	0x64e
 1714 0316 10       		.uleb128 0x10
 1715 0317 3A000000 		.4byte	.LVL7
 1716 031b 5F060000 		.4byte	0x65f
 1717 031f 40030000 		.4byte	0x340
 1718 0323 11       		.uleb128 0x11
 1719 0324 01       		.uleb128 0x1
 1720 0325 53       		.byte	0x53
 1721 0326 03       		.uleb128 0x3
 1722 0327 0A       		.byte	0xa
 1723 0328 FC53     		.2byte	0x53fc
 1724 032a 11       		.uleb128 0x11
 1725 032b 01       		.uleb128 0x1
 1726 032c 52       		.byte	0x52
 1727 032d 03       		.uleb128 0x3
 1728 032e 0A       		.byte	0xa
 1729 032f 4858     		.2byte	0x5848
 1730 0331 11       		.uleb128 0x11
 1731 0332 01       		.uleb128 0x1
 1732 0333 51       		.byte	0x51
 1733 0334 03       		.uleb128 0x3
 1734 0335 0A       		.byte	0xa
 1735 0336 5046     		.2byte	0x4650
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 46


 1736 0338 11       		.uleb128 0x11
 1737 0339 01       		.uleb128 0x1
 1738 033a 50       		.byte	0x50
 1739 033b 03       		.uleb128 0x3
 1740 033c 0A       		.byte	0xa
 1741 033d 0852     		.2byte	0x5208
 1742 033f 00       		.byte	0
 1743 0340 0F       		.uleb128 0xf
 1744 0341 3E000000 		.4byte	.LVL8
 1745 0345 7F060000 		.4byte	0x67f
 1746 0349 10       		.uleb128 0x10
 1747 034a 44000000 		.4byte	.LVL9
 1748 034e 86060000 		.4byte	0x686
 1749 0352 5C030000 		.4byte	0x35c
 1750 0356 11       		.uleb128 0x11
 1751 0357 01       		.uleb128 0x1
 1752 0358 50       		.byte	0x50
 1753 0359 01       		.uleb128 0x1
 1754 035a 31       		.byte	0x31
 1755 035b 00       		.byte	0
 1756 035c 10       		.uleb128 0x10
 1757 035d 4A000000 		.4byte	.LVL10
 1758 0361 97060000 		.4byte	0x697
 1759 0365 6F030000 		.4byte	0x36f
 1760 0369 11       		.uleb128 0x11
 1761 036a 01       		.uleb128 0x1
 1762 036b 50       		.byte	0x50
 1763 036c 01       		.uleb128 0x1
 1764 036d 30       		.byte	0x30
 1765 036e 00       		.byte	0
 1766 036f 0F       		.uleb128 0xf
 1767 0370 52000000 		.4byte	.LVL12
 1768 0374 A8060000 		.4byte	0x6a8
 1769 0378 10       		.uleb128 0x10
 1770 0379 5A000000 		.4byte	.LVL15
 1771 037d B3060000 		.4byte	0x6b3
 1772 0381 8B030000 		.4byte	0x38b
 1773 0385 11       		.uleb128 0x11
 1774 0386 01       		.uleb128 0x1
 1775 0387 50       		.byte	0x50
 1776 0388 01       		.uleb128 0x1
 1777 0389 3A       		.byte	0x3a
 1778 038a 00       		.byte	0
 1779 038b 10       		.uleb128 0x10
 1780 038c 66000000 		.4byte	.LVL17
 1781 0390 C4060000 		.4byte	0x6c4
 1782 0394 9F030000 		.4byte	0x39f
 1783 0398 11       		.uleb128 0x11
 1784 0399 01       		.uleb128 0x1
 1785 039a 50       		.byte	0x50
 1786 039b 02       		.uleb128 0x2
 1787 039c 09       		.byte	0x9
 1788 039d F0       		.byte	0xf0
 1789 039e 00       		.byte	0
 1790 039f 10       		.uleb128 0x10
 1791 03a0 76000000 		.4byte	.LVL20
 1792 03a4 D5060000 		.4byte	0x6d5
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 47


 1793 03a8 B3030000 		.4byte	0x3b3
 1794 03ac 11       		.uleb128 0x11
 1795 03ad 01       		.uleb128 0x1
 1796 03ae 50       		.byte	0x50
 1797 03af 02       		.uleb128 0x2
 1798 03b0 91       		.byte	0x91
 1799 03b1 50       		.sleb128 -48
 1800 03b2 00       		.byte	0
 1801 03b3 10       		.uleb128 0x10
 1802 03b4 7C000000 		.4byte	.LVL21
 1803 03b8 EC060000 		.4byte	0x6ec
 1804 03bc C7030000 		.4byte	0x3c7
 1805 03c0 11       		.uleb128 0x11
 1806 03c1 01       		.uleb128 0x1
 1807 03c2 50       		.byte	0x50
 1808 03c3 02       		.uleb128 0x2
 1809 03c4 91       		.byte	0x91
 1810 03c5 48       		.sleb128 -56
 1811 03c6 00       		.byte	0
 1812 03c7 10       		.uleb128 0x10
 1813 03c8 96000000 		.4byte	.LVL23
 1814 03cc D5060000 		.4byte	0x6d5
 1815 03d0 DB030000 		.4byte	0x3db
 1816 03d4 11       		.uleb128 0x11
 1817 03d5 01       		.uleb128 0x1
 1818 03d6 50       		.byte	0x50
 1819 03d7 02       		.uleb128 0x2
 1820 03d8 91       		.byte	0x91
 1821 03d9 50       		.sleb128 -48
 1822 03da 00       		.byte	0
 1823 03db 10       		.uleb128 0x10
 1824 03dc A6000000 		.4byte	.LVL27
 1825 03e0 B3060000 		.4byte	0x6b3
 1826 03e4 EE030000 		.4byte	0x3ee
 1827 03e8 11       		.uleb128 0x11
 1828 03e9 01       		.uleb128 0x1
 1829 03ea 50       		.byte	0x50
 1830 03eb 01       		.uleb128 0x1
 1831 03ec 31       		.byte	0x31
 1832 03ed 00       		.byte	0
 1833 03ee 10       		.uleb128 0x10
 1834 03ef B4000000 		.4byte	.LVL30
 1835 03f3 D5060000 		.4byte	0x6d5
 1836 03f7 02040000 		.4byte	0x402
 1837 03fb 11       		.uleb128 0x11
 1838 03fc 01       		.uleb128 0x1
 1839 03fd 50       		.byte	0x50
 1840 03fe 02       		.uleb128 0x2
 1841 03ff 91       		.byte	0x91
 1842 0400 50       		.sleb128 -48
 1843 0401 00       		.byte	0
 1844 0402 10       		.uleb128 0x10
 1845 0403 BA000000 		.4byte	.LVL31
 1846 0407 EC060000 		.4byte	0x6ec
 1847 040b 16040000 		.4byte	0x416
 1848 040f 11       		.uleb128 0x11
 1849 0410 01       		.uleb128 0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 48


 1850 0411 50       		.byte	0x50
 1851 0412 02       		.uleb128 0x2
 1852 0413 91       		.byte	0x91
 1853 0414 48       		.sleb128 -56
 1854 0415 00       		.byte	0
 1855 0416 10       		.uleb128 0x10
 1856 0417 D0030000 		.4byte	.LVL150
 1857 041b FD060000 		.4byte	0x6fd
 1858 041f 2A040000 		.4byte	0x42a
 1859 0423 11       		.uleb128 0x11
 1860 0424 01       		.uleb128 0x1
 1861 0425 50       		.byte	0x50
 1862 0426 02       		.uleb128 0x2
 1863 0427 77       		.byte	0x77
 1864 0428 00       		.sleb128 0
 1865 0429 00       		.byte	0
 1866 042a 10       		.uleb128 0x10
 1867 042b D6030000 		.4byte	.LVL151
 1868 042f B3060000 		.4byte	0x6b3
 1869 0433 3D040000 		.4byte	0x43d
 1870 0437 11       		.uleb128 0x11
 1871 0438 01       		.uleb128 0x1
 1872 0439 50       		.byte	0x50
 1873 043a 01       		.uleb128 0x1
 1874 043b 31       		.byte	0x31
 1875 043c 00       		.byte	0
 1876 043d 10       		.uleb128 0x10
 1877 043e E6030000 		.4byte	.LVL153
 1878 0442 C4060000 		.4byte	0x6c4
 1879 0446 51040000 		.4byte	0x451
 1880 044a 11       		.uleb128 0x11
 1881 044b 01       		.uleb128 0x1
 1882 044c 50       		.byte	0x50
 1883 044d 02       		.uleb128 0x2
 1884 044e 09       		.byte	0x9
 1885 044f F0       		.byte	0xf0
 1886 0450 00       		.byte	0
 1887 0451 10       		.uleb128 0x10
 1888 0452 02040000 		.4byte	.LVL156
 1889 0456 D5060000 		.4byte	0x6d5
 1890 045a 65040000 		.4byte	0x465
 1891 045e 11       		.uleb128 0x11
 1892 045f 01       		.uleb128 0x1
 1893 0460 50       		.byte	0x50
 1894 0461 02       		.uleb128 0x2
 1895 0462 91       		.byte	0x91
 1896 0463 50       		.sleb128 -48
 1897 0464 00       		.byte	0
 1898 0465 10       		.uleb128 0x10
 1899 0466 12040000 		.4byte	.LVL160
 1900 046a B3060000 		.4byte	0x6b3
 1901 046e 78040000 		.4byte	0x478
 1902 0472 11       		.uleb128 0x11
 1903 0473 01       		.uleb128 0x1
 1904 0474 50       		.byte	0x50
 1905 0475 01       		.uleb128 0x1
 1906 0476 31       		.byte	0x31
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 49


 1907 0477 00       		.byte	0
 1908 0478 10       		.uleb128 0x10
 1909 0479 20040000 		.4byte	.LVL163
 1910 047d D5060000 		.4byte	0x6d5
 1911 0481 8C040000 		.4byte	0x48c
 1912 0485 11       		.uleb128 0x11
 1913 0486 01       		.uleb128 0x1
 1914 0487 50       		.byte	0x50
 1915 0488 02       		.uleb128 0x2
 1916 0489 91       		.byte	0x91
 1917 048a 50       		.sleb128 -48
 1918 048b 00       		.byte	0
 1919 048c 10       		.uleb128 0x10
 1920 048d 26040000 		.4byte	.LVL164
 1921 0491 EC060000 		.4byte	0x6ec
 1922 0495 A0040000 		.4byte	0x4a0
 1923 0499 11       		.uleb128 0x11
 1924 049a 01       		.uleb128 0x1
 1925 049b 50       		.byte	0x50
 1926 049c 02       		.uleb128 0x2
 1927 049d 91       		.byte	0x91
 1928 049e 48       		.sleb128 -56
 1929 049f 00       		.byte	0
 1930 04a0 10       		.uleb128 0x10
 1931 04a1 50070000 		.4byte	.LVL283
 1932 04a5 0E070000 		.4byte	0x70e
 1933 04a9 B4040000 		.4byte	0x4b4
 1934 04ad 11       		.uleb128 0x11
 1935 04ae 01       		.uleb128 0x1
 1936 04af 50       		.byte	0x50
 1937 04b0 02       		.uleb128 0x2
 1938 04b1 77       		.byte	0x77
 1939 04b2 00       		.sleb128 0
 1940 04b3 00       		.byte	0
 1941 04b4 10       		.uleb128 0x10
 1942 04b5 56070000 		.4byte	.LVL284
 1943 04b9 B3060000 		.4byte	0x6b3
 1944 04bd C7040000 		.4byte	0x4c7
 1945 04c1 11       		.uleb128 0x11
 1946 04c2 01       		.uleb128 0x1
 1947 04c3 50       		.byte	0x50
 1948 04c4 01       		.uleb128 0x1
 1949 04c5 31       		.byte	0x31
 1950 04c6 00       		.byte	0
 1951 04c7 10       		.uleb128 0x10
 1952 04c8 66070000 		.4byte	.LVL286
 1953 04cc C4060000 		.4byte	0x6c4
 1954 04d0 DB040000 		.4byte	0x4db
 1955 04d4 11       		.uleb128 0x11
 1956 04d5 01       		.uleb128 0x1
 1957 04d6 50       		.byte	0x50
 1958 04d7 02       		.uleb128 0x2
 1959 04d8 09       		.byte	0x9
 1960 04d9 F0       		.byte	0xf0
 1961 04da 00       		.byte	0
 1962 04db 0F       		.uleb128 0xf
 1963 04dc 74070000 		.4byte	.LVL288
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 50


 1964 04e0 1E060000 		.4byte	0x61e
 1965 04e4 12       		.uleb128 0x12
 1966 04e5 7E070000 		.4byte	.LVL290
 1967 04e9 B3060000 		.4byte	0x6b3
 1968 04ed 11       		.uleb128 0x11
 1969 04ee 01       		.uleb128 0x1
 1970 04ef 50       		.byte	0x50
 1971 04f0 01       		.uleb128 0x1
 1972 04f1 31       		.byte	0x31
 1973 04f2 00       		.byte	0
 1974 04f3 00       		.byte	0
 1975 04f4 13       		.uleb128 0x13
 1976 04f5 49000000 		.4byte	.LASF49
 1977 04f9 01       		.byte	0x1
 1978 04fa 0803     		.2byte	0x308
 1979 04fc 73000000 		.4byte	0x73
 1980 0500 00000000 		.4byte	.LFB64
 1981 0504 2A000000 		.4byte	.LFE64-.LFB64
 1982 0508 01       		.uleb128 0x1
 1983 0509 9C       		.byte	0x9c
 1984 050a 69050000 		.4byte	0x569
 1985 050e 14       		.uleb128 0x14
 1986 050f 76000000 		.4byte	.LASF48
 1987 0513 01       		.byte	0x1
 1988 0514 0803     		.2byte	0x308
 1989 0516 73000000 		.4byte	0x73
 1990 051a C6030000 		.4byte	.LLST13
 1991 051e 15       		.uleb128 0x15
 1992 051f 70747200 		.ascii	"ptr\000"
 1993 0523 01       		.byte	0x1
 1994 0524 0803     		.2byte	0x308
 1995 0526 DE000000 		.4byte	0xde
 1996 052a E7030000 		.4byte	.LLST14
 1997 052e 15       		.uleb128 0x15
 1998 052f 6C656E00 		.ascii	"len\000"
 1999 0533 01       		.byte	0x1
 2000 0534 0803     		.2byte	0x308
 2001 0536 73000000 		.4byte	0x73
 2002 053a 1B040000 		.4byte	.LLST15
 2003 053e 16       		.uleb128 0x16
 2004 053f 6E00     		.ascii	"n\000"
 2005 0541 01       		.byte	0x1
 2006 0542 0B03     		.2byte	0x30b
 2007 0544 73000000 		.4byte	0x73
 2008 0548 39040000 		.4byte	.LLST16
 2009 054c 10       		.uleb128 0x10
 2010 054d 16000000 		.4byte	.LVL294
 2011 0551 1F070000 		.4byte	0x71f
 2012 0555 5F050000 		.4byte	0x55f
 2013 0559 11       		.uleb128 0x11
 2014 055a 01       		.uleb128 0x1
 2015 055b 50       		.byte	0x50
 2016 055c 01       		.uleb128 0x1
 2017 055d 3D       		.byte	0x3d
 2018 055e 00       		.byte	0
 2019 055f 0F       		.uleb128 0xf
 2020 0560 1E000000 		.4byte	.LVL296
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 51


 2021 0564 1F070000 		.4byte	0x71f
 2022 0568 00       		.byte	0
 2023 0569 13       		.uleb128 0x13
 2024 056a F6010000 		.4byte	.LASF50
 2025 056e 01       		.byte	0x1
 2026 056f 1303     		.2byte	0x313
 2027 0571 73000000 		.4byte	0x73
 2028 0575 00000000 		.4byte	.LFB65
 2029 0579 38000000 		.4byte	.LFE65-.LFB65
 2030 057d 01       		.uleb128 0x1
 2031 057e 9C       		.byte	0x9c
 2032 057f FF050000 		.4byte	0x5ff
 2033 0583 14       		.uleb128 0x14
 2034 0584 76000000 		.4byte	.LASF48
 2035 0588 01       		.byte	0x1
 2036 0589 1303     		.2byte	0x313
 2037 058b 73000000 		.4byte	0x73
 2038 058f 58040000 		.4byte	.LLST17
 2039 0593 15       		.uleb128 0x15
 2040 0594 70747200 		.ascii	"ptr\000"
 2041 0598 01       		.byte	0x1
 2042 0599 1303     		.2byte	0x313
 2043 059b DE000000 		.4byte	0xde
 2044 059f 79040000 		.4byte	.LLST18
 2045 05a3 14       		.uleb128 0x14
 2046 05a4 CA030000 		.4byte	.LASF51
 2047 05a8 01       		.byte	0x1
 2048 05a9 1303     		.2byte	0x313
 2049 05ab 73000000 		.4byte	0x73
 2050 05af AD040000 		.4byte	.LLST19
 2051 05b3 16       		.uleb128 0x16
 2052 05b4 63687300 		.ascii	"chs\000"
 2053 05b8 01       		.byte	0x1
 2054 05b9 1503     		.2byte	0x315
 2055 05bb 73000000 		.4byte	0x73
 2056 05bf CB040000 		.4byte	.LLST20
 2057 05c3 16       		.uleb128 0x16
 2058 05c4 636800   		.ascii	"ch\000"
 2059 05c7 01       		.byte	0x1
 2060 05c8 1603     		.2byte	0x316
 2061 05ca BD000000 		.4byte	0xbd
 2062 05ce EA040000 		.4byte	.LLST21
 2063 05d2 0F       		.uleb128 0xf
 2064 05d3 0E000000 		.4byte	.LVL302
 2065 05d7 30070000 		.4byte	0x730
 2066 05db 10       		.uleb128 0x10
 2067 05dc 16000000 		.4byte	.LVL303
 2068 05e0 1F070000 		.4byte	0x71f
 2069 05e4 EF050000 		.4byte	0x5ef
 2070 05e8 11       		.uleb128 0x11
 2071 05e9 01       		.uleb128 0x1
 2072 05ea 50       		.byte	0x50
 2073 05eb 02       		.uleb128 0x2
 2074 05ec 75       		.byte	0x75
 2075 05ed 00       		.sleb128 0
 2076 05ee 00       		.byte	0
 2077 05ef 12       		.uleb128 0x12
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 52


 2078 05f0 22000000 		.4byte	.LVL306
 2079 05f4 1F070000 		.4byte	0x71f
 2080 05f8 11       		.uleb128 0x11
 2081 05f9 01       		.uleb128 0x1
 2082 05fa 50       		.byte	0x50
 2083 05fb 01       		.uleb128 0x1
 2084 05fc 3A       		.byte	0x3a
 2085 05fd 00       		.byte	0
 2086 05fe 00       		.byte	0
 2087 05ff 17       		.uleb128 0x17
 2088 0600 3E040000 		.4byte	.LASF76
 2089 0604 0D       		.byte	0xd
 2090 0605 9606     		.2byte	0x696
 2091 0607 0B060000 		.4byte	0x60b
 2092 060b 18       		.uleb128 0x18
 2093 060c 8C000000 		.4byte	0x8c
 2094 0610 19       		.uleb128 0x19
 2095 0611 F9000000 		.4byte	.LASF52
 2096 0615 06       		.byte	0x6
 2097 0616 54       		.byte	0x54
 2098 0617 19       		.uleb128 0x19
 2099 0618 C0010000 		.4byte	.LASF53
 2100 061c 07       		.byte	0x7
 2101 061d 34       		.byte	0x34
 2102 061e 1A       		.uleb128 0x1a
 2103 061f D7000000 		.4byte	.LASF54
 2104 0623 01       		.byte	0x1
 2105 0624 28       		.byte	0x28
 2106 0625 2B060000 		.4byte	0x62b
 2107 0629 1B       		.uleb128 0x1b
 2108 062a 00       		.byte	0
 2109 062b 1A       		.uleb128 0x1a
 2110 062c BE030000 		.4byte	.LASF55
 2111 0630 01       		.byte	0x1
 2112 0631 23       		.byte	0x23
 2113 0632 38060000 		.4byte	0x638
 2114 0636 1B       		.uleb128 0x1b
 2115 0637 00       		.byte	0
 2116 0638 1C       		.uleb128 0x1c
 2117 0639 6E020000 		.4byte	.LASF56
 2118 063d 01       		.byte	0x1
 2119 063e 24       		.byte	0x24
 2120 063f 4E060000 		.4byte	0x64e
 2121 0643 1D       		.uleb128 0x1d
 2122 0644 97000000 		.4byte	0x97
 2123 0648 1D       		.uleb128 0x1d
 2124 0649 A3000000 		.4byte	0xa3
 2125 064d 00       		.byte	0
 2126 064e 1C       		.uleb128 0x1c
 2127 064f C4000000 		.4byte	.LASF57
 2128 0653 08       		.byte	0x8
 2129 0654 18       		.byte	0x18
 2130 0655 5F060000 		.4byte	0x65f
 2131 0659 1D       		.uleb128 0x1d
 2132 065a C4000000 		.4byte	0xc4
 2133 065e 00       		.byte	0
 2134 065f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 53


 2135 0660 DC010000 		.4byte	.LASF58
 2136 0664 01       		.byte	0x1
 2137 0665 27       		.byte	0x27
 2138 0666 7F060000 		.4byte	0x67f
 2139 066a 1D       		.uleb128 0x1d
 2140 066b 81000000 		.4byte	0x81
 2141 066f 1D       		.uleb128 0x1d
 2142 0670 81000000 		.4byte	0x81
 2143 0674 1D       		.uleb128 0x1d
 2144 0675 81000000 		.4byte	0x81
 2145 0679 1D       		.uleb128 0x1d
 2146 067a 81000000 		.4byte	0x81
 2147 067e 00       		.byte	0
 2148 067f 19       		.uleb128 0x19
 2149 0680 E7000000 		.4byte	.LASF59
 2150 0684 05       		.byte	0x5
 2151 0685 1A       		.byte	0x1a
 2152 0686 1C       		.uleb128 0x1c
 2153 0687 64040000 		.4byte	.LASF60
 2154 068b 09       		.byte	0x9
 2155 068c 26       		.byte	0x26
 2156 068d 97060000 		.4byte	0x697
 2157 0691 1D       		.uleb128 0x1d
 2158 0692 97000000 		.4byte	0x97
 2159 0696 00       		.byte	0
 2160 0697 1C       		.uleb128 0x1c
 2161 0698 65030000 		.4byte	.LASF61
 2162 069c 0A       		.byte	0xa
 2163 069d 26       		.byte	0x26
 2164 069e A8060000 		.4byte	0x6a8
 2165 06a2 1D       		.uleb128 0x1d
 2166 06a3 97000000 		.4byte	0x97
 2167 06a7 00       		.byte	0
 2168 06a8 1E       		.uleb128 0x1e
 2169 06a9 76030000 		.4byte	.LASF69
 2170 06ad 0C       		.byte	0xc
 2171 06ae 29       		.byte	0x29
 2172 06af 97000000 		.4byte	0x97
 2173 06b3 1C       		.uleb128 0x1c
 2174 06b4 4B040000 		.4byte	.LASF62
 2175 06b8 0B       		.byte	0xb
 2176 06b9 76       		.byte	0x76
 2177 06ba C4060000 		.4byte	0x6c4
 2178 06be 1D       		.uleb128 0x1d
 2179 06bf A3000000 		.4byte	0xa3
 2180 06c3 00       		.byte	0
 2181 06c4 1C       		.uleb128 0x1c
 2182 06c5 81010000 		.4byte	.LASF63
 2183 06c9 01       		.byte	0x1
 2184 06ca 25       		.byte	0x25
 2185 06cb D5060000 		.4byte	0x6d5
 2186 06cf 1D       		.uleb128 0x1d
 2187 06d0 97000000 		.4byte	0x97
 2188 06d4 00       		.byte	0
 2189 06d5 1C       		.uleb128 0x1c
 2190 06d6 ED030000 		.4byte	.LASF64
 2191 06da 05       		.byte	0x5
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 54


 2192 06db 1B       		.byte	0x1b
 2193 06dc E6060000 		.4byte	0x6e6
 2194 06e0 1D       		.uleb128 0x1d
 2195 06e1 E6060000 		.4byte	0x6e6
 2196 06e5 00       		.byte	0
 2197 06e6 06       		.uleb128 0x6
 2198 06e7 04       		.byte	0x4
 2199 06e8 E4000000 		.4byte	0xe4
 2200 06ec 1C       		.uleb128 0x1c
 2201 06ed 3F010000 		.4byte	.LASF65
 2202 06f1 05       		.byte	0x5
 2203 06f2 1C       		.byte	0x1c
 2204 06f3 FD060000 		.4byte	0x6fd
 2205 06f7 1D       		.uleb128 0x1d
 2206 06f8 E6060000 		.4byte	0x6e6
 2207 06fc 00       		.byte	0
 2208 06fd 1C       		.uleb128 0x1c
 2209 06fe 60000000 		.4byte	.LASF66
 2210 0702 01       		.byte	0x1
 2211 0703 29       		.byte	0x29
 2212 0704 0E070000 		.4byte	0x70e
 2213 0708 1D       		.uleb128 0x1d
 2214 0709 97000000 		.4byte	0x97
 2215 070d 00       		.byte	0
 2216 070e 1C       		.uleb128 0x1c
 2217 070f D2010000 		.4byte	.LASF67
 2218 0713 01       		.byte	0x1
 2219 0714 2A       		.byte	0x2a
 2220 0715 1F070000 		.4byte	0x71f
 2221 0719 1D       		.uleb128 0x1d
 2222 071a 97000000 		.4byte	0x97
 2223 071e 00       		.byte	0
 2224 071f 1C       		.uleb128 0x1c
 2225 0720 06010000 		.4byte	.LASF68
 2226 0724 06       		.byte	0x6
 2227 0725 8A       		.byte	0x8a
 2228 0726 30070000 		.4byte	0x730
 2229 072a 1D       		.uleb128 0x1d
 2230 072b 97000000 		.4byte	0x97
 2231 072f 00       		.byte	0
 2232 0730 1E       		.uleb128 0x1e
 2233 0731 00000000 		.4byte	.LASF70
 2234 0735 06       		.byte	0x6
 2235 0736 71       		.byte	0x71
 2236 0737 97000000 		.4byte	0x97
 2237 073b 00       		.byte	0
 2238              		.section	.debug_abbrev,"",%progbits
 2239              	.Ldebug_abbrev0:
 2240 0000 01       		.uleb128 0x1
 2241 0001 11       		.uleb128 0x11
 2242 0002 01       		.byte	0x1
 2243 0003 25       		.uleb128 0x25
 2244 0004 0E       		.uleb128 0xe
 2245 0005 13       		.uleb128 0x13
 2246 0006 0B       		.uleb128 0xb
 2247 0007 03       		.uleb128 0x3
 2248 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 55


 2249 0009 1B       		.uleb128 0x1b
 2250 000a 0E       		.uleb128 0xe
 2251 000b 55       		.uleb128 0x55
 2252 000c 17       		.uleb128 0x17
 2253 000d 11       		.uleb128 0x11
 2254 000e 01       		.uleb128 0x1
 2255 000f 10       		.uleb128 0x10
 2256 0010 17       		.uleb128 0x17
 2257 0011 00       		.byte	0
 2258 0012 00       		.byte	0
 2259 0013 02       		.uleb128 0x2
 2260 0014 24       		.uleb128 0x24
 2261 0015 00       		.byte	0
 2262 0016 0B       		.uleb128 0xb
 2263 0017 0B       		.uleb128 0xb
 2264 0018 3E       		.uleb128 0x3e
 2265 0019 0B       		.uleb128 0xb
 2266 001a 03       		.uleb128 0x3
 2267 001b 0E       		.uleb128 0xe
 2268 001c 00       		.byte	0
 2269 001d 00       		.byte	0
 2270 001e 03       		.uleb128 0x3
 2271 001f 16       		.uleb128 0x16
 2272 0020 00       		.byte	0
 2273 0021 03       		.uleb128 0x3
 2274 0022 0E       		.uleb128 0xe
 2275 0023 3A       		.uleb128 0x3a
 2276 0024 0B       		.uleb128 0xb
 2277 0025 3B       		.uleb128 0x3b
 2278 0026 0B       		.uleb128 0xb
 2279 0027 49       		.uleb128 0x49
 2280 0028 13       		.uleb128 0x13
 2281 0029 00       		.byte	0
 2282 002a 00       		.byte	0
 2283 002b 04       		.uleb128 0x4
 2284 002c 24       		.uleb128 0x24
 2285 002d 00       		.byte	0
 2286 002e 0B       		.uleb128 0xb
 2287 002f 0B       		.uleb128 0xb
 2288 0030 3E       		.uleb128 0x3e
 2289 0031 0B       		.uleb128 0xb
 2290 0032 03       		.uleb128 0x3
 2291 0033 08       		.uleb128 0x8
 2292 0034 00       		.byte	0
 2293 0035 00       		.byte	0
 2294 0036 05       		.uleb128 0x5
 2295 0037 16       		.uleb128 0x16
 2296 0038 00       		.byte	0
 2297 0039 03       		.uleb128 0x3
 2298 003a 0E       		.uleb128 0xe
 2299 003b 3A       		.uleb128 0x3a
 2300 003c 0B       		.uleb128 0xb
 2301 003d 3B       		.uleb128 0x3b
 2302 003e 05       		.uleb128 0x5
 2303 003f 49       		.uleb128 0x49
 2304 0040 13       		.uleb128 0x13
 2305 0041 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 56


 2306 0042 00       		.byte	0
 2307 0043 06       		.uleb128 0x6
 2308 0044 0F       		.uleb128 0xf
 2309 0045 00       		.byte	0
 2310 0046 0B       		.uleb128 0xb
 2311 0047 0B       		.uleb128 0xb
 2312 0048 49       		.uleb128 0x49
 2313 0049 13       		.uleb128 0x13
 2314 004a 00       		.byte	0
 2315 004b 00       		.byte	0
 2316 004c 07       		.uleb128 0x7
 2317 004d 15       		.uleb128 0x15
 2318 004e 00       		.byte	0
 2319 004f 27       		.uleb128 0x27
 2320 0050 19       		.uleb128 0x19
 2321 0051 00       		.byte	0
 2322 0052 00       		.byte	0
 2323 0053 08       		.uleb128 0x8
 2324 0054 13       		.uleb128 0x13
 2325 0055 01       		.byte	0x1
 2326 0056 03       		.uleb128 0x3
 2327 0057 0E       		.uleb128 0xe
 2328 0058 0B       		.uleb128 0xb
 2329 0059 0B       		.uleb128 0xb
 2330 005a 3A       		.uleb128 0x3a
 2331 005b 0B       		.uleb128 0xb
 2332 005c 3B       		.uleb128 0x3b
 2333 005d 0B       		.uleb128 0xb
 2334 005e 01       		.uleb128 0x1
 2335 005f 13       		.uleb128 0x13
 2336 0060 00       		.byte	0
 2337 0061 00       		.byte	0
 2338 0062 09       		.uleb128 0x9
 2339 0063 0D       		.uleb128 0xd
 2340 0064 00       		.byte	0
 2341 0065 03       		.uleb128 0x3
 2342 0066 08       		.uleb128 0x8
 2343 0067 3A       		.uleb128 0x3a
 2344 0068 0B       		.uleb128 0xb
 2345 0069 3B       		.uleb128 0x3b
 2346 006a 0B       		.uleb128 0xb
 2347 006b 49       		.uleb128 0x49
 2348 006c 13       		.uleb128 0x13
 2349 006d 38       		.uleb128 0x38
 2350 006e 0B       		.uleb128 0xb
 2351 006f 00       		.byte	0
 2352 0070 00       		.byte	0
 2353 0071 0A       		.uleb128 0xa
 2354 0072 2E       		.uleb128 0x2e
 2355 0073 01       		.byte	0x1
 2356 0074 3F       		.uleb128 0x3f
 2357 0075 19       		.uleb128 0x19
 2358 0076 03       		.uleb128 0x3
 2359 0077 0E       		.uleb128 0xe
 2360 0078 3A       		.uleb128 0x3a
 2361 0079 0B       		.uleb128 0xb
 2362 007a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 57


 2363 007b 0B       		.uleb128 0xb
 2364 007c 49       		.uleb128 0x49
 2365 007d 13       		.uleb128 0x13
 2366 007e 11       		.uleb128 0x11
 2367 007f 01       		.uleb128 0x1
 2368 0080 12       		.uleb128 0x12
 2369 0081 06       		.uleb128 0x6
 2370 0082 40       		.uleb128 0x40
 2371 0083 18       		.uleb128 0x18
 2372 0084 9642     		.uleb128 0x2116
 2373 0086 19       		.uleb128 0x19
 2374 0087 01       		.uleb128 0x1
 2375 0088 13       		.uleb128 0x13
 2376 0089 00       		.byte	0
 2377 008a 00       		.byte	0
 2378 008b 0B       		.uleb128 0xb
 2379 008c 34       		.uleb128 0x34
 2380 008d 00       		.byte	0
 2381 008e 03       		.uleb128 0x3
 2382 008f 0E       		.uleb128 0xe
 2383 0090 3A       		.uleb128 0x3a
 2384 0091 0B       		.uleb128 0xb
 2385 0092 3B       		.uleb128 0x3b
 2386 0093 0B       		.uleb128 0xb
 2387 0094 49       		.uleb128 0x49
 2388 0095 13       		.uleb128 0x13
 2389 0096 02       		.uleb128 0x2
 2390 0097 17       		.uleb128 0x17
 2391 0098 00       		.byte	0
 2392 0099 00       		.byte	0
 2393 009a 0C       		.uleb128 0xc
 2394 009b 34       		.uleb128 0x34
 2395 009c 00       		.byte	0
 2396 009d 03       		.uleb128 0x3
 2397 009e 0E       		.uleb128 0xe
 2398 009f 3A       		.uleb128 0x3a
 2399 00a0 0B       		.uleb128 0xb
 2400 00a1 3B       		.uleb128 0x3b
 2401 00a2 0B       		.uleb128 0xb
 2402 00a3 49       		.uleb128 0x49
 2403 00a4 13       		.uleb128 0x13
 2404 00a5 1C       		.uleb128 0x1c
 2405 00a6 05       		.uleb128 0x5
 2406 00a7 00       		.byte	0
 2407 00a8 00       		.byte	0
 2408 00a9 0D       		.uleb128 0xd
 2409 00aa 34       		.uleb128 0x34
 2410 00ab 00       		.byte	0
 2411 00ac 03       		.uleb128 0x3
 2412 00ad 0E       		.uleb128 0xe
 2413 00ae 3A       		.uleb128 0x3a
 2414 00af 0B       		.uleb128 0xb
 2415 00b0 3B       		.uleb128 0x3b
 2416 00b1 0B       		.uleb128 0xb
 2417 00b2 49       		.uleb128 0x49
 2418 00b3 13       		.uleb128 0x13
 2419 00b4 1C       		.uleb128 0x1c
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 58


 2420 00b5 0D       		.uleb128 0xd
 2421 00b6 00       		.byte	0
 2422 00b7 00       		.byte	0
 2423 00b8 0E       		.uleb128 0xe
 2424 00b9 34       		.uleb128 0x34
 2425 00ba 00       		.byte	0
 2426 00bb 03       		.uleb128 0x3
 2427 00bc 08       		.uleb128 0x8
 2428 00bd 3A       		.uleb128 0x3a
 2429 00be 0B       		.uleb128 0xb
 2430 00bf 3B       		.uleb128 0x3b
 2431 00c0 0B       		.uleb128 0xb
 2432 00c1 49       		.uleb128 0x49
 2433 00c2 13       		.uleb128 0x13
 2434 00c3 02       		.uleb128 0x2
 2435 00c4 18       		.uleb128 0x18
 2436 00c5 00       		.byte	0
 2437 00c6 00       		.byte	0
 2438 00c7 0F       		.uleb128 0xf
 2439 00c8 898201   		.uleb128 0x4109
 2440 00cb 00       		.byte	0
 2441 00cc 11       		.uleb128 0x11
 2442 00cd 01       		.uleb128 0x1
 2443 00ce 31       		.uleb128 0x31
 2444 00cf 13       		.uleb128 0x13
 2445 00d0 00       		.byte	0
 2446 00d1 00       		.byte	0
 2447 00d2 10       		.uleb128 0x10
 2448 00d3 898201   		.uleb128 0x4109
 2449 00d6 01       		.byte	0x1
 2450 00d7 11       		.uleb128 0x11
 2451 00d8 01       		.uleb128 0x1
 2452 00d9 31       		.uleb128 0x31
 2453 00da 13       		.uleb128 0x13
 2454 00db 01       		.uleb128 0x1
 2455 00dc 13       		.uleb128 0x13
 2456 00dd 00       		.byte	0
 2457 00de 00       		.byte	0
 2458 00df 11       		.uleb128 0x11
 2459 00e0 8A8201   		.uleb128 0x410a
 2460 00e3 00       		.byte	0
 2461 00e4 02       		.uleb128 0x2
 2462 00e5 18       		.uleb128 0x18
 2463 00e6 9142     		.uleb128 0x2111
 2464 00e8 18       		.uleb128 0x18
 2465 00e9 00       		.byte	0
 2466 00ea 00       		.byte	0
 2467 00eb 12       		.uleb128 0x12
 2468 00ec 898201   		.uleb128 0x4109
 2469 00ef 01       		.byte	0x1
 2470 00f0 11       		.uleb128 0x11
 2471 00f1 01       		.uleb128 0x1
 2472 00f2 31       		.uleb128 0x31
 2473 00f3 13       		.uleb128 0x13
 2474 00f4 00       		.byte	0
 2475 00f5 00       		.byte	0
 2476 00f6 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 59


 2477 00f7 2E       		.uleb128 0x2e
 2478 00f8 01       		.byte	0x1
 2479 00f9 3F       		.uleb128 0x3f
 2480 00fa 19       		.uleb128 0x19
 2481 00fb 03       		.uleb128 0x3
 2482 00fc 0E       		.uleb128 0xe
 2483 00fd 3A       		.uleb128 0x3a
 2484 00fe 0B       		.uleb128 0xb
 2485 00ff 3B       		.uleb128 0x3b
 2486 0100 05       		.uleb128 0x5
 2487 0101 27       		.uleb128 0x27
 2488 0102 19       		.uleb128 0x19
 2489 0103 49       		.uleb128 0x49
 2490 0104 13       		.uleb128 0x13
 2491 0105 11       		.uleb128 0x11
 2492 0106 01       		.uleb128 0x1
 2493 0107 12       		.uleb128 0x12
 2494 0108 06       		.uleb128 0x6
 2495 0109 40       		.uleb128 0x40
 2496 010a 18       		.uleb128 0x18
 2497 010b 9742     		.uleb128 0x2117
 2498 010d 19       		.uleb128 0x19
 2499 010e 01       		.uleb128 0x1
 2500 010f 13       		.uleb128 0x13
 2501 0110 00       		.byte	0
 2502 0111 00       		.byte	0
 2503 0112 14       		.uleb128 0x14
 2504 0113 05       		.uleb128 0x5
 2505 0114 00       		.byte	0
 2506 0115 03       		.uleb128 0x3
 2507 0116 0E       		.uleb128 0xe
 2508 0117 3A       		.uleb128 0x3a
 2509 0118 0B       		.uleb128 0xb
 2510 0119 3B       		.uleb128 0x3b
 2511 011a 05       		.uleb128 0x5
 2512 011b 49       		.uleb128 0x49
 2513 011c 13       		.uleb128 0x13
 2514 011d 02       		.uleb128 0x2
 2515 011e 17       		.uleb128 0x17
 2516 011f 00       		.byte	0
 2517 0120 00       		.byte	0
 2518 0121 15       		.uleb128 0x15
 2519 0122 05       		.uleb128 0x5
 2520 0123 00       		.byte	0
 2521 0124 03       		.uleb128 0x3
 2522 0125 08       		.uleb128 0x8
 2523 0126 3A       		.uleb128 0x3a
 2524 0127 0B       		.uleb128 0xb
 2525 0128 3B       		.uleb128 0x3b
 2526 0129 05       		.uleb128 0x5
 2527 012a 49       		.uleb128 0x49
 2528 012b 13       		.uleb128 0x13
 2529 012c 02       		.uleb128 0x2
 2530 012d 17       		.uleb128 0x17
 2531 012e 00       		.byte	0
 2532 012f 00       		.byte	0
 2533 0130 16       		.uleb128 0x16
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 60


 2534 0131 34       		.uleb128 0x34
 2535 0132 00       		.byte	0
 2536 0133 03       		.uleb128 0x3
 2537 0134 08       		.uleb128 0x8
 2538 0135 3A       		.uleb128 0x3a
 2539 0136 0B       		.uleb128 0xb
 2540 0137 3B       		.uleb128 0x3b
 2541 0138 05       		.uleb128 0x5
 2542 0139 49       		.uleb128 0x49
 2543 013a 13       		.uleb128 0x13
 2544 013b 02       		.uleb128 0x2
 2545 013c 17       		.uleb128 0x17
 2546 013d 00       		.byte	0
 2547 013e 00       		.byte	0
 2548 013f 17       		.uleb128 0x17
 2549 0140 34       		.uleb128 0x34
 2550 0141 00       		.byte	0
 2551 0142 03       		.uleb128 0x3
 2552 0143 0E       		.uleb128 0xe
 2553 0144 3A       		.uleb128 0x3a
 2554 0145 0B       		.uleb128 0xb
 2555 0146 3B       		.uleb128 0x3b
 2556 0147 05       		.uleb128 0x5
 2557 0148 49       		.uleb128 0x49
 2558 0149 13       		.uleb128 0x13
 2559 014a 3F       		.uleb128 0x3f
 2560 014b 19       		.uleb128 0x19
 2561 014c 3C       		.uleb128 0x3c
 2562 014d 19       		.uleb128 0x19
 2563 014e 00       		.byte	0
 2564 014f 00       		.byte	0
 2565 0150 18       		.uleb128 0x18
 2566 0151 35       		.uleb128 0x35
 2567 0152 00       		.byte	0
 2568 0153 49       		.uleb128 0x49
 2569 0154 13       		.uleb128 0x13
 2570 0155 00       		.byte	0
 2571 0156 00       		.byte	0
 2572 0157 19       		.uleb128 0x19
 2573 0158 2E       		.uleb128 0x2e
 2574 0159 00       		.byte	0
 2575 015a 3F       		.uleb128 0x3f
 2576 015b 19       		.uleb128 0x19
 2577 015c 03       		.uleb128 0x3
 2578 015d 0E       		.uleb128 0xe
 2579 015e 3A       		.uleb128 0x3a
 2580 015f 0B       		.uleb128 0xb
 2581 0160 3B       		.uleb128 0x3b
 2582 0161 0B       		.uleb128 0xb
 2583 0162 27       		.uleb128 0x27
 2584 0163 19       		.uleb128 0x19
 2585 0164 3C       		.uleb128 0x3c
 2586 0165 19       		.uleb128 0x19
 2587 0166 00       		.byte	0
 2588 0167 00       		.byte	0
 2589 0168 1A       		.uleb128 0x1a
 2590 0169 2E       		.uleb128 0x2e
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 61


 2591 016a 01       		.byte	0x1
 2592 016b 3F       		.uleb128 0x3f
 2593 016c 19       		.uleb128 0x19
 2594 016d 03       		.uleb128 0x3
 2595 016e 0E       		.uleb128 0xe
 2596 016f 3A       		.uleb128 0x3a
 2597 0170 0B       		.uleb128 0xb
 2598 0171 3B       		.uleb128 0x3b
 2599 0172 0B       		.uleb128 0xb
 2600 0173 3C       		.uleb128 0x3c
 2601 0174 19       		.uleb128 0x19
 2602 0175 01       		.uleb128 0x1
 2603 0176 13       		.uleb128 0x13
 2604 0177 00       		.byte	0
 2605 0178 00       		.byte	0
 2606 0179 1B       		.uleb128 0x1b
 2607 017a 18       		.uleb128 0x18
 2608 017b 00       		.byte	0
 2609 017c 00       		.byte	0
 2610 017d 00       		.byte	0
 2611 017e 1C       		.uleb128 0x1c
 2612 017f 2E       		.uleb128 0x2e
 2613 0180 01       		.byte	0x1
 2614 0181 3F       		.uleb128 0x3f
 2615 0182 19       		.uleb128 0x19
 2616 0183 03       		.uleb128 0x3
 2617 0184 0E       		.uleb128 0xe
 2618 0185 3A       		.uleb128 0x3a
 2619 0186 0B       		.uleb128 0xb
 2620 0187 3B       		.uleb128 0x3b
 2621 0188 0B       		.uleb128 0xb
 2622 0189 27       		.uleb128 0x27
 2623 018a 19       		.uleb128 0x19
 2624 018b 3C       		.uleb128 0x3c
 2625 018c 19       		.uleb128 0x19
 2626 018d 01       		.uleb128 0x1
 2627 018e 13       		.uleb128 0x13
 2628 018f 00       		.byte	0
 2629 0190 00       		.byte	0
 2630 0191 1D       		.uleb128 0x1d
 2631 0192 05       		.uleb128 0x5
 2632 0193 00       		.byte	0
 2633 0194 49       		.uleb128 0x49
 2634 0195 13       		.uleb128 0x13
 2635 0196 00       		.byte	0
 2636 0197 00       		.byte	0
 2637 0198 1E       		.uleb128 0x1e
 2638 0199 2E       		.uleb128 0x2e
 2639 019a 00       		.byte	0
 2640 019b 3F       		.uleb128 0x3f
 2641 019c 19       		.uleb128 0x19
 2642 019d 03       		.uleb128 0x3
 2643 019e 0E       		.uleb128 0xe
 2644 019f 3A       		.uleb128 0x3a
 2645 01a0 0B       		.uleb128 0xb
 2646 01a1 3B       		.uleb128 0x3b
 2647 01a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 62


 2648 01a3 27       		.uleb128 0x27
 2649 01a4 19       		.uleb128 0x19
 2650 01a5 49       		.uleb128 0x49
 2651 01a6 13       		.uleb128 0x13
 2652 01a7 3C       		.uleb128 0x3c
 2653 01a8 19       		.uleb128 0x19
 2654 01a9 00       		.byte	0
 2655 01aa 00       		.byte	0
 2656 01ab 00       		.byte	0
 2657              		.section	.debug_loc,"",%progbits
 2658              	.Ldebug_loc0:
 2659              	.LLST0:
 2660 0000 06000000 		.4byte	.LVL0
 2661 0004 70000000 		.4byte	.LVL19
 2662 0008 0200     		.2byte	0x2
 2663 000a 30       		.byte	0x30
 2664 000b 9F       		.byte	0x9f
 2665 000c 70000000 		.4byte	.LVL19
 2666 0010 74070000 		.4byte	.LVL288
 2667 0014 0100     		.2byte	0x1
 2668 0016 5A       		.byte	0x5a
 2669 0017 74070000 		.4byte	.LVL288
 2670 001b 78070000 		.4byte	.LVL289
 2671 001f 0200     		.2byte	0x2
 2672 0021 30       		.byte	0x30
 2673 0022 9F       		.byte	0x9f
 2674 0023 78070000 		.4byte	.LVL289
 2675 0027 BC070000 		.4byte	.LFE63
 2676 002b 0100     		.2byte	0x1
 2677 002d 5A       		.byte	0x5a
 2678 002e 00000000 		.4byte	0
 2679 0032 00000000 		.4byte	0
 2680              	.LLST1:
 2681 0036 06000000 		.4byte	.LVL0
 2682 003a 4E000000 		.4byte	.LVL11
 2683 003e 0200     		.2byte	0x2
 2684 0040 30       		.byte	0x30
 2685 0041 9F       		.byte	0x9f
 2686 0042 4E000000 		.4byte	.LVL11
 2687 0046 54000000 		.4byte	.LVL13
 2688 004a 0100     		.2byte	0x1
 2689 004c 54       		.byte	0x54
 2690 004d 54000000 		.4byte	.LVL13
 2691 0051 5C000000 		.4byte	.LVL16
 2692 0055 0200     		.2byte	0x2
 2693 0057 31       		.byte	0x31
 2694 0058 9F       		.byte	0x9f
 2695 0059 5C000000 		.4byte	.LVL16
 2696 005d 6C000000 		.4byte	.LVL18
 2697 0061 0100     		.2byte	0x1
 2698 0063 54       		.byte	0x54
 2699 0064 00000000 		.4byte	0
 2700 0068 00000000 		.4byte	0
 2701              	.LLST2:
 2702 006c 06000000 		.4byte	.LVL0
 2703 0070 8A000000 		.4byte	.LVL22
 2704 0074 0200     		.2byte	0x2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 63


 2705 0076 30       		.byte	0x30
 2706 0077 9F       		.byte	0x9f
 2707 0078 8A000000 		.4byte	.LVL22
 2708 007c A6000000 		.4byte	.LVL27
 2709 0080 0100     		.2byte	0x1
 2710 0082 58       		.byte	0x58
 2711 0083 A6000000 		.4byte	.LVL27
 2712 0087 AC000000 		.4byte	.LVL28
 2713 008b 0200     		.2byte	0x2
 2714 008d 31       		.byte	0x31
 2715 008e 9F       		.byte	0x9f
 2716 008f AC000000 		.4byte	.LVL28
 2717 0093 E0030000 		.4byte	.LVL152
 2718 0097 0100     		.2byte	0x1
 2719 0099 58       		.byte	0x58
 2720 009a E0030000 		.4byte	.LVL152
 2721 009e F6030000 		.4byte	.LVL155
 2722 00a2 0200     		.2byte	0x2
 2723 00a4 30       		.byte	0x30
 2724 00a5 9F       		.byte	0x9f
 2725 00a6 F6030000 		.4byte	.LVL155
 2726 00aa 12040000 		.4byte	.LVL160
 2727 00ae 0100     		.2byte	0x1
 2728 00b0 58       		.byte	0x58
 2729 00b1 12040000 		.4byte	.LVL160
 2730 00b5 18040000 		.4byte	.LVL161
 2731 00b9 0200     		.2byte	0x2
 2732 00bb 31       		.byte	0x31
 2733 00bc 9F       		.byte	0x9f
 2734 00bd 18040000 		.4byte	.LVL161
 2735 00c1 60070000 		.4byte	.LVL285
 2736 00c5 0100     		.2byte	0x1
 2737 00c7 58       		.byte	0x58
 2738 00c8 60070000 		.4byte	.LVL285
 2739 00cc BC070000 		.4byte	.LFE63
 2740 00d0 0200     		.2byte	0x2
 2741 00d2 30       		.byte	0x30
 2742 00d3 9F       		.byte	0x9f
 2743 00d4 00000000 		.4byte	0
 2744 00d8 00000000 		.4byte	0
 2745              	.LLST3:
 2746 00dc 06000000 		.4byte	.LVL0
 2747 00e0 8A000000 		.4byte	.LVL22
 2748 00e4 0200     		.2byte	0x2
 2749 00e6 30       		.byte	0x30
 2750 00e7 9F       		.byte	0x9f
 2751 00e8 D6030000 		.4byte	.LVL151
 2752 00ec E6030000 		.4byte	.LVL153
 2753 00f0 0200     		.2byte	0x2
 2754 00f2 31       		.byte	0x31
 2755 00f3 9F       		.byte	0x9f
 2756 00f4 E6030000 		.4byte	.LVL153
 2757 00f8 F6030000 		.4byte	.LVL155
 2758 00fc 0200     		.2byte	0x2
 2759 00fe 30       		.byte	0x30
 2760 00ff 9F       		.byte	0x9f
 2761 0100 56070000 		.4byte	.LVL284
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 64


 2762 0104 66070000 		.4byte	.LVL286
 2763 0108 0200     		.2byte	0x2
 2764 010a 31       		.byte	0x31
 2765 010b 9F       		.byte	0x9f
 2766 010c 66070000 		.4byte	.LVL286
 2767 0110 BC070000 		.4byte	.LFE63
 2768 0114 0200     		.2byte	0x2
 2769 0116 30       		.byte	0x30
 2770 0117 9F       		.byte	0x9f
 2771 0118 00000000 		.4byte	0
 2772 011c 00000000 		.4byte	0
 2773              	.LLST4:
 2774 0120 06000000 		.4byte	.LVL0
 2775 0124 70000000 		.4byte	.LVL19
 2776 0128 0200     		.2byte	0x2
 2777 012a 30       		.byte	0x30
 2778 012b 9F       		.byte	0x9f
 2779 012c 70000000 		.4byte	.LVL19
 2780 0130 0C010000 		.4byte	.LVL43
 2781 0134 0100     		.2byte	0x1
 2782 0136 55       		.byte	0x55
 2783 0137 0E010000 		.4byte	.LVL44
 2784 013b 10010000 		.4byte	.LVL45
 2785 013f 0100     		.2byte	0x1
 2786 0141 55       		.byte	0x55
 2787 0142 12010000 		.4byte	.LVL46
 2788 0146 14010000 		.4byte	.LVL47
 2789 014a 0100     		.2byte	0x1
 2790 014c 55       		.byte	0x55
 2791 014d 16010000 		.4byte	.LVL48
 2792 0151 78040000 		.4byte	.LVL176
 2793 0155 0100     		.2byte	0x1
 2794 0157 55       		.byte	0x55
 2795 0158 7A040000 		.4byte	.LVL177
 2796 015c 7C040000 		.4byte	.LVL178
 2797 0160 0100     		.2byte	0x1
 2798 0162 55       		.byte	0x55
 2799 0163 7E040000 		.4byte	.LVL179
 2800 0167 80040000 		.4byte	.LVL180
 2801 016b 0100     		.2byte	0x1
 2802 016d 55       		.byte	0x55
 2803 016e 82040000 		.4byte	.LVL181
 2804 0172 BC070000 		.4byte	.LFE63
 2805 0176 0100     		.2byte	0x1
 2806 0178 55       		.byte	0x55
 2807 0179 00000000 		.4byte	0
 2808 017d 00000000 		.4byte	0
 2809              	.LLST5:
 2810 0181 06000000 		.4byte	.LVL0
 2811 0185 8A000000 		.4byte	.LVL22
 2812 0189 0200     		.2byte	0x2
 2813 018b 30       		.byte	0x30
 2814 018c 9F       		.byte	0x9f
 2815 018d 8A000000 		.4byte	.LVL22
 2816 0191 88010000 		.4byte	.LVL63
 2817 0195 0100     		.2byte	0x1
 2818 0197 57       		.byte	0x57
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 65


 2819 0198 88010000 		.4byte	.LVL63
 2820 019c BC010000 		.4byte	.LVL72
 2821 01a0 0100     		.2byte	0x1
 2822 01a2 5B       		.byte	0x5b
 2823 01a3 BC010000 		.4byte	.LVL72
 2824 01a7 E0010000 		.4byte	.LVL79
 2825 01ab 0100     		.2byte	0x1
 2826 01ad 57       		.byte	0x57
 2827 01ae E0010000 		.4byte	.LVL79
 2828 01b2 14020000 		.4byte	.LVL88
 2829 01b6 0100     		.2byte	0x1
 2830 01b8 5B       		.byte	0x5b
 2831 01b9 14020000 		.4byte	.LVL88
 2832 01bd E0030000 		.4byte	.LVL152
 2833 01c1 0100     		.2byte	0x1
 2834 01c3 57       		.byte	0x57
 2835 01c4 E0030000 		.4byte	.LVL152
 2836 01c8 F6030000 		.4byte	.LVL155
 2837 01cc 0200     		.2byte	0x2
 2838 01ce 30       		.byte	0x30
 2839 01cf 9F       		.byte	0x9f
 2840 01d0 F6030000 		.4byte	.LVL155
 2841 01d4 F4040000 		.4byte	.LVL196
 2842 01d8 0100     		.2byte	0x1
 2843 01da 57       		.byte	0x57
 2844 01db F4040000 		.4byte	.LVL196
 2845 01df 28050000 		.4byte	.LVL205
 2846 01e3 0100     		.2byte	0x1
 2847 01e5 5B       		.byte	0x5b
 2848 01e6 28050000 		.4byte	.LVL205
 2849 01ea 4C050000 		.4byte	.LVL212
 2850 01ee 0100     		.2byte	0x1
 2851 01f0 57       		.byte	0x57
 2852 01f1 4C050000 		.4byte	.LVL212
 2853 01f5 80050000 		.4byte	.LVL221
 2854 01f9 0100     		.2byte	0x1
 2855 01fb 5B       		.byte	0x5b
 2856 01fc 80050000 		.4byte	.LVL221
 2857 0200 60070000 		.4byte	.LVL285
 2858 0204 0100     		.2byte	0x1
 2859 0206 57       		.byte	0x57
 2860 0207 60070000 		.4byte	.LVL285
 2861 020b BC070000 		.4byte	.LFE63
 2862 020f 0200     		.2byte	0x2
 2863 0211 30       		.byte	0x30
 2864 0212 9F       		.byte	0x9f
 2865 0213 00000000 		.4byte	0
 2866 0217 00000000 		.4byte	0
 2867              	.LLST6:
 2868 021b 06000000 		.4byte	.LVL0
 2869 021f 70000000 		.4byte	.LVL19
 2870 0223 0600     		.2byte	0x6
 2871 0225 9E       		.byte	0x9e
 2872 0226 04       		.uleb128 0x4
 2873 0227 007EBB46 		.4byte	0x46bb7e00
 2874 022b 70000000 		.4byte	.LVL19
 2875 022f A0000000 		.4byte	.LVL25
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 66


 2876 0233 0100     		.2byte	0x1
 2877 0235 54       		.byte	0x54
 2878 0236 A0000000 		.4byte	.LVL25
 2879 023a A2000000 		.4byte	.LVL26
 2880 023e 0100     		.2byte	0x1
 2881 0240 50       		.byte	0x50
 2882 0241 A2000000 		.4byte	.LVL26
 2883 0245 AC000000 		.4byte	.LVL28
 2884 0249 0100     		.2byte	0x1
 2885 024b 56       		.byte	0x56
 2886 024c AC000000 		.4byte	.LVL28
 2887 0250 AE000000 		.4byte	.LVL29
 2888 0254 0100     		.2byte	0x1
 2889 0256 54       		.byte	0x54
 2890 0257 AE000000 		.4byte	.LVL29
 2891 025b CE000000 		.4byte	.LVL36
 2892 025f 0100     		.2byte	0x1
 2893 0261 56       		.byte	0x56
 2894 0262 D0030000 		.4byte	.LVL150
 2895 0266 BC070000 		.4byte	.LFE63
 2896 026a 0100     		.2byte	0x1
 2897 026c 54       		.byte	0x54
 2898 026d 00000000 		.4byte	0
 2899 0271 00000000 		.4byte	0
 2900              	.LLST7:
 2901 0275 06000000 		.4byte	.LVL0
 2902 0279 70000000 		.4byte	.LVL19
 2903 027d 0600     		.2byte	0x6
 2904 027f 9E       		.byte	0x9e
 2905 0280 04       		.uleb128 0x4
 2906 0281 007EBB46 		.4byte	0x46bb7e00
 2907 0285 C4000000 		.4byte	.LVL33
 2908 0289 C6000000 		.4byte	.LVL34
 2909 028d 0100     		.2byte	0x1
 2910 028f 50       		.byte	0x50
 2911 0290 C6000000 		.4byte	.LVL34
 2912 0294 E8030000 		.4byte	.LVL154
 2913 0298 0100     		.2byte	0x1
 2914 029a 54       		.byte	0x54
 2915 029b 00000000 		.4byte	0
 2916 029f 00000000 		.4byte	0
 2917              	.LLST8:
 2918 02a3 06000000 		.4byte	.LVL0
 2919 02a7 70000000 		.4byte	.LVL19
 2920 02ab 0600     		.2byte	0x6
 2921 02ad 9E       		.byte	0x9e
 2922 02ae 04       		.uleb128 0x4
 2923 02af 007EBB46 		.4byte	0x46bb7e00
 2924 02b3 70000000 		.4byte	.LVL19
 2925 02b7 0C040000 		.4byte	.LVL158
 2926 02bb 0100     		.2byte	0x1
 2927 02bd 59       		.byte	0x59
 2928 02be 0C040000 		.4byte	.LVL158
 2929 02c2 0E040000 		.4byte	.LVL159
 2930 02c6 0100     		.2byte	0x1
 2931 02c8 50       		.byte	0x50
 2932 02c9 0E040000 		.4byte	.LVL159
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 67


 2933 02cd 18040000 		.4byte	.LVL161
 2934 02d1 0100     		.2byte	0x1
 2935 02d3 56       		.byte	0x56
 2936 02d4 18040000 		.4byte	.LVL161
 2937 02d8 1A040000 		.4byte	.LVL162
 2938 02dc 0100     		.2byte	0x1
 2939 02de 59       		.byte	0x59
 2940 02df 1A040000 		.4byte	.LVL162
 2941 02e3 3A040000 		.4byte	.LVL169
 2942 02e7 0100     		.2byte	0x1
 2943 02e9 56       		.byte	0x56
 2944 02ea 50070000 		.4byte	.LVL283
 2945 02ee BC070000 		.4byte	.LFE63
 2946 02f2 0100     		.2byte	0x1
 2947 02f4 59       		.byte	0x59
 2948 02f5 00000000 		.4byte	0
 2949 02f9 00000000 		.4byte	0
 2950              	.LLST9:
 2951 02fd 06000000 		.4byte	.LVL0
 2952 0301 70000000 		.4byte	.LVL19
 2953 0305 0600     		.2byte	0x6
 2954 0307 9E       		.byte	0x9e
 2955 0308 04       		.uleb128 0x4
 2956 0309 007EBB46 		.4byte	0x46bb7e00
 2957 030d 30040000 		.4byte	.LVL166
 2958 0311 32040000 		.4byte	.LVL167
 2959 0315 0100     		.2byte	0x1
 2960 0317 50       		.byte	0x50
 2961 0318 32040000 		.4byte	.LVL167
 2962 031c 66070000 		.4byte	.LVL286
 2963 0320 0100     		.2byte	0x1
 2964 0322 59       		.byte	0x59
 2965 0323 00000000 		.4byte	0
 2966 0327 00000000 		.4byte	0
 2967              	.LLST10:
 2968 032b 06000000 		.4byte	.LVL0
 2969 032f 70000000 		.4byte	.LVL19
 2970 0333 0600     		.2byte	0x6
 2971 0335 9E       		.byte	0x9e
 2972 0336 04       		.uleb128 0x4
 2973 0337 00000000 		.4byte	0
 2974 033b CE000000 		.4byte	.LVL36
 2975 033f D3000000 		.4byte	.LVL37-1
 2976 0343 0100     		.2byte	0x1
 2977 0345 50       		.byte	0x50
 2978 0346 D3000000 		.4byte	.LVL37-1
 2979 034a A6010000 		.4byte	.LVL68
 2980 034e 0100     		.2byte	0x1
 2981 0350 56       		.byte	0x56
 2982 0351 BE010000 		.4byte	.LVL73
 2983 0355 FE010000 		.4byte	.LVL84
 2984 0359 0100     		.2byte	0x1
 2985 035b 56       		.byte	0x56
 2986 035c 16020000 		.4byte	.LVL89
 2987 0360 C4030000 		.4byte	.LVL148
 2988 0364 0100     		.2byte	0x1
 2989 0366 56       		.byte	0x56
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 68


 2990 0367 00000000 		.4byte	0
 2991 036b 00000000 		.4byte	0
 2992              	.LLST11:
 2993 036f 06000000 		.4byte	.LVL0
 2994 0373 70000000 		.4byte	.LVL19
 2995 0377 0600     		.2byte	0x6
 2996 0379 9E       		.byte	0x9e
 2997 037a 04       		.uleb128 0x4
 2998 037b 00000000 		.4byte	0
 2999 037f 3A040000 		.4byte	.LVL169
 3000 0383 3F040000 		.4byte	.LVL170-1
 3001 0387 0100     		.2byte	0x1
 3002 0389 50       		.byte	0x50
 3003 038a 3F040000 		.4byte	.LVL170-1
 3004 038e 12050000 		.4byte	.LVL201
 3005 0392 0100     		.2byte	0x1
 3006 0394 56       		.byte	0x56
 3007 0395 2A050000 		.4byte	.LVL206
 3008 0399 6A050000 		.4byte	.LVL217
 3009 039d 0100     		.2byte	0x1
 3010 039f 56       		.byte	0x56
 3011 03a0 D8050000 		.4byte	.LVL222
 3012 03a4 44070000 		.4byte	.LVL281
 3013 03a8 0100     		.2byte	0x1
 3014 03aa 56       		.byte	0x56
 3015 03ab 00000000 		.4byte	0
 3016 03af 00000000 		.4byte	0
 3017              	.LLST12:
 3018 03b3 52000000 		.4byte	.LVL12
 3019 03b7 56000000 		.4byte	.LVL14
 3020 03bb 0100     		.2byte	0x1
 3021 03bd 50       		.byte	0x50
 3022 03be 00000000 		.4byte	0
 3023 03c2 00000000 		.4byte	0
 3024              	.LLST13:
 3025 03c6 00000000 		.4byte	.LVL291
 3026 03ca 0A000000 		.4byte	.LVL293
 3027 03ce 0100     		.2byte	0x1
 3028 03d0 50       		.byte	0x50
 3029 03d1 0A000000 		.4byte	.LVL293
 3030 03d5 2A000000 		.4byte	.LFE64
 3031 03d9 0400     		.2byte	0x4
 3032 03db F3       		.byte	0xf3
 3033 03dc 01       		.uleb128 0x1
 3034 03dd 50       		.byte	0x50
 3035 03de 9F       		.byte	0x9f
 3036 03df 00000000 		.4byte	0
 3037 03e3 00000000 		.4byte	0
 3038              	.LLST14:
 3039 03e7 00000000 		.4byte	.LVL291
 3040 03eb 0A000000 		.4byte	.LVL293
 3041 03ef 0100     		.2byte	0x1
 3042 03f1 51       		.byte	0x51
 3043 03f2 0A000000 		.4byte	.LVL293
 3044 03f6 18000000 		.4byte	.LVL295
 3045 03fa 0100     		.2byte	0x1
 3046 03fc 54       		.byte	0x54
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 69


 3047 03fd 18000000 		.4byte	.LVL295
 3048 0401 22000000 		.4byte	.LVL298
 3049 0405 0100     		.2byte	0x1
 3050 0407 56       		.byte	0x56
 3051 0408 22000000 		.4byte	.LVL298
 3052 040c 2A000000 		.4byte	.LFE64
 3053 0410 0100     		.2byte	0x1
 3054 0412 54       		.byte	0x54
 3055 0413 00000000 		.4byte	0
 3056 0417 00000000 		.4byte	0
 3057              	.LLST15:
 3058 041b 00000000 		.4byte	.LVL291
 3059 041f 0A000000 		.4byte	.LVL293
 3060 0423 0100     		.2byte	0x1
 3061 0425 52       		.byte	0x52
 3062 0426 0A000000 		.4byte	.LVL293
 3063 042a 2A000000 		.4byte	.LFE64
 3064 042e 0100     		.2byte	0x1
 3065 0430 57       		.byte	0x57
 3066 0431 00000000 		.4byte	0
 3067 0435 00000000 		.4byte	0
 3068              	.LLST16:
 3069 0439 06000000 		.4byte	.LVL292
 3070 043d 0A000000 		.4byte	.LVL293
 3071 0441 0200     		.2byte	0x2
 3072 0443 30       		.byte	0x30
 3073 0444 9F       		.byte	0x9f
 3074 0445 0A000000 		.4byte	.LVL293
 3075 0449 2A000000 		.4byte	.LFE64
 3076 044d 0100     		.2byte	0x1
 3077 044f 55       		.byte	0x55
 3078 0450 00000000 		.4byte	0
 3079 0454 00000000 		.4byte	0
 3080              	.LLST17:
 3081 0458 00000000 		.4byte	.LVL299
 3082 045c 0A000000 		.4byte	.LVL301
 3083 0460 0100     		.2byte	0x1
 3084 0462 50       		.byte	0x50
 3085 0463 0A000000 		.4byte	.LVL301
 3086 0467 38000000 		.4byte	.LFE65
 3087 046b 0400     		.2byte	0x4
 3088 046d F3       		.byte	0xf3
 3089 046e 01       		.uleb128 0x1
 3090 046f 50       		.byte	0x50
 3091 0470 9F       		.byte	0x9f
 3092 0471 00000000 		.4byte	0
 3093 0475 00000000 		.4byte	0
 3094              	.LLST18:
 3095 0479 00000000 		.4byte	.LVL299
 3096 047d 0A000000 		.4byte	.LVL301
 3097 0481 0100     		.2byte	0x1
 3098 0483 51       		.byte	0x51
 3099 0484 0A000000 		.4byte	.LVL301
 3100 0488 26000000 		.4byte	.LVL308
 3101 048c 0100     		.2byte	0x1
 3102 048e 57       		.byte	0x57
 3103 048f 26000000 		.4byte	.LVL308
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 70


 3104 0493 30000000 		.4byte	.LVL310
 3105 0497 0100     		.2byte	0x1
 3106 0499 53       		.byte	0x53
 3107 049a 30000000 		.4byte	.LVL310
 3108 049e 34000000 		.4byte	.LVL311
 3109 04a2 0100     		.2byte	0x1
 3110 04a4 57       		.byte	0x57
 3111 04a5 00000000 		.4byte	0
 3112 04a9 00000000 		.4byte	0
 3113              	.LLST19:
 3114 04ad 00000000 		.4byte	.LVL299
 3115 04b1 0A000000 		.4byte	.LVL301
 3116 04b5 0100     		.2byte	0x1
 3117 04b7 52       		.byte	0x52
 3118 04b8 0A000000 		.4byte	.LVL301
 3119 04bc 38000000 		.4byte	.LFE65
 3120 04c0 0100     		.2byte	0x1
 3121 04c2 54       		.byte	0x54
 3122 04c3 00000000 		.4byte	0
 3123 04c7 00000000 		.4byte	0
 3124              	.LLST20:
 3125 04cb 06000000 		.4byte	.LVL300
 3126 04cf 0A000000 		.4byte	.LVL301
 3127 04d3 0200     		.2byte	0x2
 3128 04d5 30       		.byte	0x30
 3129 04d6 9F       		.byte	0x9f
 3130 04d7 0A000000 		.4byte	.LVL301
 3131 04db 38000000 		.4byte	.LFE65
 3132 04df 0100     		.2byte	0x1
 3133 04e1 56       		.byte	0x56
 3134 04e2 00000000 		.4byte	0
 3135 04e6 00000000 		.4byte	0
 3136              	.LLST21:
 3137 04ea 0E000000 		.4byte	.LVL302
 3138 04ee 15000000 		.4byte	.LVL303-1
 3139 04f2 0100     		.2byte	0x1
 3140 04f4 50       		.byte	0x50
 3141 04f5 1C000000 		.4byte	.LVL305
 3142 04f9 24000000 		.4byte	.LVL307
 3143 04fd 0200     		.2byte	0x2
 3144 04ff 3A       		.byte	0x3a
 3145 0500 9F       		.byte	0x9f
 3146 0501 24000000 		.4byte	.LVL307
 3147 0505 30000000 		.4byte	.LVL310
 3148 0509 0100     		.2byte	0x1
 3149 050b 55       		.byte	0x55
 3150 050c 00000000 		.4byte	0
 3151 0510 00000000 		.4byte	0
 3152              		.section	.debug_aranges,"",%progbits
 3153 0000 2C000000 		.4byte	0x2c
 3154 0004 0200     		.2byte	0x2
 3155 0006 00000000 		.4byte	.Ldebug_info0
 3156 000a 04       		.byte	0x4
 3157 000b 00       		.byte	0
 3158 000c 0000     		.2byte	0
 3159 000e 0000     		.2byte	0
 3160 0010 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 71


 3161 0014 BC070000 		.4byte	.LFE63-.LFB63
 3162 0018 00000000 		.4byte	.LFB64
 3163 001c 2A000000 		.4byte	.LFE64-.LFB64
 3164 0020 00000000 		.4byte	.LFB65
 3165 0024 38000000 		.4byte	.LFE65-.LFB65
 3166 0028 00000000 		.4byte	0
 3167 002c 00000000 		.4byte	0
 3168              		.section	.debug_ranges,"",%progbits
 3169              	.Ldebug_ranges0:
 3170 0000 00000000 		.4byte	.LFB63
 3171 0004 BC070000 		.4byte	.LFE63
 3172 0008 00000000 		.4byte	.LFB64
 3173 000c 2A000000 		.4byte	.LFE64
 3174 0010 00000000 		.4byte	.LFB65
 3175 0014 38000000 		.4byte	.LFE65
 3176 0018 00000000 		.4byte	0
 3177 001c 00000000 		.4byte	0
 3178              		.section	.debug_line,"",%progbits
 3179              	.Ldebug_line0:
 3180 0000 FE020000 		.section	.debug_str,"MS",%progbits,1
 3180      0200C301 
 3180      00000201 
 3180      FB0E0D00 
 3180      01010101 
 3181              	.LASF70:
 3182 0000 55415254 		.ascii	"UART_1_GetChar\000"
 3182      5F315F47 
 3182      65744368 
 3182      617200
 3183              	.LASF2:
 3184 000f 73686F72 		.ascii	"short int\000"
 3184      7420696E 
 3184      7400
 3185              	.LASF19:
 3186 0019 73697A65 		.ascii	"sizetype\000"
 3186      74797065 
 3186      00
 3187              	.LASF26:
 3188 0022 64696666 		.ascii	"diff_Fast\000"
 3188      5F466173 
 3188      7400
 3189              	.LASF38:
 3190 002c 6D617844 		.ascii	"maxDiff_l1\000"
 3190      6966665F 
 3190      6C3100
 3191              	.LASF21:
 3192 0037 6379636C 		.ascii	"cycles\000"
 3192      657300
 3193              	.LASF37:
 3194 003e 6D617844 		.ascii	"maxDiff_l3\000"
 3194      6966665F 
 3194      6C3300
 3195              	.LASF49:
 3196 0049 5F777269 		.ascii	"_write\000"
 3196      746500
 3197              	.LASF41:
 3198 0050 626C6163 		.ascii	"blackness1_left\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 72


 3198      6B6E6573 
 3198      73315F6C 
 3198      65667400 
 3199              	.LASF66:
 3200 0060 52696768 		.ascii	"Right_turn\000"
 3200      745F7475 
 3200      726E00
 3201              	.LASF4:
 3202 006b 5F5F7569 		.ascii	"__uint16_t\000"
 3202      6E743136 
 3202      5F7400
 3203              	.LASF48:
 3204 0076 66696C65 		.ascii	"file\000"
 3204      00
 3205              	.LASF23:
 3206 007b 6C6F6F70 		.ascii	"loopCheck\000"
 3206      43686563 
 3206      6B00
 3207              	.LASF74:
 3208 0085 73656E73 		.ascii	"sensors_\000"
 3208      6F72735F 
 3208      00
 3209              	.LASF30:
 3210 008e 626C6163 		.ascii	"black_threshold_l1\000"
 3210      6B5F7468 
 3210      72657368 
 3210      6F6C645F 
 3210      6C3100
 3211              	.LASF29:
 3212 00a1 626C6163 		.ascii	"black_threshold_l3\000"
 3212      6B5F7468 
 3212      72657368 
 3212      6F6C645F 
 3212      6C3300
 3213              	.LASF45:
 3214 00b4 64696666 		.ascii	"diff_left\000"
 3214      5F6C6566 
 3214      7400
 3215              	.LASF13:
 3216 00be 75696E74 		.ascii	"uint8\000"
 3216      3800
 3217              	.LASF57:
 3218 00c4 73656E73 		.ascii	"sensor_isr_StartEx\000"
 3218      6F725F69 
 3218      73725F53 
 3218      74617274 
 3218      457800
 3219              	.LASF54:
 3220 00d7 4D656173 		.ascii	"Measure_Voltage\000"
 3220      7572655F 
 3220      566F6C74 
 3220      61676500 
 3221              	.LASF59:
 3222 00e7 7265666C 		.ascii	"reflectance_start\000"
 3222      65637461 
 3222      6E63655F 
 3222      73746172 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 73


 3222      7400
 3223              	.LASF52:
 3224 00f9 55415254 		.ascii	"UART_1_Start\000"
 3224      5F315F53 
 3224      74617274 
 3224      00
 3225              	.LASF68:
 3226 0106 55415254 		.ascii	"UART_1_PutChar\000"
 3226      5F315F50 
 3226      75744368 
 3226      617200
 3227              	.LASF15:
 3228 0115 666C6F61 		.ascii	"float\000"
 3228      7400
 3229              	.LASF25:
 3230 011b 64696666 		.ascii	"diffCase\000"
 3230      43617365 
 3230      00
 3231              	.LASF8:
 3232 0124 6C6F6E67 		.ascii	"long long int\000"
 3232      206C6F6E 
 3232      6720696E 
 3232      7400
 3233              	.LASF18:
 3234 0132 63796973 		.ascii	"cyisraddress\000"
 3234      72616464 
 3234      72657373 
 3234      00
 3235              	.LASF65:
 3236 013f 7265666C 		.ascii	"reflectance_digital\000"
 3236      65637461 
 3236      6E63655F 
 3236      64696769 
 3236      74616C00 
 3237              	.LASF36:
 3238 0153 77686974 		.ascii	"white_threshold_r3\000"
 3238      655F7468 
 3238      72657368 
 3238      6F6C645F 
 3238      723300
 3239              	.LASF6:
 3240 0166 6C6F6E67 		.ascii	"long int\000"
 3240      20696E74 
 3240      00
 3241              	.LASF47:
 3242 016f 62757474 		.ascii	"button\000"
 3242      6F6E00
 3243              	.LASF46:
 3244 0176 64696666 		.ascii	"diff_right\000"
 3244      5F726967 
 3244      687400
 3245              	.LASF63:
 3246 0181 43757374 		.ascii	"Custom_forward\000"
 3246      6F6D5F66 
 3246      6F727761 
 3246      726400
 3247              	.LASF43:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 74


 3248 0190 626C6163 		.ascii	"blackness1_right\000"
 3248      6B6E6573 
 3248      73315F72 
 3248      69676874 
 3248      00
 3249              	.LASF1:
 3250 01a1 756E7369 		.ascii	"unsigned char\000"
 3250      676E6564 
 3250      20636861 
 3250      7200
 3251              	.LASF22:
 3252 01af 65786974 		.ascii	"exit\000"
 3252      00
 3253              	.LASF20:
 3254 01b4 6C6F6E67 		.ascii	"long double\000"
 3254      20646F75 
 3254      626C6500 
 3255              	.LASF53:
 3256 01c0 4144435F 		.ascii	"ADC_Battery_Start\000"
 3256      42617474 
 3256      6572795F 
 3256      53746172 
 3256      7400
 3257              	.LASF67:
 3258 01d2 4C656674 		.ascii	"Left_turn\000"
 3258      5F747572 
 3258      6E00
 3259              	.LASF58:
 3260 01dc 7265666C 		.ascii	"reflectance_set_threshold\000"
 3260      65637461 
 3260      6E63655F 
 3260      7365745F 
 3260      74687265 
 3261              	.LASF50:
 3262 01f6 5F726561 		.ascii	"_read\000"
 3262      6400
 3263              	.LASF35:
 3264 01fc 77686974 		.ascii	"white_threshold_r1\000"
 3264      655F7468 
 3264      72657368 
 3264      6F6C645F 
 3264      723100
 3265              	.LASF0:
 3266 020f 7369676E 		.ascii	"signed char\000"
 3266      65642063 
 3266      68617200 
 3267              	.LASF12:
 3268 021b 696E7433 		.ascii	"int32_t\000"
 3268      325F7400 
 3269              	.LASF9:
 3270 0223 6C6F6E67 		.ascii	"long long unsigned int\000"
 3270      206C6F6E 
 3270      6720756E 
 3270      7369676E 
 3270      65642069 
 3271              	.LASF10:
 3272 023a 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 75


 3272      676E6564 
 3272      20696E74 
 3272      00
 3273              	.LASF11:
 3274 0247 75696E74 		.ascii	"uint16_t\000"
 3274      31365F74 
 3274      00
 3275              	.LASF27:
 3276 0250 7475726E 		.ascii	"turn\000"
 3276      00
 3277              	.LASF28:
 3278 0255 73706565 		.ascii	"speed\000"
 3278      6400
 3279              	.LASF3:
 3280 025b 73686F72 		.ascii	"short unsigned int\000"
 3280      7420756E 
 3280      7369676E 
 3280      65642069 
 3280      6E7400
 3281              	.LASF56:
 3282 026e 6D6F746F 		.ascii	"motor_forward\000"
 3282      725F666F 
 3282      72776172 
 3282      6400
 3283              	.LASF17:
 3284 027c 63686172 		.ascii	"char\000"
 3284      00
 3285              	.LASF71:
 3286 0281 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3286      4320342E 
 3286      392E3320 
 3286      32303135 
 3286      30333033 
 3287 02b4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3287      20726576 
 3287      6973696F 
 3287      6E203232 
 3287      31323230 
 3288 02e7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3288      66756E63 
 3288      74696F6E 
 3288      2D736563 
 3288      74696F6E 
 3289              	.LASF75:
 3290 030f 6D61696E 		.ascii	"main\000"
 3290      00
 3291              	.LASF42:
 3292 0314 626C6163 		.ascii	"blackness2_left\000"
 3292      6B6E6573 
 3292      73325F6C 
 3292      65667400 
 3293              	.LASF73:
 3294 0324 433A5C55 		.ascii	"C:\\Users\\Ville L\\Desktop\\Zumo_Robotti\\Zumo_Rob"
 3294      73657273 
 3294      5C56696C 
 3294      6C65204C 
 3294      5C446573 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 76


 3295 0352 6F747469 		.ascii	"otti\\ZumoBot.cydsn\000"
 3295      5C5A756D 
 3295      6F426F74 
 3295      2E637964 
 3295      736E00
 3296              	.LASF61:
 3297 0365 42617474 		.ascii	"BatteryLed_Write\000"
 3297      6572794C 
 3297      65645F57 
 3297      72697465 
 3297      00
 3298              	.LASF69:
 3299 0376 5357315F 		.ascii	"SW1_Read\000"
 3299      52656164 
 3299      00
 3300              	.LASF14:
 3301 037f 75696E74 		.ascii	"uint32\000"
 3301      333200
 3302              	.LASF72:
 3303 0386 6D61696E 		.ascii	"main.c\000"
 3303      2E6300
 3304              	.LASF39:
 3305 038d 6D617844 		.ascii	"maxDiff_r1\000"
 3305      6966665F 
 3305      723100
 3306              	.LASF7:
 3307 0398 6C6F6E67 		.ascii	"long unsigned int\000"
 3307      20756E73 
 3307      69676E65 
 3307      6420696E 
 3307      7400
 3308              	.LASF40:
 3309 03aa 6D617844 		.ascii	"maxDiff_r3\000"
 3309      6966665F 
 3309      723300
 3310              	.LASF24:
 3311 03b5 7475726E 		.ascii	"turnFlag\000"
 3311      466C6167 
 3311      00
 3312              	.LASF55:
 3313 03be 6D6F746F 		.ascii	"motor_start\000"
 3313      725F7374 
 3313      61727400 
 3314              	.LASF51:
 3315 03ca 636F756E 		.ascii	"count\000"
 3315      7400
 3316              	.LASF5:
 3317 03d0 5F5F696E 		.ascii	"__int32_t\000"
 3317      7433325F 
 3317      7400
 3318              	.LASF31:
 3319 03da 626C6163 		.ascii	"black_threshold_r1\000"
 3319      6B5F7468 
 3319      72657368 
 3319      6F6C645F 
 3319      723100
 3320              	.LASF64:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cckB0bHC.s 			page 77


 3321 03ed 7265666C 		.ascii	"reflectance_read\000"
 3321      65637461 
 3321      6E63655F 
 3321      72656164 
 3321      00
 3322              	.LASF32:
 3323 03fe 626C6163 		.ascii	"black_threshold_r3\000"
 3323      6B5F7468 
 3323      72657368 
 3323      6F6C645F 
 3323      723300
 3324              	.LASF16:
 3325 0411 646F7562 		.ascii	"double\000"
 3325      6C6500
 3326              	.LASF34:
 3327 0418 77686974 		.ascii	"white_threshold_l1\000"
 3327      655F7468 
 3327      72657368 
 3327      6F6C645F 
 3327      6C3100
 3328              	.LASF33:
 3329 042b 77686974 		.ascii	"white_threshold_l3\000"
 3329      655F7468 
 3329      72657368 
 3329      6F6C645F 
 3329      6C3300
 3330              	.LASF76:
 3331 043e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3331      52784275 
 3331      66666572 
 3331      00
 3332              	.LASF62:
 3333 044b 43794465 		.ascii	"CyDelay\000"
 3333      6C617900 
 3334              	.LASF44:
 3335 0453 626C6163 		.ascii	"blackness2_right\000"
 3335      6B6E6573 
 3335      73325F72 
 3335      69676874 
 3335      00
 3336              	.LASF60:
 3337 0464 49525F6C 		.ascii	"IR_led_Write\000"
 3337      65645F57 
 3337      72697465 
 3337      00
 3338              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
