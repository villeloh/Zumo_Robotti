ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fadd
  21              		.global	__aeabi_fdiv
  22              		.global	__aeabi_fmul
  23              		.global	__aeabi_fcmplt
  24              		.global	__aeabi_fcmpgt
  25              		.global	__aeabi_i2f
  26              		.global	__aeabi_f2d
  27              		.global	__aeabi_dmul
  28              		.global	__aeabi_d2uiz
  29              		.global	__aeabi_f2uiz
  30              		.section	.text.main,"ax",%progbits
  31              		.align	2
  32              		.global	main
  33              		.thumb
  34              		.thumb_func
  35              		.type	main, %function
  36              	main:
  37              	.LFB63:
  38              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  17:main.c        **** */
  18:main.c        **** 
  19:main.c        **** #include <project.h>
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 2


  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** #include <math.h>
  23:main.c        **** #include "Motor.h"
  24:main.c        **** #include "Ultra.h"
  25:main.c        **** #include "Nunchuk.h"
  26:main.c        **** #include "Reflectance.h"
  27:main.c        **** #include "I2C_made.h"
  28:main.c        **** #include "Gyro.h"
  29:main.c        **** #include "Accel_magnet.h"
  30:main.c        **** #include "IR.h"
  31:main.c        **** #include "Ambient.h"
  32:main.c        **** #include "Beep.h"
  33:main.c        **** 
  34:main.c        **** 
  35:main.c        **** // Declare used methods
  36:main.c        **** int rread(void);
  37:main.c        **** void motor_start();
  38:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  39:main.c        **** void Custom_forward(uint8 speed);
  40:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  41:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  42:main.c        **** void Measure_Voltage();
  43:main.c        **** void Turn(uint32 turn, int dir_flag, float diff_ave);
  44:main.c        **** 
  45:main.c        **** 
  46:main.c        **** int main()
  47:main.c        **** {
  39              		.loc 1 47 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 56
  42              		@ frame_needed = 0, uses_anonymous_args = 0
  43 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  44              		.cfi_def_cfa_offset 36
  45              		.cfi_offset 4, -36
  46              		.cfi_offset 5, -32
  47              		.cfi_offset 6, -28
  48              		.cfi_offset 7, -24
  49              		.cfi_offset 8, -20
  50              		.cfi_offset 9, -16
  51              		.cfi_offset 10, -12
  52              		.cfi_offset 11, -8
  53              		.cfi_offset 14, -4
  54 0004 8FB0     		sub	sp, sp, #60
  55              		.cfi_def_cfa_offset 96
  56              	.LVL0:
  48:main.c        ****     // 'Time counter' for the voltage measurement interval
  49:main.c        ****     int cycles = 0;
  50:main.c        ****     
  51:main.c        ****     // Needed for using the button to start the robot's movement routine
  52:main.c        ****     int exit = 0;
  53:main.c        ****    
  54:main.c        ****     // direction flag for correct turning behaviour. '1' = 'left', '2' = 'right'.
  55:main.c        ****     int dir_flag = 0;
  56:main.c        ****     
  57:main.c        ****     //For counting blackLines (to stop the robot at race end)
  58:main.c        ****     int countLines = 0;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 3


  59:main.c        ****     int inBlack = 0;
  60:main.c        ****     int exitMainLoop = 0;
  61:main.c        ****     
  62:main.c        ****     // Turn value for the motors to use.
  63:main.c        ****     uint32 turn = 0;
  64:main.c        ****     
  65:main.c        ****     // (Maximum) movement speed of the robot.
  66:main.c        ****     uint32 speed = 240;
  67:main.c        ****     
  68:main.c        ****     // Reflectance thresholds (determined experimentally) for use in different movement behaviours.
  69:main.c        ****     int black_threshold_l3 = 21000;
  70:main.c        ****     int black_threshold_l1 = 18000; // 'sure bet' working value: 17 500 // actual line edge value: 
  71:main.c        ****     int black_threshold_r1 = 22600; // 'sure bet' working value: 22 000 // actual line edge value: 
  72:main.c        ****     int black_threshold_r3 = 21500;
  73:main.c        ****         
  74:main.c        ****     int white_threshold_l3 = 5793;
  75:main.c        ****     int white_threshold_l1 = 4500;
  76:main.c        ****     int white_threshold_r1 = 4522;
  77:main.c        ****     int white_threshold_r3 = 6293;
  78:main.c        ****     
  79:main.c        ****     int maxDiff_l1 = black_threshold_l1 - white_threshold_l1;
  80:main.c        ****     int maxDiff_r1 = black_threshold_r1 - white_threshold_r1;
  81:main.c        ****    
  82:main.c        ****     // Needed for determining turn behaviour
  83:main.c        ****     int digital = 0;
  84:main.c        ****     int maxDiff = 0;
  85:main.c        ****     int black_threshold = 0;
  86:main.c        ****     float blackness_1 = 23999;
  87:main.c        ****     float blackness_2 = 23999;
  88:main.c        ****     float blackDiff = 0.0;
  89:main.c        ****     float diffs[3] = {0, 0, 0};
  57              		.loc 1 89 0
  58 0006 0023     		movs	r3, #0
  59 0008 0B93     		str	r3, [sp, #44]	@ float
  60 000a 0C93     		str	r3, [sp, #48]	@ float
  61              	.LVL1:
  90:main.c        ****     float diff_ave = 0;
  91:main.c        ****     float diff_prev_ave = 0;
  92:main.c        ****     int i;
  93:main.c        ****     float diff_pos = 0;
  94:main.c        ****     float norm_blackness_2 = 0;
  95:main.c        ****  
  96:main.c        ****     // Initialize various starting thingies
  97:main.c        ****     struct sensors_ ref;
  98:main.c        ****     struct sensors_ dig;
  99:main.c        ****     CyGlobalIntEnable; 
  62              		.loc 1 99 0
  63              	@ 99 "main.c" 1
  64 000c 62B6     		CPSIE   i
  65              	@ 0 "" 2
 100:main.c        ****     UART_1_Start();
  66              		.loc 1 100 0
  67              		.thumb
  68 000e FFF7FEFF 		bl	UART_1_Start
  69              	.LVL2:
 101:main.c        ****     ADC_Battery_Start();   
  70              		.loc 1 101 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 4


  71 0012 FFF7FEFF 		bl	ADC_Battery_Start
  72              	.LVL3:
 102:main.c        ****     
 103:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
  73              		.loc 1 103 0
  74 0016 FFF7FEFF 		bl	Measure_Voltage
  75              	.LVL4:
 104:main.c        ****     
 105:main.c        ****     motor_start();
  76              		.loc 1 105 0
  77 001a FFF7FEFF 		bl	motor_start
  78              	.LVL5:
 106:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  79              		.loc 1 106 0
  80 001e 0020     		movs	r0, #0
  81 0020 0146     		mov	r1, r0
  82 0022 FFF7FEFF 		bl	motor_forward
  83              	.LVL6:
 107:main.c        ****     
 108:main.c        ****     // Initialize IR sensors
 109:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  84              		.loc 1 109 0
  85 0026 A148     		ldr	r0, .L47
  86 0028 FFF7FEFF 		bl	sensor_isr_StartEx
  87              	.LVL7:
 110:main.c        ****     reflectance_set_threshold(black_threshold_l3, black_threshold_l1, black_threshold_r1, black_thr
  88              		.loc 1 110 0
  89 002c 45F20820 		movw	r0, #21000
  90 0030 44F25061 		movw	r1, #18000
  91 0034 45F64802 		movw	r2, #22600
  92 0038 45F2FC33 		movw	r3, #21500
  93 003c FFF7FEFF 		bl	reflectance_set_threshold
  94              	.LVL8:
 111:main.c        ****     reflectance_start();
  95              		.loc 1 111 0
  96 0040 FFF7FEFF 		bl	reflectance_start
  97              	.LVL9:
 112:main.c        ****     IR_led_Write(1);
  98              		.loc 1 112 0
  99 0044 0120     		movs	r0, #1
 100 0046 FFF7FEFF 		bl	IR_led_Write
 101              	.LVL10:
 113:main.c        **** 
 114:main.c        ****     BatteryLed_Write(0); // Switch led off 
 102              		.loc 1 114 0
 103 004a 0020     		movs	r0, #0
 104 004c FFF7FEFF 		bl	BatteryLed_Write
 105              	.LVL11:
  52:main.c        ****    
 106              		.loc 1 52 0
 107 0050 0024     		movs	r4, #0
 115:main.c        ****     
 116:main.c        ****     uint8 button; // make button exist
 117:main.c        ****     
 118:main.c        ****     // To start the robot's movement routine, press the button
 119:main.c        ****     while (exit == 0) 
 108              		.loc 1 119 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 5


 109 0052 06E0     		b	.L3
 110              	.LVL12:
 111              	.L4:
 120:main.c        ****     {
 121:main.c        ****         button = SW1_Read();
 112              		.loc 1 121 0
 113 0054 FFF7FEFF 		bl	SW1_Read
 114              	.LVL13:
 122:main.c        ****         
 123:main.c        ****         if (button == 0) 
 115              		.loc 1 123 0
 116 0058 18B9     		cbnz	r0, .L3
 117              	.LVL14:
 124:main.c        ****         {
 125:main.c        ****             exit = 1;
 126:main.c        ****             CyDelay(10);
 118              		.loc 1 126 0
 119 005a 0A20     		movs	r0, #10
 120              	.LVL15:
 121 005c FFF7FEFF 		bl	CyDelay
 122              	.LVL16:
 125:main.c        ****             CyDelay(10);
 123              		.loc 1 125 0
 124 0060 0124     		movs	r4, #1
 125              	.LVL17:
 126              	.L3:
 119:main.c        ****     {
 127              		.loc 1 119 0
 128 0062 002C     		cmp	r4, #0
 129 0064 F6D0     		beq	.L4
 127:main.c        ****         }
 128:main.c        ****     }
 129:main.c        ****     
 130:main.c        ****     // Start going forward.
 131:main.c        ****     Custom_forward(speed);
 130              		.loc 1 131 0
 131 0066 F020     		movs	r0, #240
 132 0068 FFF7FEFF 		bl	Custom_forward
 133              	.LVL18:
  86:main.c        ****     float blackness_2 = 23999;
 134              		.loc 1 86 0
 135 006c 904D     		ldr	r5, .L47+4
  85:main.c        ****     float blackness_1 = 23999;
 136              		.loc 1 85 0
 137 006e 0023     		movs	r3, #0
 138 0070 0393     		str	r3, [sp, #12]
  84:main.c        ****     int black_threshold = 0;
 139              		.loc 1 84 0
 140 0072 0293     		str	r3, [sp, #8]
  83:main.c        ****     int maxDiff = 0;
 141              		.loc 1 83 0
 142 0074 1F46     		mov	r7, r3
  60:main.c        ****     
 143              		.loc 1 60 0
 144 0076 0493     		str	r3, [sp, #16]
  59:main.c        ****     int exitMainLoop = 0;
 145              		.loc 1 59 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 6


 146 0078 9A46     		mov	r10, r3
  58:main.c        ****     int inBlack = 0;
 147              		.loc 1 58 0
 148 007a 9946     		mov	r9, r3
  55:main.c        ****     
 149              		.loc 1 55 0
 150 007c 9B46     		mov	fp, r3
 151 007e 9846     		mov	r8, r3
 132:main.c        ****     
 133:main.c        ****     // Giant loop to run the movement logic in.
 134:main.c        ****     while(exitMainLoop == 0)
 152              		.loc 1 134 0
 153 0080 69E1     		b	.L5
 154              	.LVL19:
 155              	.L31:
 135:main.c        ****     {    
 136:main.c        ****         
 137:main.c        ****         reflectance_read(&ref); // raw reflectance value ('blackness') from the sensor; 0 - 23 999
 156              		.loc 1 137 0
 157 0082 09A8     		add	r0, sp, #36
 158 0084 FFF7FEFF 		bl	reflectance_read
 159              	.LVL20:
 138:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 139:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 160              		.loc 1 139 0
 161 0088 07A8     		add	r0, sp, #28
 162 008a FFF7FEFF 		bl	reflectance_digital
 163              	.LVL21:
 140:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 141:main.c        ****         //CyDelay(500); // comment this delay out when doing movement tests / racing !!!
 142:main.c        ****         
 143:main.c        ****         
 144:main.c        ****         
 145:main.c        ****         // Line-following logic.
 146:main.c        ****         // NOTE: due to the calibration of the motor speeds, 240 (255 - 15) is our current max spee
 147:main.c        ****         
 148:main.c        ****         // If-switch between left and right sensor activation (affects turning logic directly below
 149:main.c        ****         if (dig.l1 == 1) 
 164              		.loc 1 149 0
 165 008e BDF81E30 		ldrh	r3, [sp, #30]
 166 0092 012B     		cmp	r3, #1
 167 0094 11D1     		bne	.L6
 168              	.LVL22:
 150:main.c        ****         {
 151:main.c        ****             dir_flag = 1;
 152:main.c        ****             digital = dig.l1;
 169              		.loc 1 152 0
 170 0096 1F46     		mov	r7, r3
 171              	.LVL23:
 153:main.c        ****             
 154:main.c        ****             blackness_1 = ref.l1;
 172              		.loc 1 154 0
 173 0098 BDF82600 		ldrh	r0, [sp, #38]
 174 009c FFF7FEFF 		bl	__aeabi_ui2f
 175              	.LVL24:
 176 00a0 0546     		mov	r5, r0
 177              	.LVL25:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 7


 155:main.c        ****             CyDelay(1);
 178              		.loc 1 155 0
 179 00a2 0120     		movs	r0, #1
 180              	.LVL26:
 181 00a4 FFF7FEFF 		bl	CyDelay
 182              	.LVL27:
 156:main.c        ****             
 157:main.c        ****             black_threshold = black_threshold_l1;
 183              		.loc 1 157 0
 184 00a8 44F25063 		movw	r3, #18000
 185 00ac 0393     		str	r3, [sp, #12]
 158:main.c        ****             maxDiff = maxDiff_l1;
 186              		.loc 1 158 0
 187 00ae 43F2BC43 		movw	r3, #13500
 188 00b2 0293     		str	r3, [sp, #8]
 151:main.c        ****             digital = dig.l1;
 189              		.loc 1 151 0
 190 00b4 4FF0010B 		mov	fp, #1
 191 00b8 14E0     		b	.L7
 192              	.LVL28:
 193              	.L6:
 159:main.c        ****    
 160:main.c        ****         } else if (dig.r1 == 1) {
 194              		.loc 1 160 0
 195 00ba BDF82030 		ldrh	r3, [sp, #32]
 196 00be 012B     		cmp	r3, #1
 197 00c0 10D1     		bne	.L7
 198              	.LVL29:
 161:main.c        ****         
 162:main.c        ****             dir_flag = 2;
 163:main.c        ****             digital = dig.r1;
 199              		.loc 1 163 0
 200 00c2 1F46     		mov	r7, r3
 201              	.LVL30:
 164:main.c        ****             
 165:main.c        ****             blackness_1 = ref.r1;
 202              		.loc 1 165 0
 203 00c4 BDF82800 		ldrh	r0, [sp, #40]
 204 00c8 FFF7FEFF 		bl	__aeabi_ui2f
 205              	.LVL31:
 206 00cc 0546     		mov	r5, r0
 207              	.LVL32:
 166:main.c        ****             CyDelay(1);
 208              		.loc 1 166 0
 209 00ce 0120     		movs	r0, #1
 210              	.LVL33:
 211 00d0 FFF7FEFF 		bl	CyDelay
 212              	.LVL34:
 167:main.c        ****             
 168:main.c        ****             black_threshold = black_threshold_r1;
 213              		.loc 1 168 0
 214 00d4 45F64803 		movw	r3, #22600
 215 00d8 0393     		str	r3, [sp, #12]
 169:main.c        ****             maxDiff = maxDiff_r1;
 216              		.loc 1 169 0
 217 00da 44F29E63 		movw	r3, #18078
 218 00de 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 8


 162:main.c        ****             digital = dig.r1;
 219              		.loc 1 162 0
 220 00e0 4FF0020B 		mov	fp, #2
 221              	.LVL35:
 222              	.L7:
 170:main.c        ****             
 171:main.c        ****         }
 172:main.c        ****          
 173:main.c        ****         // When the measured blackness value drops below the threshold, start the appropriate turni
 174:main.c        ****         if (digital == 1)
 223              		.loc 1 174 0
 224 00e4 012F     		cmp	r7, #1
 225 00e6 40F00881 		bne	.L8
 226 00ea CDF81480 		str	r8, [sp, #20]
 227 00ee 00E0     		b	.L24
 228              	.LVL36:
 229              	.L40:
 175:main.c        ****         { 
 176:main.c        **** 
 177:main.c        ****             // When the robot starts to veer off to the left or right, do a corrective turn in the 
 178:main.c        ****             do {
 179:main.c        ****                 
 180:main.c        ****                 // Obtain a second ref value (1 millisecond later).
 181:main.c        ****                 reflectance_read(&ref);
 182:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 183:main.c        ****                 
 184:main.c        ****                 // This if-härdelli is needed solely due to the way that structs work...
 185:main.c        ****                 if (dir_flag == 1) 
 186:main.c        ****                 {
 187:main.c        ****                     digital = dig.l1;
 188:main.c        ****                     blackness_2 = ref.l1;
 189:main.c        ****                 } else {
 190:main.c        ****                     digital = dig.r1;
 191:main.c        ****                     blackness_2 = ref.r1;
 192:main.c        ****                 }
 193:main.c        ****                                
 194:main.c        ****                 // Calculate the difference between the two values.
 195:main.c        ****                 blackDiff = blackness_1 - blackness_2;
 196:main.c        ****                 
 197:main.c        ****                 // Store the value of blackDiff in an array and move the other stored values +1 for
 198:main.c        ****                 // (the stored values of blackDiff will be used to determine turning behavior direc
 199:main.c        ****                 diffs[2] = diffs[1];
 200:main.c        ****                 diffs[1] = diffs[0];
 201:main.c        ****                 diffs[0] = blackDiff;
 202:main.c        ****                 
 203:main.c        ****                 // Use average of 3 diffs for determining behaviour. it should smooth out the rough
 204:main.c        ****                 diff_ave = ( diffs[0] + diffs[1] + diffs[2]) / 3;
 205:main.c        ****                 
 206:main.c        ****                 // Needed for normalizing 'freak' blackness values (explained below).
 207:main.c        ****                 diff_prev_ave = (diffs[2] + diffs[1]) / 2;
 208:main.c        ****                 
 209:main.c        ****                 // Normalize diff_ave (needed for use in the exponential 3rd component of 'turn', t
 210:main.c        ****                 diff_pos = diff_ave;
 211:main.c        ****                 if (diff_pos < 0 ) { diff_pos *= -1.0; }
 212:main.c        ****                 
 213:main.c        ****                 if (diff_pos > 2000.0) { diff_pos = 2000.0; }
 214:main.c        ****                 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 9


 215:main.c        ****                 // Normalize the value of blackness_2 (assigned to a new variable; original blackne
 216:main.c        ****                 // The normalized value is used instead of plain blackness_2 in the first exponenti
 217:main.c        ****                 // This should ensure that random 'freak' sensor values, like 5 000 blackness when 
 218:main.c        ****                 // on the middle component of 'turn'.
 219:main.c        ****                 norm_blackness_2 = blackness_2;
 220:main.c        ****                 
 221:main.c        ****                 //if (norm_blackness_2 < 12000) { norm_blackness_2 = 12000;}
 222:main.c        ****                 
 223:main.c        ****                 // If the latest difference in blackness values is more than 2000 AND the previous 
 224:main.c        ****                 // than 1000, normalize blackness value with the TOTAL diff average (INCLUDING the 
 225:main.c        ****                 if ((blackDiff > 3000 || blackDiff < -3000) && (diff_prev_ave < 1000 || diff_prev_a
 226:main.c        ****                 {
 227:main.c        ****                     norm_blackness_2 -= diff_ave;  // seems like a good way to normalize, as the gr
 228:main.c        ****                     // Subtraction should work for both cases (blackDiff > 0 and < 0)... If a fluke
 229:main.c        ****                     // inevitably dominates the value of diff_ave. Otoh, whether 2000 diff is a goo
 230:main.c        ****                     // up to debate; experiments will be needed.
 231:main.c        ****                 }
 232:main.c        ****                 
 233:main.c        ****                 if (norm_blackness_2 > black_threshold) { norm_blackness_2 = black_threshold;}
 234:main.c        ****                                             
 235:main.c        ****                 // 'Base' turn component. Depends linearly on the last measured & normalized blackn
 236:main.c        ****                 // (simply a ball-park constant, to raise the value of turn globally).           
 237:main.c        ****                 turn = 2.5 * speed * ( (black_threshold - norm_blackness_2) / black_threshold );
 238:main.c        ****                 
 239:main.c        ****                 // First exponential turn component; depends on the normalized blackness value (cal
 240:main.c        ****                 // '57' is simply a ballpark coefficient, to fit the final value in an appropriate 
 241:main.c        ****                 turn += 60 * powf((black_threshold / blackness_2), 2.0); // max effect on turn is ~
 242:main.c        ****                 // With 16 000 blackness (line edge value), turn += 72.
 243:main.c        ****                 // (The lower values might seem a bit low. They may be raised once the behaviour of
 244:main.c        ****                 
 245:main.c        ****                 // Second exponential turn component. Depends on the positive, normalized average o
 246:main.c        ****                 // raised to the power of 1.35 and calibrated with the value of maxDiff. Again '225
 247:main.c        ****                 turn += 225 * ( powf(diff_pos, 1.35) / maxDiff );
 248:main.c        ****                 // 500 diff: +73 turn; 1000 diff: +130 turn; 2000 diff: +324 turn (=> 240);
 249:main.c        ****                 // NOTE: These values may be TOO large... Experiments are needed.
 250:main.c        ****                 
 251:main.c        ****                 // Ideally, the last component should always dominate, since it's the most critical
 252:main.c        **** 
 253:main.c        ****                 // Minimum final turn amount (with ~20 000 blackness and 0 diff) should be ~59 atm.
 254:main.c        ****                 // (Note that this value combination should actually be impossible to reach under m
 255:main.c        ****                 // With 17 999 blackness and zero diff: 97 final turn.
 256:main.c        ****                 // With 16 000 blackness ('real' line edge) and zero diff: 138 final turn.
 257:main.c        ****                 // With 14 000 blackness (over the edge!) and zero diff: 186 final turn. (along wit
 258:main.c        ****                 
 259:main.c        ****                 // Check for egregious values of 'turn' and correct them if found.
 260:main.c        ****                 if (turn > 240)
 261:main.c        ****                 {
 262:main.c        ****                     turn = 240;
 263:main.c        ****                 }
 264:main.c        ****                 
 265:main.c        ****                 
 266:main.c        ****                 //printf("dir: %d, turn: %d, diff_temp: %f, blackness_2: %f \n", dir_flag, turn, di
 267:main.c        ****                                                                                                    
 268:main.c        ****                 // Execute the turn (right turn if the left sensor activated, left turn if the righ
 269:main.c        ****                 // If diff_ave < 0, the turn is made in the opposite direction (moving towards cent
 270:main.c        ****                 // Between 0 and -300, the opposite turn is milder (75 % of regular turn value), wh
 271:main.c        ****                 // NOTE: Further modification of the opposite turn's turn value (in the Turn method
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 10


 272:main.c        ****                 Turn(turn, dir_flag, blackDiff);
 273:main.c        ****                              
 274:main.c        ****                 // Store the value of the second blackness measurement to the variable for the firs
 275:main.c        ****                 // As the loop continues, blackness_2's value is stored in blackness_1 and then bla
 276:main.c        ****                 blackness_1 = blackness_2;
 230              		.loc 1 276 0
 231 00f0 019D     		ldr	r5, [sp, #4]	@ float
 232              	.LVL37:
 233              	.L24:
 181:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 234              		.loc 1 181 0
 235 00f2 09A8     		add	r0, sp, #36
 236 00f4 FFF7FEFF 		bl	reflectance_read
 237              	.LVL38:
 182:main.c        ****                 
 238              		.loc 1 182 0
 239 00f8 07A8     		add	r0, sp, #28
 240 00fa FFF7FEFF 		bl	reflectance_digital
 241              	.LVL39:
 185:main.c        ****                 {
 242              		.loc 1 185 0
 243 00fe BBF1010F 		cmp	fp, #1
 244 0102 07D1     		bne	.L9
 187:main.c        ****                     blackness_2 = ref.l1;
 245              		.loc 1 187 0
 246 0104 BDF81E70 		ldrh	r7, [sp, #30]
 247              	.LVL40:
 188:main.c        ****                 } else {
 248              		.loc 1 188 0
 249 0108 BDF82600 		ldrh	r0, [sp, #38]
 250 010c FFF7FEFF 		bl	__aeabi_ui2f
 251              	.LVL41:
 252 0110 0190     		str	r0, [sp, #4]	@ float
 253              	.LVL42:
 254 0112 06E0     		b	.L10
 255              	.LVL43:
 256              	.L9:
 190:main.c        ****                     blackness_2 = ref.r1;
 257              		.loc 1 190 0
 258 0114 BDF82070 		ldrh	r7, [sp, #32]
 259              	.LVL44:
 191:main.c        ****                 }
 260              		.loc 1 191 0
 261 0118 BDF82800 		ldrh	r0, [sp, #40]
 262 011c FFF7FEFF 		bl	__aeabi_ui2f
 263              	.LVL45:
 264 0120 0190     		str	r0, [sp, #4]	@ float
 265              	.LVL46:
 266              	.L10:
 195:main.c        ****                 
 267              		.loc 1 195 0
 268 0122 2846     		mov	r0, r5
 269 0124 0199     		ldr	r1, [sp, #4]	@ float
 270 0126 FFF7FEFF 		bl	__aeabi_fsub
 271              	.LVL47:
 272 012a 0446     		mov	r4, r0
 273              	.LVL48:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 11


 199:main.c        ****                 diffs[1] = diffs[0];
 274              		.loc 1 199 0
 275 012c 0C9E     		ldr	r6, [sp, #48]	@ float
 200:main.c        ****                 diffs[0] = blackDiff;
 276              		.loc 1 200 0
 277 012e 0B9D     		ldr	r5, [sp, #44]	@ float
 278              	.LVL49:
 279 0130 0C95     		str	r5, [sp, #48]	@ float
 201:main.c        ****                 
 280              		.loc 1 201 0
 281 0132 0B90     		str	r0, [sp, #44]	@ float
 204:main.c        ****                 
 282              		.loc 1 204 0
 283 0134 2946     		mov	r1, r5
 284 0136 FFF7FEFF 		bl	__aeabi_fadd
 285              	.LVL50:
 286 013a 0146     		mov	r1, r0
 287 013c 3046     		mov	r0, r6
 288 013e FFF7FEFF 		bl	__aeabi_fadd
 289              	.LVL51:
 290 0142 5C49     		ldr	r1, .L47+8
 291 0144 FFF7FEFF 		bl	__aeabi_fdiv
 292              	.LVL52:
 293 0148 8046     		mov	r8, r0
 294              	.LVL53:
 207:main.c        ****                 
 295              		.loc 1 207 0
 296 014a 3046     		mov	r0, r6
 297              	.LVL54:
 298 014c 2946     		mov	r1, r5
 299 014e FFF7FEFF 		bl	__aeabi_fadd
 300              	.LVL55:
 301 0152 4FF07C51 		mov	r1, #1056964608
 302 0156 FFF7FEFF 		bl	__aeabi_fmul
 303              	.LVL56:
 304 015a 0546     		mov	r5, r0
 305              	.LVL57:
 211:main.c        ****                 
 306              		.loc 1 211 0
 307 015c 4046     		mov	r0, r8
 308              	.LVL58:
 309 015e 0021     		movs	r1, #0
 310 0160 FFF7FEFF 		bl	__aeabi_fcmplt
 311              	.LVL59:
 312 0164 10B1     		cbz	r0, .L43
 211:main.c        ****                 
 313              		.loc 1 211 0 is_stmt 0 discriminator 1
 314 0166 08F10046 		add	r6, r8, #-2147483648
 315              	.LVL60:
 316 016a 00E0     		b	.L11
 317              	.LVL61:
 318              	.L43:
 210:main.c        ****                 if (diff_pos < 0 ) { diff_pos *= -1.0; }
 319              		.loc 1 210 0 is_stmt 1
 320 016c 4646     		mov	r6, r8
 321              	.LVL62:
 322              	.L11:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 12


 213:main.c        ****                 
 323              		.loc 1 213 0
 324 016e 3046     		mov	r0, r6
 325 0170 5149     		ldr	r1, .L47+12
 326 0172 FFF7FEFF 		bl	__aeabi_fcmpgt
 327              	.LVL63:
 328 0176 00B1     		cbz	r0, .L13
 329 0178 4F4E     		ldr	r6, .L47+12
 330              	.LVL64:
 331              	.L13:
 225:main.c        ****                 {
 332              		.loc 1 225 0
 333 017a 2046     		mov	r0, r4
 334 017c 4F49     		ldr	r1, .L47+16
 335 017e FFF7FEFF 		bl	__aeabi_fcmpgt
 336              	.LVL65:
 337 0182 20B9     		cbnz	r0, .L14
 225:main.c        ****                 {
 338              		.loc 1 225 0 is_stmt 0 discriminator 2
 339 0184 2046     		mov	r0, r4
 340 0186 4E49     		ldr	r1, .L47+20
 341 0188 FFF7FEFF 		bl	__aeabi_fcmplt
 342              	.LVL66:
 343 018c 78B1     		cbz	r0, .L44
 344              	.L14:
 225:main.c        ****                 {
 345              		.loc 1 225 0 discriminator 3
 346 018e 2846     		mov	r0, r5
 347 0190 4C49     		ldr	r1, .L47+24
 348 0192 FFF7FEFF 		bl	__aeabi_fcmplt
 349              	.LVL67:
 350 0196 20B9     		cbnz	r0, .L17
 225:main.c        ****                 {
 351              		.loc 1 225 0 discriminator 4
 352 0198 2846     		mov	r0, r5
 353 019a 4B49     		ldr	r1, .L47+28
 354 019c FFF7FEFF 		bl	__aeabi_fcmpgt
 355              	.LVL68:
 356 01a0 40B1     		cbz	r0, .L45
 357              	.L17:
 227:main.c        ****                     // Subtraction should work for both cases (blackDiff > 0 and < 0)... If a fluke
 358              		.loc 1 227 0 is_stmt 1
 359 01a2 0198     		ldr	r0, [sp, #4]	@ float
 360 01a4 4146     		mov	r1, r8
 361 01a6 FFF7FEFF 		bl	__aeabi_fsub
 362              	.LVL69:
 363 01aa 8046     		mov	r8, r0
 364              	.LVL70:
 365 01ac 04E0     		b	.L15
 366              	.LVL71:
 367              	.L44:
 219:main.c        ****                 
 368              		.loc 1 219 0
 369 01ae DDF80480 		ldr	r8, [sp, #4]	@ float
 370              	.LVL72:
 371 01b2 01E0     		b	.L15
 372              	.LVL73:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 13


 373              	.L45:
 374 01b4 DDF80480 		ldr	r8, [sp, #4]	@ float
 375              	.LVL74:
 376              	.L15:
 233:main.c        ****                                             
 377              		.loc 1 233 0
 378 01b8 0398     		ldr	r0, [sp, #12]
 379 01ba FFF7FEFF 		bl	__aeabi_i2f
 380              	.LVL75:
 381 01be 0546     		mov	r5, r0
 382              	.LVL76:
 383 01c0 4146     		mov	r1, r8
 384 01c2 FFF7FEFF 		bl	__aeabi_fcmplt
 385              	.LVL77:
 386 01c6 00B1     		cbz	r0, .L19
 387 01c8 A846     		mov	r8, r5
 388              	.LVL78:
 389              	.L19:
 237:main.c        ****                 
 390              		.loc 1 237 0
 391 01ca 2846     		mov	r0, r5
 392 01cc 4146     		mov	r1, r8
 393 01ce FFF7FEFF 		bl	__aeabi_fsub
 394              	.LVL79:
 395 01d2 2946     		mov	r1, r5
 396 01d4 FFF7FEFF 		bl	__aeabi_fdiv
 397              	.LVL80:
 398 01d8 FFF7FEFF 		bl	__aeabi_f2d
 399              	.LVL81:
 400 01dc 0022     		movs	r2, #0
 401 01de 3B4B     		ldr	r3, .L47+32
 402 01e0 FFF7FEFF 		bl	__aeabi_dmul
 403              	.LVL82:
 404 01e4 FFF7FEFF 		bl	__aeabi_d2uiz
 405              	.LVL83:
 406 01e8 8046     		mov	r8, r0
 407              	.LVL84:
 241:main.c        ****                 // With 16 000 blackness (line edge value), turn += 72.
 408              		.loc 1 241 0
 409 01ea 2846     		mov	r0, r5
 410              	.LVL85:
 411 01ec 0199     		ldr	r1, [sp, #4]	@ float
 412 01ee FFF7FEFF 		bl	__aeabi_fdiv
 413              	.LVL86:
 414 01f2 4FF08041 		mov	r1, #1073741824
 415 01f6 FFF7FEFF 		bl	powf
 416              	.LVL87:
 417 01fa 3549     		ldr	r1, .L47+36
 418 01fc FFF7FEFF 		bl	__aeabi_fmul
 419              	.LVL88:
 420 0200 0546     		mov	r5, r0
 421 0202 4046     		mov	r0, r8
 422 0204 FFF7FEFF 		bl	__aeabi_ui2f
 423              	.LVL89:
 424 0208 2946     		mov	r1, r5
 425 020a FFF7FEFF 		bl	__aeabi_fadd
 426              	.LVL90:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 14


 427 020e FFF7FEFF 		bl	__aeabi_f2uiz
 428              	.LVL91:
 429 0212 0546     		mov	r5, r0
 430              	.LVL92:
 247:main.c        ****                 // 500 diff: +73 turn; 1000 diff: +130 turn; 2000 diff: +324 turn (=> 240);
 431              		.loc 1 247 0
 432 0214 3046     		mov	r0, r6
 433              	.LVL93:
 434 0216 2F49     		ldr	r1, .L47+40
 435 0218 FFF7FEFF 		bl	powf
 436              	.LVL94:
 437 021c 0646     		mov	r6, r0
 438              	.LVL95:
 439 021e 0298     		ldr	r0, [sp, #8]
 440 0220 FFF7FEFF 		bl	__aeabi_i2f
 441              	.LVL96:
 442 0224 0146     		mov	r1, r0
 443 0226 3046     		mov	r0, r6
 444 0228 FFF7FEFF 		bl	__aeabi_fdiv
 445              	.LVL97:
 446 022c 2A49     		ldr	r1, .L47+44
 447 022e FFF7FEFF 		bl	__aeabi_fmul
 448              	.LVL98:
 449 0232 0646     		mov	r6, r0
 450 0234 2846     		mov	r0, r5
 451 0236 FFF7FEFF 		bl	__aeabi_ui2f
 452              	.LVL99:
 453 023a 3146     		mov	r1, r6
 454 023c FFF7FEFF 		bl	__aeabi_fadd
 455              	.LVL100:
 456 0240 FFF7FEFF 		bl	__aeabi_f2uiz
 457              	.LVL101:
 260:main.c        ****                 {
 458              		.loc 1 260 0
 459 0244 F028     		cmp	r0, #240
 460 0246 00D9     		bls	.L20
 262:main.c        ****                 }
 461              		.loc 1 262 0
 462 0248 F020     		movs	r0, #240
 463              	.LVL102:
 464              	.L20:
 272:main.c        ****                              
 465              		.loc 1 272 0
 466 024a 5946     		mov	r1, fp
 467 024c 2246     		mov	r2, r4
 468 024e FFF7FEFF 		bl	Turn
 469              	.LVL103:
 277:main.c        ****          
 278:main.c        ****                 
 279:main.c        ****                 //First let's put line recognition logic here. It may be necessary to have line reg
 280:main.c        ****                 if (dig.l3 == 0 && dig.r3 == 0){
 470              		.loc 1 280 0
 471 0252 BDF81C30 		ldrh	r3, [sp, #28]
 472 0256 23B9     		cbnz	r3, .L21
 473              		.loc 1 280 0 is_stmt 0 discriminator 1
 474 0258 BDF82220 		ldrh	r2, [sp, #34]
 475 025c 0AB9     		cbnz	r2, .L21
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 15


 281:main.c        ****                     inBlack = 1;
 476              		.loc 1 281 0 is_stmt 1
 477 025e 4FF0010A 		mov	r10, #1
 478              	.LVL104:
 479              	.L21:
 282:main.c        ****                 }
 283:main.c        ****                 
 284:main.c        ****                 if (inBlack == 1 && dig.r3 == 1 && dig.l3 == 1){
 480              		.loc 1 284 0
 481 0262 BAF1000F 		cmp	r10, #0
 482 0266 09D0     		beq	.L22
 483              		.loc 1 284 0 is_stmt 0 discriminator 1
 484 0268 BDF82220 		ldrh	r2, [sp, #34]
 485 026c 012A     		cmp	r2, #1
 486 026e 05D1     		bne	.L22
 487              		.loc 1 284 0 discriminator 2
 488 0270 012B     		cmp	r3, #1
 489 0272 03D1     		bne	.L22
 285:main.c        ****                     ++countLines;
 490              		.loc 1 285 0 is_stmt 1
 491 0274 09F10109 		add	r9, r9, #1
 492              	.LVL105:
 286:main.c        ****                     inBlack = 0;
 493              		.loc 1 286 0
 494 0278 4FF0000A 		mov	r10, #0
 495              	.LVL106:
 496              	.L22:
 287:main.c        ****                 }
 288:main.c        ****                 
 289:main.c        ****                 //this must change (2=>1), when added moving to starting-line logic.
 290:main.c        ****                 if (countLines == 2 && dig.r3 == 0 && dig.l3 == 0){
 497              		.loc 1 290 0
 498 027c B9F1020F 		cmp	r9, #2
 499 0280 09D1     		bne	.L23
 500              		.loc 1 290 0 is_stmt 0 discriminator 1
 501 0282 BDF82220 		ldrh	r2, [sp, #34]
 502 0286 32B9     		cbnz	r2, .L23
 503              		.loc 1 290 0 discriminator 2
 504 0288 2BB9     		cbnz	r3, .L23
 291:main.c        ****                     motor_forward(0,0);
 505              		.loc 1 291 0 is_stmt 1
 506 028a 0020     		movs	r0, #0
 507 028c 0146     		mov	r1, r0
 508 028e FFF7FEFF 		bl	motor_forward
 509              	.LVL107:
 292:main.c        ****                     exitMainLoop = 1;
 510              		.loc 1 292 0
 511 0292 0123     		movs	r3, #1
 512 0294 0493     		str	r3, [sp, #16]
 513              	.LVL108:
 514              	.L23:
 293:main.c        ****                 }
 294:main.c        ****                 
 295:main.c        ****                 CyDelay(1);
 515              		.loc 1 295 0
 516 0296 0120     		movs	r0, #1
 517 0298 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 16


 518              	.LVL109:
 296:main.c        ****                
 297:main.c        ****                          
 298:main.c        ****             } while (digital == 1);
 519              		.loc 1 298 0
 520 029c 012F     		cmp	r7, #1
 521 029e 3FF427AF 		beq	.L40
 522 02a2 DDF81480 		ldr	r8, [sp, #20]
 523 02a6 0023     		movs	r3, #0
 524 02a8 1FE0     		b	.L25
 525              	.L48:
 526 02aa 00BF     		.align	2
 527              	.L47:
 528 02ac 00000000 		.word	sensor_isr_handler
 529 02b0 007EBB46 		.word	1186692608
 530 02b4 00004040 		.word	1077936128
 531 02b8 0000FA44 		.word	1157234688
 532 02bc 00803B45 		.word	1161527296
 533 02c0 00803BC5 		.word	-985956352
 534 02c4 00007A44 		.word	1148846080
 535 02c8 00007AC4 		.word	-998637568
 536 02cc 00C08240 		.word	1082310656
 537 02d0 00007042 		.word	1114636288
 538 02d4 CDCCAC3F 		.word	1068289229
 539 02d8 00006143 		.word	1130430464
 540              	.LVL110:
 541              	.L26:
 299:main.c        ****                                                 
 300:main.c        ****             // Since the turn has ended, reset the stored diff values back to zero, so the next tur
 301:main.c        ****             for (i = 0; i < 3; i++)
 302:main.c        ****             {
 303:main.c        ****                 diffs[i] = 0;
 542              		.loc 1 303 0 discriminator 3
 543 02dc 0EAA     		add	r2, sp, #56
 544 02de 02EB8302 		add	r2, r2, r3, lsl #2
 545 02e2 0021     		movs	r1, #0
 546 02e4 42F80C1C 		str	r1, [r2, #-12]	@ float
 301:main.c        ****             {
 547              		.loc 1 301 0 discriminator 3
 548 02e8 0133     		adds	r3, r3, #1
 549              	.LVL111:
 550              	.L25:
 301:main.c        ****             {
 551              		.loc 1 301 0 is_stmt 0 discriminator 1
 552 02ea 022B     		cmp	r3, #2
 553 02ec F6DD     		ble	.L26
 554              	.LVL112:
 304:main.c        ****             }
 305:main.c        ****           
 306:main.c        ****             // For added safety, set turn to zero... May not be necessary.
 307:main.c        ****             turn = 0;
 308:main.c        ****             dir_flag = 0; // for safety as well...
 309:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 310:main.c        ****             Custom_forward(speed);
 555              		.loc 1 310 0 is_stmt 1
 556 02ee F020     		movs	r0, #240
 557 02f0 FFF7FEFF 		bl	Custom_forward
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 17


 558              	.LVL113:
 276:main.c        ****          
 559              		.loc 1 276 0
 560 02f4 019D     		ldr	r5, [sp, #4]	@ float
 308:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 561              		.loc 1 308 0
 562 02f6 4FF0000B 		mov	fp, #0
 563              	.LVL114:
 564              	.L8:
 311:main.c        ****             
 312:main.c        ****             
 313:main.c        ****                                           
 314:main.c        ****         } 
 315:main.c        ****         
 316:main.c        ****         
 317:main.c        ****         //First let's put line recognition logic here. It may be necessary to have line regocnition
 318:main.c        ****         if (dig.l3 == 0 && dig.r3 == 0){
 565              		.loc 1 318 0
 566 02fa BDF81C30 		ldrh	r3, [sp, #28]
 567 02fe 23B9     		cbnz	r3, .L27
 568              		.loc 1 318 0 is_stmt 0 discriminator 1
 569 0300 BDF82220 		ldrh	r2, [sp, #34]
 570 0304 0AB9     		cbnz	r2, .L27
 319:main.c        ****             inBlack = 1;
 571              		.loc 1 319 0 is_stmt 1
 572 0306 4FF0010A 		mov	r10, #1
 573              	.LVL115:
 574              	.L27:
 320:main.c        ****         }
 321:main.c        ****         
 322:main.c        ****         if (inBlack == 1 && dig.r3 == 1 && dig.l3 == 1){
 575              		.loc 1 322 0
 576 030a BAF1000F 		cmp	r10, #0
 577 030e 09D0     		beq	.L28
 578              		.loc 1 322 0 is_stmt 0 discriminator 1
 579 0310 BDF82220 		ldrh	r2, [sp, #34]
 580 0314 012A     		cmp	r2, #1
 581 0316 05D1     		bne	.L28
 582              		.loc 1 322 0 discriminator 2
 583 0318 012B     		cmp	r3, #1
 584 031a 03D1     		bne	.L28
 323:main.c        ****             ++countLines;
 585              		.loc 1 323 0 is_stmt 1
 586 031c 09F10109 		add	r9, r9, #1
 587              	.LVL116:
 324:main.c        ****             inBlack = 0;
 588              		.loc 1 324 0
 589 0320 4FF0000A 		mov	r10, #0
 590              	.LVL117:
 591              	.L28:
 325:main.c        ****         }
 326:main.c        ****         
 327:main.c        ****         //this must change (2=>1), when added moving to starting-line logic.
 328:main.c        ****         if (countLines == 2 && dig.r3 == 0 && dig.l3 == 0){
 592              		.loc 1 328 0
 593 0324 B9F1020F 		cmp	r9, #2
 594 0328 09D1     		bne	.L29
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 18


 595              		.loc 1 328 0 is_stmt 0 discriminator 1
 596 032a BDF82220 		ldrh	r2, [sp, #34]
 597 032e 32B9     		cbnz	r2, .L29
 598              		.loc 1 328 0 discriminator 2
 599 0330 2BB9     		cbnz	r3, .L29
 329:main.c        ****             motor_forward(0,0);
 600              		.loc 1 329 0 is_stmt 1
 601 0332 0020     		movs	r0, #0
 602 0334 0146     		mov	r1, r0
 603 0336 FFF7FEFF 		bl	motor_forward
 604              	.LVL118:
 330:main.c        ****             exitMainLoop = 1;
 605              		.loc 1 330 0
 606 033a 0123     		movs	r3, #1
 607 033c 0493     		str	r3, [sp, #16]
 608              	.LVL119:
 609              	.L29:
 331:main.c        ****         }        
 332:main.c        ****                         
 333:main.c        ****         
 334:main.c        ****         
 335:main.c        ****         // For measuring the battery voltage at regular intervals. 
 336:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 337:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 338:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 339:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 340:main.c        ****         cycles++;
 610              		.loc 1 340 0
 611 033e 08F10108 		add	r8, r8, #1
 612              	.LVL120:
 341:main.c        ****         if (cycles >= 80000)
 613              		.loc 1 341 0
 614 0342 074B     		ldr	r3, .L49
 615 0344 9845     		cmp	r8, r3
 616 0346 03DD     		ble	.L30
 342:main.c        ****         {
 343:main.c        ****             Measure_Voltage();
 617              		.loc 1 343 0
 618 0348 FFF7FEFF 		bl	Measure_Voltage
 619              	.LVL121:
 344:main.c        ****             cycles = 0;
 620              		.loc 1 344 0
 621 034c 4FF00008 		mov	r8, #0
 622              	.LVL122:
 623              	.L30:
 345:main.c        ****         }
 346:main.c        ****         
 347:main.c        ****         CyDelay(1);   
 624              		.loc 1 347 0
 625 0350 0120     		movs	r0, #1
 626 0352 FFF7FEFF 		bl	CyDelay
 627              	.LVL123:
 628              	.L5:
 134:main.c        ****     {    
 629              		.loc 1 134 0
 630 0356 049B     		ldr	r3, [sp, #16]
 631 0358 002B     		cmp	r3, #0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 19


 632 035a 3FF492AE 		beq	.L31
 633              	.L32:
 348:main.c        ****     }  
 349:main.c        ****     
 350:main.c        ****     //empty loop to end with
 351:main.c        ****     while(1) {}
 634              		.loc 1 351 0 discriminator 1
 635 035e FEE7     		b	.L32
 636              	.L50:
 637              		.align	2
 638              	.L49:
 639 0360 7F380100 		.word	79999
 640              		.cfi_endproc
 641              	.LFE63:
 642              		.size	main, .-main
 643              		.section	.text._write,"ax",%progbits
 644              		.align	2
 645              		.global	_write
 646              		.thumb
 647              		.thumb_func
 648              		.type	_write, %function
 649              	_write:
 650              	.LFB64:
 352:main.c        **** }
 353:main.c        ****     
 354:main.c        **** // ================================================================================================
 355:main.c        **** // ================================================================================================
 356:main.c        **** 
 357:main.c        **** 
 358:main.c        **** //*/
 359:main.c        **** 
 360:main.c        **** /*//ultra sonic sensor//
 361:main.c        **** int main()
 362:main.c        **** {
 363:main.c        ****     CyGlobalIntEnable; 
 364:main.c        ****     UART_1_Start();
 365:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 366:main.c        ****     while(1) {
 367:main.c        ****         //If you want to print out the value  
 368:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 369:main.c        ****         CyDelay(1000);
 370:main.c        ****     }
 371:main.c        **** }   
 372:main.c        **** //*/
 373:main.c        **** 
 374:main.c        **** 
 375:main.c        **** /*//nunchuk//
 376:main.c        **** int main()
 377:main.c        **** {
 378:main.c        ****     CyGlobalIntEnable; 
 379:main.c        ****     UART_1_Start();
 380:main.c        ****   
 381:main.c        ****     nunchuk_start();
 382:main.c        ****     nunchuk_init();
 383:main.c        ****     
 384:main.c        ****     for(;;)
 385:main.c        ****     {    
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 20


 386:main.c        ****         nunchuk_read();
 387:main.c        ****     }
 388:main.c        **** }   
 389:main.c        **** //*/
 390:main.c        **** 
 391:main.c        **** 
 392:main.c        **** /*//IR receiver//
 393:main.c        **** int main()
 394:main.c        **** {
 395:main.c        ****     CyGlobalIntEnable; 
 396:main.c        ****     UART_1_Start();
 397:main.c        ****     
 398:main.c        ****     unsigned int IR_val; 
 399:main.c        ****     
 400:main.c        ****     for(;;)
 401:main.c        ****     {
 402:main.c        ****        IR_val = get_IR();
 403:main.c        ****        printf("%x\r\n\n",IR_val);
 404:main.c        ****     }    
 405:main.c        ****  }   
 406:main.c        **** //*/
 407:main.c        **** 
 408:main.c        **** 
 409:main.c        **** /*//Ambient light sensor//
 410:main.c        **** int main()
 411:main.c        **** {
 412:main.c        ****     CyGlobalIntEnable; 
 413:main.c        ****     UART_1_Start();
 414:main.c        ****     
 415:main.c        ****     I2C_Start();
 416:main.c        ****     
 417:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 418:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 419:main.c        ****     
 420:main.c        ****     for(;;)
 421:main.c        ****     {    
 422:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 423:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 424:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 425:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 426:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 427:main.c        ****         
 428:main.c        ****         uint8 CH0, CH1;
 429:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 430:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 431:main.c        **** 
 432:main.c        ****         double Ch0 = CH0;
 433:main.c        ****         double Ch1 = CH1;
 434:main.c        ****         
 435:main.c        ****         double data = 0;
 436:main.c        ****         data = getLux(Ch0,Ch1);
 437:main.c        ****         
 438:main.c        ****         // If you want to print out data
 439:main.c        ****         //printf("%lf\r\n",data);    
 440:main.c        ****     }    
 441:main.c        ****  }   
 442:main.c        **** //*/
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 21


 443:main.c        **** 
 444:main.c        **** 
 445:main.c        **** /*//accelerometer//
 446:main.c        **** int main()
 447:main.c        **** {
 448:main.c        ****     CyGlobalIntEnable; 
 449:main.c        ****     UART_1_Start();
 450:main.c        ****   
 451:main.c        ****     I2C_Start();
 452:main.c        ****   
 453:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 454:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 455:main.c        ****     
 456:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 457:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 458:main.c        ****     
 459:main.c        ****     
 460:main.c        ****     for(;;)
 461:main.c        ****     {
 462:main.c        ****         //print out accelerometer output
 463:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 464:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 465:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 466:main.c        ****         
 467:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 468:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 469:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 470:main.c        ****         
 471:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 472:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 473:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 474:main.c        ****         
 475:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 476:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 477:main.c        ****         printf("\n");
 478:main.c        ****         
 479:main.c        ****         CyDelay(50);
 480:main.c        ****     }
 481:main.c        **** }   
 482:main.c        **** //*/
 483:main.c        **** 
 484:main.c        **** 
 485:main.c        **** /*//reflectance//
 486:main.c        **** int main()
 487:main.c        **** {
 488:main.c        ****     struct sensors_ ref;
 489:main.c        ****     struct sensors_ dig;
 490:main.c        ****     CyGlobalIntEnable; 
 491:main.c        ****     UART_1_Start();
 492:main.c        ****   
 493:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 494:main.c        ****     
 495:main.c        ****     reflectance_start();
 496:main.c        **** 
 497:main.c        ****     IR_led_Write(1);
 498:main.c        ****     for(;;)
 499:main.c        ****     {
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 22


 500:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 501:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 502:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 503:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 504:main.c        ****         
 505:main.c        ****         CyDelay(500);
 506:main.c        ****     }
 507:main.c        **** }   
 508:main.c        **** //*/
 509:main.c        **** 
 510:main.c        ****  /* //motor//
 511:main.c        **** int main()
 512:main.c        **** {
 513:main.c        ****     CyGlobalIntEnable; 
 514:main.c        ****     UART_1_Start();
 515:main.c        **** 
 516:main.c        ****     motor_start();              // motor start
 517:main.c        **** 
 518:main.c        ****     motor_forward(100,2000);     // moving forward
 519:main.c        ****     motor_turn(200,50,2000);     // turn
 520:main.c        ****     motor_turn(50,200,2000);     // turn
 521:main.c        ****     motor_backward(100,2000);    // movinb backward
 522:main.c        ****        
 523:main.c        ****     motor_stop();               // motor stop
 524:main.c        ****     
 525:main.c        ****     for(;;)
 526:main.c        ****     {
 527:main.c        **** 
 528:main.c        ****     }
 529:main.c        **** }
 530:main.c        **** //*/
 531:main.c        ****     
 532:main.c        **** 
 533:main.c        **** /*//gyroscope//
 534:main.c        **** int main()
 535:main.c        **** {
 536:main.c        ****     CyGlobalIntEnable; 
 537:main.c        ****     UART_1_Start();
 538:main.c        ****   
 539:main.c        ****     I2C_Start();
 540:main.c        ****   
 541:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 542:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 543:main.c        ****     
 544:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 545:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 546:main.c        ****     
 547:main.c        ****     for(;;)
 548:main.c        ****     {
 549:main.c        ****         //print out gyroscope output
 550:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 551:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 552:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 553:main.c        ****         
 554:main.c        ****         
 555:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 556:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 23


 557:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 558:main.c        ****         
 559:main.c        ****         
 560:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 561:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 562:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 563:main.c        ****      
 564:main.c        ****         // If you want to print value
 565:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 566:main.c        ****         CyDelay(50);
 567:main.c        ****     }
 568:main.c        **** }   
 569:main.c        **** //*/
 570:main.c        **** 
 571:main.c        **** 
 572:main.c        **** /*//magnetometer//
 573:main.c        **** int main()
 574:main.c        **** {
 575:main.c        ****     CyGlobalIntEnable; 
 576:main.c        ****     UART_1_Start();
 577:main.c        ****   
 578:main.c        ****     I2C_Start();
 579:main.c        ****    
 580:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 581:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 582:main.c        ****     
 583:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 584:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 585:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 586:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 587:main.c        ****     
 588:main.c        ****     
 589:main.c        ****     for(;;)
 590:main.c        ****     {
 591:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 592:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 593:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 594:main.c        ****         
 595:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 596:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 597:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 598:main.c        ****         
 599:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 600:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 601:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 602:main.c        ****         
 603:main.c        ****         heading(X_AXIS, Y_AXIS);
 604:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 605:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 606:main.c        ****         CyDelay(50);      
 607:main.c        ****     }
 608:main.c        **** }   
 609:main.c        **** //*/
 610:main.c        **** 
 611:main.c        **** 
 612:main.c        **** /*
 613:main.c        **** 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 24


 614:main.c        **** 
 615:main.c        ****     <p>
 616:main.c        ****     <B>Sensors</B><br>
 617:main.c        ****     &nbsp;Included: <br>
 618:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 619:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 620:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 621:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 622:main.c        ****     &nbsp;Wii nunchuck<br>
 623:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 624:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 625:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 626:main.c        ****     &nbsp;IR LED <br><br><br>
 627:main.c        ****     </p>
 628:main.c        ****     
 629:main.c        ****     <p>
 630:main.c        ****     <B>Communication</B><br>
 631:main.c        ****     I2C, UART, Serial<br>
 632:main.c        ****     </p>
 633:main.c        **** 
 634:main.c        **** */
 635:main.c        **** 
 636:main.c        **** 
 637:main.c        **** #if 0
 638:main.c        **** int rread(void)
 639:main.c        **** {
 640:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 641:main.c        ****     SC0_Write(1);
 642:main.c        ****     CyDelayUs(10);
 643:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 644:main.c        ****     Timer_1_Start();
 645:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 646:main.c        ****     uint16_t end = 0;
 647:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 648:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 649:main.c        ****             end = Timer_1_ReadCounter();
 650:main.c        ****         }
 651:main.c        ****     }
 652:main.c        ****     Timer_1_Stop();
 653:main.c        ****     
 654:main.c        ****     return (start - end);
 655:main.c        **** }
 656:main.c        **** #endif
 657:main.c        **** 
 658:main.c        **** /* Don't remove the functions below */
 659:main.c        **** int _write(int file, char *ptr, int len)
 660:main.c        **** {
 651              		.loc 1 660 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              	.LVL124:
 656 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 657              		.cfi_def_cfa_offset 24
 658              		.cfi_offset 3, -24
 659              		.cfi_offset 4, -20
 660              		.cfi_offset 5, -16
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 25


 661              		.cfi_offset 6, -12
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 0002 0C46     		mov	r4, r1
 665 0004 1746     		mov	r7, r2
 666              	.LVL125:
 661:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 662:main.c        **** 	int n;
 663:main.c        **** 	for(n = 0; n < len; n++) {
 667              		.loc 1 663 0
 668 0006 0025     		movs	r5, #0
 669 0008 0BE0     		b	.L52
 670              	.LVL126:
 671              	.L54:
 664:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 672              		.loc 1 664 0
 673 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 674 000c 0A2B     		cmp	r3, #10
 675 000e 02D1     		bne	.L53
 676              		.loc 1 664 0 is_stmt 0 discriminator 1
 677 0010 0D20     		movs	r0, #13
 678 0012 FFF7FEFF 		bl	UART_1_PutChar
 679              	.LVL127:
 680              	.L53:
 665:main.c        **** 		UART_1_PutChar(*ptr++);
 681              		.loc 1 665 0 is_stmt 1 discriminator 2
 682 0016 661C     		adds	r6, r4, #1
 683              	.LVL128:
 684 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 685 001a FFF7FEFF 		bl	UART_1_PutChar
 686              	.LVL129:
 663:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 687              		.loc 1 663 0 discriminator 2
 688 001e 0135     		adds	r5, r5, #1
 689              	.LVL130:
 690              		.loc 1 665 0 discriminator 2
 691 0020 3446     		mov	r4, r6
 692              	.LVL131:
 693              	.L52:
 663:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 694              		.loc 1 663 0 discriminator 1
 695 0022 BD42     		cmp	r5, r7
 696 0024 F1DB     		blt	.L54
 666:main.c        **** 	}
 667:main.c        **** 	return len;
 668:main.c        **** }
 697              		.loc 1 668 0
 698 0026 3846     		mov	r0, r7
 699 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 700              		.cfi_endproc
 701              	.LFE64:
 702              		.size	_write, .-_write
 703 002a 00BF     		.section	.text._read,"ax",%progbits
 704              		.align	2
 705              		.global	_read
 706              		.thumb
 707              		.thumb_func
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 26


 708              		.type	_read, %function
 709              	_read:
 710              	.LFB65:
 669:main.c        **** 
 670:main.c        **** int _read (int file, char *ptr, int count)
 671:main.c        **** {
 711              		.loc 1 671 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL132:
 716 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 717              		.cfi_def_cfa_offset 24
 718              		.cfi_offset 3, -24
 719              		.cfi_offset 4, -20
 720              		.cfi_offset 5, -16
 721              		.cfi_offset 6, -12
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 0F46     		mov	r7, r1
 725 0004 1446     		mov	r4, r2
 726              	.LVL133:
 672:main.c        ****     int chs = 0;
 727              		.loc 1 672 0
 728 0006 0026     		movs	r6, #0
 673:main.c        ****     char ch;
 674:main.c        ****  
 675:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 676:main.c        ****     while(count > 0) {
 729              		.loc 1 676 0
 730 0008 12E0     		b	.L58
 731              	.LVL134:
 732              	.L61:
 677:main.c        ****         ch = UART_1_GetChar();
 733              		.loc 1 677 0
 734 000a FFF7FEFF 		bl	UART_1_GetChar
 735              	.LVL135:
 678:main.c        ****         if(ch != 0) {
 736              		.loc 1 678 0
 737 000e 0546     		mov	r5, r0
 738 0010 70B1     		cbz	r0, .L58
 679:main.c        ****             UART_1_PutChar(ch);
 739              		.loc 1 679 0
 740 0012 FFF7FEFF 		bl	UART_1_PutChar
 741              	.LVL136:
 680:main.c        ****             chs++;
 742              		.loc 1 680 0
 743 0016 0136     		adds	r6, r6, #1
 744              	.LVL137:
 681:main.c        ****             if(ch == '\r') {
 745              		.loc 1 681 0
 746 0018 0D2D     		cmp	r5, #13
 747 001a 03D1     		bne	.L59
 748              	.LVL138:
 682:main.c        ****                 ch = '\n';
 683:main.c        ****                 UART_1_PutChar(ch);
 749              		.loc 1 683 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 27


 750 001c 0A20     		movs	r0, #10
 751 001e FFF7FEFF 		bl	UART_1_PutChar
 752              	.LVL139:
 682:main.c        ****                 ch = '\n';
 753              		.loc 1 682 0
 754 0022 0A25     		movs	r5, #10
 755              	.LVL140:
 756              	.L59:
 684:main.c        ****             }
 685:main.c        ****             *ptr++ = ch;
 757              		.loc 1 685 0
 758 0024 7B1C     		adds	r3, r7, #1
 759              	.LVL141:
 760 0026 3D70     		strb	r5, [r7]
 686:main.c        ****             count--;
 761              		.loc 1 686 0
 762 0028 013C     		subs	r4, r4, #1
 763              	.LVL142:
 687:main.c        ****             if(ch == '\n') break;
 764              		.loc 1 687 0
 765 002a 0A2D     		cmp	r5, #10
 766 002c 02D0     		beq	.L60
 685:main.c        ****             count--;
 767              		.loc 1 685 0
 768 002e 1F46     		mov	r7, r3
 769              	.LVL143:
 770              	.L58:
 676:main.c        ****         ch = UART_1_GetChar();
 771              		.loc 1 676 0
 772 0030 002C     		cmp	r4, #0
 773 0032 EADC     		bgt	.L61
 774              	.LVL144:
 775              	.L60:
 688:main.c        ****         }
 689:main.c        ****     }
 690:main.c        ****     return chs;
 691:main.c        **** }
 776              		.loc 1 691 0
 777 0034 3046     		mov	r0, r6
 778 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 779              		.cfi_endproc
 780              	.LFE65:
 781              		.size	_read, .-_read
 782              		.text
 783              	.Letext0:
 784              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 785              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 786              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 787              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 788              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 789              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 790              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 791              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 792              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 793              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 794              		.file 12 "Generated_Source\\PSoC5/SW1.h"
 795              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 28


 796              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9
 797              		.section	.debug_info,"",%progbits
 798              	.Ldebug_info0:
 799 0000 68070000 		.4byte	0x768
 800 0004 0400     		.2byte	0x4
 801 0006 00000000 		.4byte	.Ldebug_abbrev0
 802 000a 04       		.byte	0x4
 803 000b 01       		.uleb128 0x1
 804 000c 99000000 		.4byte	.LASF73
 805 0010 01       		.byte	0x1
 806 0011 7A030000 		.4byte	.LASF74
 807 0015 22000000 		.4byte	.LASF75
 808 0019 00000000 		.4byte	.Ldebug_ranges0+0
 809 001d 00000000 		.4byte	0
 810 0021 00000000 		.4byte	.Ldebug_line0
 811 0025 02       		.uleb128 0x2
 812 0026 04       		.byte	0x4
 813 0027 04       		.byte	0x4
 814 0028 9E010000 		.4byte	.LASF0
 815 002c 02       		.uleb128 0x2
 816 002d 01       		.byte	0x1
 817 002e 06       		.byte	0x6
 818 002f B3020000 		.4byte	.LASF1
 819 0033 02       		.uleb128 0x2
 820 0034 01       		.byte	0x1
 821 0035 08       		.byte	0x8
 822 0036 2E020000 		.4byte	.LASF2
 823 003a 02       		.uleb128 0x2
 824 003b 02       		.byte	0x2
 825 003c 05       		.byte	0x5
 826 003d 0F000000 		.4byte	.LASF3
 827 0041 03       		.uleb128 0x3
 828 0042 83000000 		.4byte	.LASF5
 829 0046 02       		.byte	0x2
 830 0047 2B       		.byte	0x2b
 831 0048 4C000000 		.4byte	0x4c
 832 004c 02       		.uleb128 0x2
 833 004d 02       		.byte	0x2
 834 004e 07       		.byte	0x7
 835 004f 0A030000 		.4byte	.LASF4
 836 0053 03       		.uleb128 0x3
 837 0054 CD030000 		.4byte	.LASF6
 838 0058 02       		.byte	0x2
 839 0059 3F       		.byte	0x3f
 840 005a 5E000000 		.4byte	0x5e
 841 005e 02       		.uleb128 0x2
 842 005f 04       		.byte	0x4
 843 0060 05       		.byte	0x5
 844 0061 36030000 		.4byte	.LASF7
 845 0065 02       		.uleb128 0x2
 846 0066 04       		.byte	0x4
 847 0067 07       		.byte	0x7
 848 0068 8C030000 		.4byte	.LASF8
 849 006c 02       		.uleb128 0x2
 850 006d 08       		.byte	0x8
 851 006e 05       		.byte	0x5
 852 006f A4010000 		.4byte	.LASF9
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 29


 853 0073 02       		.uleb128 0x2
 854 0074 08       		.byte	0x8
 855 0075 07       		.byte	0x7
 856 0076 D2020000 		.4byte	.LASF10
 857 007a 04       		.uleb128 0x4
 858 007b 04       		.byte	0x4
 859 007c 05       		.byte	0x5
 860 007d 696E7400 		.ascii	"int\000"
 861 0081 02       		.uleb128 0x2
 862 0082 04       		.byte	0x4
 863 0083 07       		.byte	0x7
 864 0084 E9020000 		.4byte	.LASF11
 865 0088 03       		.uleb128 0x3
 866 0089 F6020000 		.4byte	.LASF12
 867 008d 03       		.byte	0x3
 868 008e 21       		.byte	0x21
 869 008f 41000000 		.4byte	0x41
 870 0093 03       		.uleb128 0x3
 871 0094 49030000 		.4byte	.LASF13
 872 0098 03       		.byte	0x3
 873 0099 2C       		.byte	0x2c
 874 009a 53000000 		.4byte	0x53
 875 009e 05       		.uleb128 0x5
 876 009f 62010000 		.4byte	.LASF14
 877 00a3 04       		.byte	0x4
 878 00a4 9201     		.2byte	0x192
 879 00a6 33000000 		.4byte	0x33
 880 00aa 05       		.uleb128 0x5
 881 00ab 73030000 		.4byte	.LASF15
 882 00af 04       		.byte	0x4
 883 00b0 9401     		.2byte	0x194
 884 00b2 65000000 		.4byte	0x65
 885 00b6 02       		.uleb128 0x2
 886 00b7 08       		.byte	0x8
 887 00b8 04       		.byte	0x4
 888 00b9 17040000 		.4byte	.LASF16
 889 00bd 02       		.uleb128 0x2
 890 00be 01       		.byte	0x1
 891 00bf 08       		.byte	0x8
 892 00c0 E0010000 		.4byte	.LASF17
 893 00c4 05       		.uleb128 0x5
 894 00c5 6B020000 		.4byte	.LASF18
 895 00c9 04       		.byte	0x4
 896 00ca 4E02     		.2byte	0x24e
 897 00cc D0000000 		.4byte	0xd0
 898 00d0 06       		.uleb128 0x6
 899 00d1 04       		.byte	0x4
 900 00d2 D6000000 		.4byte	0xd6
 901 00d6 07       		.uleb128 0x7
 902 00d7 02       		.uleb128 0x2
 903 00d8 04       		.byte	0x4
 904 00d9 07       		.byte	0x7
 905 00da 19000000 		.4byte	.LASF19
 906 00de 06       		.uleb128 0x6
 907 00df 04       		.byte	0x4
 908 00e0 BD000000 		.4byte	0xbd
 909 00e4 02       		.uleb128 0x2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 30


 910 00e5 08       		.byte	0x8
 911 00e6 04       		.byte	0x4
 912 00e7 4D020000 		.4byte	.LASF20
 913 00eb 08       		.uleb128 0x8
 914 00ec 33010000 		.4byte	.LASF76
 915 00f0 08       		.byte	0x8
 916 00f1 05       		.byte	0x5
 917 00f2 11       		.byte	0x11
 918 00f3 24010000 		.4byte	0x124
 919 00f7 09       		.uleb128 0x9
 920 00f8 6C3300   		.ascii	"l3\000"
 921 00fb 05       		.byte	0x5
 922 00fc 12       		.byte	0x12
 923 00fd 88000000 		.4byte	0x88
 924 0101 00       		.byte	0
 925 0102 09       		.uleb128 0x9
 926 0103 6C3100   		.ascii	"l1\000"
 927 0106 05       		.byte	0x5
 928 0107 14       		.byte	0x14
 929 0108 88000000 		.4byte	0x88
 930 010c 02       		.byte	0x2
 931 010d 09       		.uleb128 0x9
 932 010e 723100   		.ascii	"r1\000"
 933 0111 05       		.byte	0x5
 934 0112 15       		.byte	0x15
 935 0113 88000000 		.4byte	0x88
 936 0117 04       		.byte	0x4
 937 0118 09       		.uleb128 0x9
 938 0119 723300   		.ascii	"r3\000"
 939 011c 05       		.byte	0x5
 940 011d 17       		.byte	0x17
 941 011e 88000000 		.4byte	0x88
 942 0122 06       		.byte	0x6
 943 0123 00       		.byte	0
 944 0124 0A       		.uleb128 0xa
 945 0125 77000000 		.4byte	.LASF77
 946 0129 01       		.byte	0x1
 947 012a 2E       		.byte	0x2e
 948 012b 7A000000 		.4byte	0x7a
 949 012f 00000000 		.4byte	.LFB63
 950 0133 64030000 		.4byte	.LFE63-.LFB63
 951 0137 01       		.uleb128 0x1
 952 0138 9C       		.byte	0x9c
 953 0139 00050000 		.4byte	0x500
 954 013d 0B       		.uleb128 0xb
 955 013e 70000000 		.4byte	.LASF21
 956 0142 01       		.byte	0x1
 957 0143 31       		.byte	0x31
 958 0144 7A000000 		.4byte	0x7a
 959 0148 00000000 		.4byte	.LLST0
 960 014c 0B       		.uleb128 0xb
 961 014d 3C020000 		.4byte	.LASF22
 962 0151 01       		.byte	0x1
 963 0152 34       		.byte	0x34
 964 0153 7A000000 		.4byte	0x7a
 965 0157 4E000000 		.4byte	.LLST1
 966 015b 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 31


 967 015c BE030000 		.4byte	.LASF23
 968 0160 01       		.byte	0x1
 969 0161 37       		.byte	0x37
 970 0162 7A000000 		.4byte	0x7a
 971 0166 84000000 		.4byte	.LLST2
 972 016a 0B       		.uleb128 0xb
 973 016b 2B030000 		.4byte	.LASF24
 974 016f 01       		.byte	0x1
 975 0170 3A       		.byte	0x3a
 976 0171 7A000000 		.4byte	0x7a
 977 0175 E8000000 		.4byte	.LLST3
 978 0179 0B       		.uleb128 0xb
 979 017a 78020000 		.4byte	.LASF25
 980 017e 01       		.byte	0x1
 981 017f 3B       		.byte	0x3b
 982 0180 7A000000 		.4byte	0x7a
 983 0184 07010000 		.4byte	.LLST4
 984 0188 0B       		.uleb128 0xb
 985 0189 F5010000 		.4byte	.LASF26
 986 018d 01       		.byte	0x1
 987 018e 3C       		.byte	0x3c
 988 018f 7A000000 		.4byte	0x7a
 989 0193 54010000 		.4byte	.LLST5
 990 0197 0B       		.uleb128 0xb
 991 0198 FF020000 		.4byte	.LASF27
 992 019c 01       		.byte	0x1
 993 019d 3F       		.byte	0x3f
 994 019e AA000000 		.4byte	0xaa
 995 01a2 B2010000 		.4byte	.LLST6
 996 01a6 0C       		.uleb128 0xc
 997 01a7 04030000 		.4byte	.LASF28
 998 01ab 01       		.byte	0x1
 999 01ac 42       		.byte	0x42
 1000 01ad AA000000 		.4byte	0xaa
 1001 01b1 F0       		.byte	0xf0
 1002 01b2 0D       		.uleb128 0xd
 1003 01b3 4F010000 		.4byte	.LASF29
 1004 01b7 01       		.byte	0x1
 1005 01b8 45       		.byte	0x45
 1006 01b9 7A000000 		.4byte	0x7a
 1007 01bd 0852     		.2byte	0x5208
 1008 01bf 0D       		.uleb128 0xd
 1009 01c0 3C010000 		.4byte	.LASF30
 1010 01c4 01       		.byte	0x1
 1011 01c5 46       		.byte	0x46
 1012 01c6 7A000000 		.4byte	0x7a
 1013 01ca 5046     		.2byte	0x4650
 1014 01cc 0D       		.uleb128 0xd
 1015 01cd D7030000 		.4byte	.LASF31
 1016 01d1 01       		.byte	0x1
 1017 01d2 47       		.byte	0x47
 1018 01d3 7A000000 		.4byte	0x7a
 1019 01d7 4858     		.2byte	0x5848
 1020 01d9 0D       		.uleb128 0xd
 1021 01da F3030000 		.4byte	.LASF32
 1022 01de 01       		.byte	0x1
 1023 01df 48       		.byte	0x48
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 32


 1024 01e0 7A000000 		.4byte	0x7a
 1025 01e4 FC53     		.2byte	0x53fc
 1026 01e6 0D       		.uleb128 0xd
 1027 01e7 31040000 		.4byte	.LASF33
 1028 01eb 01       		.byte	0x1
 1029 01ec 4A       		.byte	0x4a
 1030 01ed 7A000000 		.4byte	0x7a
 1031 01f1 A116     		.2byte	0x16a1
 1032 01f3 0D       		.uleb128 0xd
 1033 01f4 1E040000 		.4byte	.LASF34
 1034 01f8 01       		.byte	0x1
 1035 01f9 4B       		.byte	0x4b
 1036 01fa 7A000000 		.4byte	0x7a
 1037 01fe 9411     		.2byte	0x1194
 1038 0200 0D       		.uleb128 0xd
 1039 0201 A0020000 		.4byte	.LASF35
 1040 0205 01       		.byte	0x1
 1041 0206 4C       		.byte	0x4c
 1042 0207 7A000000 		.4byte	0x7a
 1043 020b AA11     		.2byte	0x11aa
 1044 020d 0D       		.uleb128 0xd
 1045 020e BF020000 		.4byte	.LASF36
 1046 0212 01       		.byte	0x1
 1047 0213 4D       		.byte	0x4d
 1048 0214 7A000000 		.4byte	0x7a
 1049 0218 9518     		.2byte	0x1895
 1050 021a 0D       		.uleb128 0xd
 1051 021b 65000000 		.4byte	.LASF37
 1052 021f 01       		.byte	0x1
 1053 0220 4F       		.byte	0x4f
 1054 0221 7A000000 		.4byte	0x7a
 1055 0225 BC34     		.2byte	0x34bc
 1056 0227 0D       		.uleb128 0xd
 1057 0228 81030000 		.4byte	.LASF38
 1058 022c 01       		.byte	0x1
 1059 022d 50       		.byte	0x50
 1060 022e 7A000000 		.4byte	0x7a
 1061 0232 9E46     		.2byte	0x469e
 1062 0234 0B       		.uleb128 0xb
 1063 0235 B6030000 		.4byte	.LASF39
 1064 0239 01       		.byte	0x1
 1065 023a 53       		.byte	0x53
 1066 023b 7A000000 		.4byte	0x7a
 1067 023f 09020000 		.4byte	.LLST7
 1068 0243 0B       		.uleb128 0xb
 1069 0244 51030000 		.4byte	.LASF40
 1070 0248 01       		.byte	0x1
 1071 0249 54       		.byte	0x54
 1072 024a 7A000000 		.4byte	0x7a
 1073 024e 54020000 		.4byte	.LLST8
 1074 0252 0B       		.uleb128 0xb
 1075 0253 E5010000 		.4byte	.LASF41
 1076 0257 01       		.byte	0x1
 1077 0258 55       		.byte	0x55
 1078 0259 7A000000 		.4byte	0x7a
 1079 025d AB020000 		.4byte	.LLST9
 1080 0261 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 33


 1081 0262 41020000 		.4byte	.LASF42
 1082 0266 01       		.byte	0x1
 1083 0267 56       		.byte	0x56
 1084 0268 25000000 		.4byte	0x25
 1085 026c 02030000 		.4byte	.LLST10
 1086 0270 0B       		.uleb128 0xb
 1087 0271 B2010000 		.4byte	.LASF43
 1088 0275 01       		.byte	0x1
 1089 0276 57       		.byte	0x57
 1090 0277 25000000 		.4byte	0x25
 1091 027b 81030000 		.4byte	.LLST11
 1092 027f 0B       		.uleb128 0xb
 1093 0280 3F030000 		.4byte	.LASF44
 1094 0284 01       		.byte	0x1
 1095 0285 58       		.byte	0x58
 1096 0286 25000000 		.4byte	0x25
 1097 028a BE030000 		.4byte	.LLST12
 1098 028e 0E       		.uleb128 0xe
 1099 028f 93000000 		.4byte	.LASF45
 1100 0293 01       		.byte	0x1
 1101 0294 59       		.byte	0x59
 1102 0295 00050000 		.4byte	0x500
 1103 0299 02       		.uleb128 0x2
 1104 029a 91       		.byte	0x91
 1105 029b 4C       		.sleb128 -52
 1106 029c 0B       		.uleb128 0xb
 1107 029d 02020000 		.4byte	.LASF46
 1108 02a1 01       		.byte	0x1
 1109 02a2 5A       		.byte	0x5a
 1110 02a3 25000000 		.4byte	0x25
 1111 02a7 F7030000 		.4byte	.LLST13
 1112 02ab 0B       		.uleb128 0xb
 1113 02ac BE010000 		.4byte	.LASF47
 1114 02b0 01       		.byte	0x1
 1115 02b1 5B       		.byte	0x5b
 1116 02b2 25000000 		.4byte	0x25
 1117 02b6 3B040000 		.4byte	.LLST14
 1118 02ba 0F       		.uleb128 0xf
 1119 02bb 6900     		.ascii	"i\000"
 1120 02bd 01       		.byte	0x1
 1121 02be 5C       		.byte	0x5c
 1122 02bf 7A000000 		.4byte	0x7a
 1123 02c3 69040000 		.4byte	.LLST15
 1124 02c7 0B       		.uleb128 0xb
 1125 02c8 EA030000 		.4byte	.LASF48
 1126 02cc 01       		.byte	0x1
 1127 02cd 5D       		.byte	0x5d
 1128 02ce 25000000 		.4byte	0x25
 1129 02d2 7C040000 		.4byte	.LLST16
 1130 02d6 0B       		.uleb128 0xb
 1131 02d7 06040000 		.4byte	.LASF49
 1132 02db 01       		.byte	0x1
 1133 02dc 5E       		.byte	0x5e
 1134 02dd 25000000 		.4byte	0x25
 1135 02e1 C0040000 		.4byte	.LLST17
 1136 02e5 10       		.uleb128 0x10
 1137 02e6 72656600 		.ascii	"ref\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 34


 1138 02ea 01       		.byte	0x1
 1139 02eb 61       		.byte	0x61
 1140 02ec EB000000 		.4byte	0xeb
 1141 02f0 02       		.uleb128 0x2
 1142 02f1 91       		.byte	0x91
 1143 02f2 44       		.sleb128 -60
 1144 02f3 10       		.uleb128 0x10
 1145 02f4 64696700 		.ascii	"dig\000"
 1146 02f8 01       		.byte	0x1
 1147 02f9 62       		.byte	0x62
 1148 02fa EB000000 		.4byte	0xeb
 1149 02fe 03       		.uleb128 0x3
 1150 02ff 91       		.byte	0x91
 1151 0300 BC7F     		.sleb128 -68
 1152 0302 0B       		.uleb128 0xb
 1153 0303 0B020000 		.4byte	.LASF50
 1154 0307 01       		.byte	0x1
 1155 0308 74       		.byte	0x74
 1156 0309 9E000000 		.4byte	0x9e
 1157 030d 08050000 		.4byte	.LLST18
 1158 0311 11       		.uleb128 0x11
 1159 0312 12000000 		.4byte	.LVL2
 1160 0316 2C060000 		.4byte	0x62c
 1161 031a 11       		.uleb128 0x11
 1162 031b 16000000 		.4byte	.LVL3
 1163 031f 33060000 		.4byte	0x633
 1164 0323 11       		.uleb128 0x11
 1165 0324 1A000000 		.4byte	.LVL4
 1166 0328 3A060000 		.4byte	0x63a
 1167 032c 11       		.uleb128 0x11
 1168 032d 1E000000 		.4byte	.LVL5
 1169 0331 47060000 		.4byte	0x647
 1170 0335 12       		.uleb128 0x12
 1171 0336 26000000 		.4byte	.LVL6
 1172 033a 54060000 		.4byte	0x654
 1173 033e 4D030000 		.4byte	0x34d
 1174 0342 13       		.uleb128 0x13
 1175 0343 01       		.uleb128 0x1
 1176 0344 51       		.byte	0x51
 1177 0345 01       		.uleb128 0x1
 1178 0346 30       		.byte	0x30
 1179 0347 13       		.uleb128 0x13
 1180 0348 01       		.uleb128 0x1
 1181 0349 50       		.byte	0x50
 1182 034a 01       		.uleb128 0x1
 1183 034b 30       		.byte	0x30
 1184 034c 00       		.byte	0
 1185 034d 11       		.uleb128 0x11
 1186 034e 2C000000 		.4byte	.LVL7
 1187 0352 6A060000 		.4byte	0x66a
 1188 0356 12       		.uleb128 0x12
 1189 0357 40000000 		.4byte	.LVL8
 1190 035b 7B060000 		.4byte	0x67b
 1191 035f 80030000 		.4byte	0x380
 1192 0363 13       		.uleb128 0x13
 1193 0364 01       		.uleb128 0x1
 1194 0365 53       		.byte	0x53
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 35


 1195 0366 03       		.uleb128 0x3
 1196 0367 0A       		.byte	0xa
 1197 0368 FC53     		.2byte	0x53fc
 1198 036a 13       		.uleb128 0x13
 1199 036b 01       		.uleb128 0x1
 1200 036c 52       		.byte	0x52
 1201 036d 03       		.uleb128 0x3
 1202 036e 0A       		.byte	0xa
 1203 036f 4858     		.2byte	0x5848
 1204 0371 13       		.uleb128 0x13
 1205 0372 01       		.uleb128 0x1
 1206 0373 51       		.byte	0x51
 1207 0374 03       		.uleb128 0x3
 1208 0375 0A       		.byte	0xa
 1209 0376 5046     		.2byte	0x4650
 1210 0378 13       		.uleb128 0x13
 1211 0379 01       		.uleb128 0x1
 1212 037a 50       		.byte	0x50
 1213 037b 03       		.uleb128 0x3
 1214 037c 0A       		.byte	0xa
 1215 037d 0852     		.2byte	0x5208
 1216 037f 00       		.byte	0
 1217 0380 11       		.uleb128 0x11
 1218 0381 44000000 		.4byte	.LVL9
 1219 0385 9B060000 		.4byte	0x69b
 1220 0389 12       		.uleb128 0x12
 1221 038a 4A000000 		.4byte	.LVL10
 1222 038e A2060000 		.4byte	0x6a2
 1223 0392 9C030000 		.4byte	0x39c
 1224 0396 13       		.uleb128 0x13
 1225 0397 01       		.uleb128 0x1
 1226 0398 50       		.byte	0x50
 1227 0399 01       		.uleb128 0x1
 1228 039a 31       		.byte	0x31
 1229 039b 00       		.byte	0
 1230 039c 12       		.uleb128 0x12
 1231 039d 50000000 		.4byte	.LVL11
 1232 03a1 B3060000 		.4byte	0x6b3
 1233 03a5 AF030000 		.4byte	0x3af
 1234 03a9 13       		.uleb128 0x13
 1235 03aa 01       		.uleb128 0x1
 1236 03ab 50       		.byte	0x50
 1237 03ac 01       		.uleb128 0x1
 1238 03ad 30       		.byte	0x30
 1239 03ae 00       		.byte	0
 1240 03af 11       		.uleb128 0x11
 1241 03b0 58000000 		.4byte	.LVL13
 1242 03b4 C4060000 		.4byte	0x6c4
 1243 03b8 12       		.uleb128 0x12
 1244 03b9 60000000 		.4byte	.LVL16
 1245 03bd CF060000 		.4byte	0x6cf
 1246 03c1 CB030000 		.4byte	0x3cb
 1247 03c5 13       		.uleb128 0x13
 1248 03c6 01       		.uleb128 0x1
 1249 03c7 50       		.byte	0x50
 1250 03c8 01       		.uleb128 0x1
 1251 03c9 3A       		.byte	0x3a
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 36


 1252 03ca 00       		.byte	0
 1253 03cb 12       		.uleb128 0x12
 1254 03cc 6C000000 		.4byte	.LVL18
 1255 03d0 E0060000 		.4byte	0x6e0
 1256 03d4 DF030000 		.4byte	0x3df
 1257 03d8 13       		.uleb128 0x13
 1258 03d9 01       		.uleb128 0x1
 1259 03da 50       		.byte	0x50
 1260 03db 02       		.uleb128 0x2
 1261 03dc 09       		.byte	0x9
 1262 03dd F0       		.byte	0xf0
 1263 03de 00       		.byte	0
 1264 03df 12       		.uleb128 0x12
 1265 03e0 88000000 		.4byte	.LVL20
 1266 03e4 F1060000 		.4byte	0x6f1
 1267 03e8 F3030000 		.4byte	0x3f3
 1268 03ec 13       		.uleb128 0x13
 1269 03ed 01       		.uleb128 0x1
 1270 03ee 50       		.byte	0x50
 1271 03ef 02       		.uleb128 0x2
 1272 03f0 91       		.byte	0x91
 1273 03f1 44       		.sleb128 -60
 1274 03f2 00       		.byte	0
 1275 03f3 12       		.uleb128 0x12
 1276 03f4 8E000000 		.4byte	.LVL21
 1277 03f8 08070000 		.4byte	0x708
 1278 03fc 08040000 		.4byte	0x408
 1279 0400 13       		.uleb128 0x13
 1280 0401 01       		.uleb128 0x1
 1281 0402 50       		.byte	0x50
 1282 0403 03       		.uleb128 0x3
 1283 0404 91       		.byte	0x91
 1284 0405 BC7F     		.sleb128 -68
 1285 0407 00       		.byte	0
 1286 0408 12       		.uleb128 0x12
 1287 0409 A8000000 		.4byte	.LVL27
 1288 040d CF060000 		.4byte	0x6cf
 1289 0411 1B040000 		.4byte	0x41b
 1290 0415 13       		.uleb128 0x13
 1291 0416 01       		.uleb128 0x1
 1292 0417 50       		.byte	0x50
 1293 0418 01       		.uleb128 0x1
 1294 0419 31       		.byte	0x31
 1295 041a 00       		.byte	0
 1296 041b 12       		.uleb128 0x12
 1297 041c D4000000 		.4byte	.LVL34
 1298 0420 CF060000 		.4byte	0x6cf
 1299 0424 2E040000 		.4byte	0x42e
 1300 0428 13       		.uleb128 0x13
 1301 0429 01       		.uleb128 0x1
 1302 042a 50       		.byte	0x50
 1303 042b 01       		.uleb128 0x1
 1304 042c 31       		.byte	0x31
 1305 042d 00       		.byte	0
 1306 042e 12       		.uleb128 0x12
 1307 042f F8000000 		.4byte	.LVL38
 1308 0433 F1060000 		.4byte	0x6f1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 37


 1309 0437 42040000 		.4byte	0x442
 1310 043b 13       		.uleb128 0x13
 1311 043c 01       		.uleb128 0x1
 1312 043d 50       		.byte	0x50
 1313 043e 02       		.uleb128 0x2
 1314 043f 91       		.byte	0x91
 1315 0440 44       		.sleb128 -60
 1316 0441 00       		.byte	0
 1317 0442 12       		.uleb128 0x12
 1318 0443 FE000000 		.4byte	.LVL39
 1319 0447 08070000 		.4byte	0x708
 1320 044b 57040000 		.4byte	0x457
 1321 044f 13       		.uleb128 0x13
 1322 0450 01       		.uleb128 0x1
 1323 0451 50       		.byte	0x50
 1324 0452 03       		.uleb128 0x3
 1325 0453 91       		.byte	0x91
 1326 0454 BC7F     		.sleb128 -68
 1327 0456 00       		.byte	0
 1328 0457 11       		.uleb128 0x11
 1329 0458 FA010000 		.4byte	.LVL87
 1330 045c 19070000 		.4byte	0x719
 1331 0460 12       		.uleb128 0x12
 1332 0461 1C020000 		.4byte	.LVL94
 1333 0465 19070000 		.4byte	0x719
 1334 0469 75040000 		.4byte	0x475
 1335 046d 13       		.uleb128 0x13
 1336 046e 01       		.uleb128 0x1
 1337 046f 50       		.byte	0x50
 1338 0470 03       		.uleb128 0x3
 1339 0471 F5       		.byte	0xf5
 1340 0472 06       		.uleb128 0x6
 1341 0473 25       		.uleb128 0x25
 1342 0474 00       		.byte	0
 1343 0475 12       		.uleb128 0x12
 1344 0476 52020000 		.4byte	.LVL103
 1345 047a 34070000 		.4byte	0x734
 1346 047e 90040000 		.4byte	0x490
 1347 0482 13       		.uleb128 0x13
 1348 0483 01       		.uleb128 0x1
 1349 0484 52       		.byte	0x52
 1350 0485 03       		.uleb128 0x3
 1351 0486 F5       		.byte	0xf5
 1352 0487 04       		.uleb128 0x4
 1353 0488 25       		.uleb128 0x25
 1354 0489 13       		.uleb128 0x13
 1355 048a 01       		.uleb128 0x1
 1356 048b 51       		.byte	0x51
 1357 048c 02       		.uleb128 0x2
 1358 048d 7B       		.byte	0x7b
 1359 048e 00       		.sleb128 0
 1360 048f 00       		.byte	0
 1361 0490 12       		.uleb128 0x12
 1362 0491 92020000 		.4byte	.LVL107
 1363 0495 54060000 		.4byte	0x654
 1364 0499 A8040000 		.4byte	0x4a8
 1365 049d 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 38


 1366 049e 01       		.uleb128 0x1
 1367 049f 51       		.byte	0x51
 1368 04a0 01       		.uleb128 0x1
 1369 04a1 30       		.byte	0x30
 1370 04a2 13       		.uleb128 0x13
 1371 04a3 01       		.uleb128 0x1
 1372 04a4 50       		.byte	0x50
 1373 04a5 01       		.uleb128 0x1
 1374 04a6 30       		.byte	0x30
 1375 04a7 00       		.byte	0
 1376 04a8 12       		.uleb128 0x12
 1377 04a9 9C020000 		.4byte	.LVL109
 1378 04ad CF060000 		.4byte	0x6cf
 1379 04b1 BB040000 		.4byte	0x4bb
 1380 04b5 13       		.uleb128 0x13
 1381 04b6 01       		.uleb128 0x1
 1382 04b7 50       		.byte	0x50
 1383 04b8 01       		.uleb128 0x1
 1384 04b9 31       		.byte	0x31
 1385 04ba 00       		.byte	0
 1386 04bb 12       		.uleb128 0x12
 1387 04bc F4020000 		.4byte	.LVL113
 1388 04c0 E0060000 		.4byte	0x6e0
 1389 04c4 CF040000 		.4byte	0x4cf
 1390 04c8 13       		.uleb128 0x13
 1391 04c9 01       		.uleb128 0x1
 1392 04ca 50       		.byte	0x50
 1393 04cb 02       		.uleb128 0x2
 1394 04cc 09       		.byte	0x9
 1395 04cd F0       		.byte	0xf0
 1396 04ce 00       		.byte	0
 1397 04cf 12       		.uleb128 0x12
 1398 04d0 3A030000 		.4byte	.LVL118
 1399 04d4 54060000 		.4byte	0x654
 1400 04d8 E7040000 		.4byte	0x4e7
 1401 04dc 13       		.uleb128 0x13
 1402 04dd 01       		.uleb128 0x1
 1403 04de 51       		.byte	0x51
 1404 04df 01       		.uleb128 0x1
 1405 04e0 30       		.byte	0x30
 1406 04e1 13       		.uleb128 0x13
 1407 04e2 01       		.uleb128 0x1
 1408 04e3 50       		.byte	0x50
 1409 04e4 01       		.uleb128 0x1
 1410 04e5 30       		.byte	0x30
 1411 04e6 00       		.byte	0
 1412 04e7 11       		.uleb128 0x11
 1413 04e8 4C030000 		.4byte	.LVL121
 1414 04ec 3A060000 		.4byte	0x63a
 1415 04f0 14       		.uleb128 0x14
 1416 04f1 56030000 		.4byte	.LVL123
 1417 04f5 CF060000 		.4byte	0x6cf
 1418 04f9 13       		.uleb128 0x13
 1419 04fa 01       		.uleb128 0x1
 1420 04fb 50       		.byte	0x50
 1421 04fc 01       		.uleb128 0x1
 1422 04fd 31       		.byte	0x31
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 39


 1423 04fe 00       		.byte	0
 1424 04ff 00       		.byte	0
 1425 0500 15       		.uleb128 0x15
 1426 0501 25000000 		.4byte	0x25
 1427 0505 10050000 		.4byte	0x510
 1428 0509 16       		.uleb128 0x16
 1429 050a D7000000 		.4byte	0xd7
 1430 050e 02       		.byte	0x2
 1431 050f 00       		.byte	0
 1432 0510 17       		.uleb128 0x17
 1433 0511 7C000000 		.4byte	.LASF52
 1434 0515 01       		.byte	0x1
 1435 0516 9302     		.2byte	0x293
 1436 0518 7A000000 		.4byte	0x7a
 1437 051c 00000000 		.4byte	.LFB64
 1438 0520 2A000000 		.4byte	.LFE64-.LFB64
 1439 0524 01       		.uleb128 0x1
 1440 0525 9C       		.byte	0x9c
 1441 0526 85050000 		.4byte	0x585
 1442 052a 18       		.uleb128 0x18
 1443 052b 8E000000 		.4byte	.LASF51
 1444 052f 01       		.byte	0x1
 1445 0530 9302     		.2byte	0x293
 1446 0532 7A000000 		.4byte	0x7a
 1447 0536 1B050000 		.4byte	.LLST19
 1448 053a 19       		.uleb128 0x19
 1449 053b 70747200 		.ascii	"ptr\000"
 1450 053f 01       		.byte	0x1
 1451 0540 9302     		.2byte	0x293
 1452 0542 DE000000 		.4byte	0xde
 1453 0546 3C050000 		.4byte	.LLST20
 1454 054a 19       		.uleb128 0x19
 1455 054b 6C656E00 		.ascii	"len\000"
 1456 054f 01       		.byte	0x1
 1457 0550 9302     		.2byte	0x293
 1458 0552 7A000000 		.4byte	0x7a
 1459 0556 70050000 		.4byte	.LLST21
 1460 055a 1A       		.uleb128 0x1a
 1461 055b 6E00     		.ascii	"n\000"
 1462 055d 01       		.byte	0x1
 1463 055e 9602     		.2byte	0x296
 1464 0560 7A000000 		.4byte	0x7a
 1465 0564 8E050000 		.4byte	.LLST22
 1466 0568 12       		.uleb128 0x12
 1467 0569 16000000 		.4byte	.LVL127
 1468 056d 4F070000 		.4byte	0x74f
 1469 0571 7B050000 		.4byte	0x57b
 1470 0575 13       		.uleb128 0x13
 1471 0576 01       		.uleb128 0x1
 1472 0577 50       		.byte	0x50
 1473 0578 01       		.uleb128 0x1
 1474 0579 3D       		.byte	0x3d
 1475 057a 00       		.byte	0
 1476 057b 11       		.uleb128 0x11
 1477 057c 1E000000 		.4byte	.LVL129
 1478 0580 4F070000 		.4byte	0x74f
 1479 0584 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 40


 1480 0585 17       		.uleb128 0x17
 1481 0586 9A020000 		.4byte	.LASF53
 1482 058a 01       		.byte	0x1
 1483 058b 9E02     		.2byte	0x29e
 1484 058d 7A000000 		.4byte	0x7a
 1485 0591 00000000 		.4byte	.LFB65
 1486 0595 38000000 		.4byte	.LFE65-.LFB65
 1487 0599 01       		.uleb128 0x1
 1488 059a 9C       		.byte	0x9c
 1489 059b 1B060000 		.4byte	0x61b
 1490 059f 18       		.uleb128 0x18
 1491 05a0 8E000000 		.4byte	.LASF51
 1492 05a4 01       		.byte	0x1
 1493 05a5 9E02     		.2byte	0x29e
 1494 05a7 7A000000 		.4byte	0x7a
 1495 05ab AD050000 		.4byte	.LLST23
 1496 05af 19       		.uleb128 0x19
 1497 05b0 70747200 		.ascii	"ptr\000"
 1498 05b4 01       		.byte	0x1
 1499 05b5 9E02     		.2byte	0x29e
 1500 05b7 DE000000 		.4byte	0xde
 1501 05bb CE050000 		.4byte	.LLST24
 1502 05bf 18       		.uleb128 0x18
 1503 05c0 C7030000 		.4byte	.LASF54
 1504 05c4 01       		.byte	0x1
 1505 05c5 9E02     		.2byte	0x29e
 1506 05c7 7A000000 		.4byte	0x7a
 1507 05cb 02060000 		.4byte	.LLST25
 1508 05cf 1A       		.uleb128 0x1a
 1509 05d0 63687300 		.ascii	"chs\000"
 1510 05d4 01       		.byte	0x1
 1511 05d5 A002     		.2byte	0x2a0
 1512 05d7 7A000000 		.4byte	0x7a
 1513 05db 20060000 		.4byte	.LLST26
 1514 05df 1A       		.uleb128 0x1a
 1515 05e0 636800   		.ascii	"ch\000"
 1516 05e3 01       		.byte	0x1
 1517 05e4 A102     		.2byte	0x2a1
 1518 05e6 BD000000 		.4byte	0xbd
 1519 05ea 3F060000 		.4byte	.LLST27
 1520 05ee 11       		.uleb128 0x11
 1521 05ef 0E000000 		.4byte	.LVL135
 1522 05f3 60070000 		.4byte	0x760
 1523 05f7 12       		.uleb128 0x12
 1524 05f8 16000000 		.4byte	.LVL136
 1525 05fc 4F070000 		.4byte	0x74f
 1526 0600 0B060000 		.4byte	0x60b
 1527 0604 13       		.uleb128 0x13
 1528 0605 01       		.uleb128 0x1
 1529 0606 50       		.byte	0x50
 1530 0607 02       		.uleb128 0x2
 1531 0608 75       		.byte	0x75
 1532 0609 00       		.sleb128 0
 1533 060a 00       		.byte	0
 1534 060b 14       		.uleb128 0x14
 1535 060c 22000000 		.4byte	.LVL139
 1536 0610 4F070000 		.4byte	0x74f
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 41


 1537 0614 13       		.uleb128 0x13
 1538 0615 01       		.uleb128 0x1
 1539 0616 50       		.byte	0x50
 1540 0617 01       		.uleb128 0x1
 1541 0618 3A       		.byte	0x3a
 1542 0619 00       		.byte	0
 1543 061a 00       		.byte	0
 1544 061b 1B       		.uleb128 0x1b
 1545 061c 44040000 		.4byte	.LASF78
 1546 0620 0D       		.byte	0xd
 1547 0621 9606     		.2byte	0x696
 1548 0623 27060000 		.4byte	0x627
 1549 0627 1C       		.uleb128 0x1c
 1550 0628 93000000 		.4byte	0x93
 1551 062c 1D       		.uleb128 0x1d
 1552 062d 12020000 		.4byte	.LASF55
 1553 0631 06       		.byte	0x6
 1554 0632 54       		.byte	0x54
 1555 0633 1D       		.uleb128 0x1d
 1556 0634 59020000 		.4byte	.LASF56
 1557 0638 07       		.byte	0x7
 1558 0639 34       		.byte	0x34
 1559 063a 1E       		.uleb128 0x1e
 1560 063b 68010000 		.4byte	.LASF57
 1561 063f 01       		.byte	0x1
 1562 0640 2A       		.byte	0x2a
 1563 0641 47060000 		.4byte	0x647
 1564 0645 1F       		.uleb128 0x1f
 1565 0646 00       		.byte	0
 1566 0647 1E       		.uleb128 0x1e
 1567 0648 27010000 		.4byte	.LASF58
 1568 064c 01       		.byte	0x1
 1569 064d 25       		.byte	0x25
 1570 064e 54060000 		.4byte	0x654
 1571 0652 1F       		.uleb128 0x1f
 1572 0653 00       		.byte	0
 1573 0654 20       		.uleb128 0x20
 1574 0655 1D030000 		.4byte	.LASF59
 1575 0659 01       		.byte	0x1
 1576 065a 26       		.byte	0x26
 1577 065b 6A060000 		.4byte	0x66a
 1578 065f 21       		.uleb128 0x21
 1579 0660 9E000000 		.4byte	0x9e
 1580 0664 21       		.uleb128 0x21
 1581 0665 AA000000 		.4byte	0xaa
 1582 0669 00       		.byte	0
 1583 066a 20       		.uleb128 0x20
 1584 066b 9E030000 		.4byte	.LASF60
 1585 066f 08       		.byte	0x8
 1586 0670 18       		.byte	0x18
 1587 0671 7B060000 		.4byte	0x67b
 1588 0675 21       		.uleb128 0x21
 1589 0676 C4000000 		.4byte	0xc4
 1590 067a 00       		.byte	0
 1591 067b 20       		.uleb128 0x20
 1592 067c 80020000 		.4byte	.LASF61
 1593 0680 01       		.byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 42


 1594 0681 29       		.byte	0x29
 1595 0682 9B060000 		.4byte	0x69b
 1596 0686 21       		.uleb128 0x21
 1597 0687 88000000 		.4byte	0x88
 1598 068b 21       		.uleb128 0x21
 1599 068c 88000000 		.4byte	0x88
 1600 0690 21       		.uleb128 0x21
 1601 0691 88000000 		.4byte	0x88
 1602 0695 21       		.uleb128 0x21
 1603 0696 88000000 		.4byte	0x88
 1604 069a 00       		.byte	0
 1605 069b 1D       		.uleb128 0x1d
 1606 069c 78010000 		.4byte	.LASF62
 1607 06a0 05       		.byte	0x5
 1608 06a1 1A       		.byte	0x1a
 1609 06a2 20       		.uleb128 0x20
 1610 06a3 6A040000 		.4byte	.LASF63
 1611 06a7 09       		.byte	0x9
 1612 06a8 26       		.byte	0x26
 1613 06a9 B3060000 		.4byte	0x6b3
 1614 06ad 21       		.uleb128 0x21
 1615 06ae 9E000000 		.4byte	0x9e
 1616 06b2 00       		.byte	0
 1617 06b3 20       		.uleb128 0x20
 1618 06b4 59030000 		.4byte	.LASF64
 1619 06b8 0A       		.byte	0xa
 1620 06b9 26       		.byte	0x26
 1621 06ba C4060000 		.4byte	0x6c4
 1622 06be 21       		.uleb128 0x21
 1623 06bf 9E000000 		.4byte	0x9e
 1624 06c3 00       		.byte	0
 1625 06c4 22       		.uleb128 0x22
 1626 06c5 6A030000 		.4byte	.LASF71
 1627 06c9 0C       		.byte	0xc
 1628 06ca 29       		.byte	0x29
 1629 06cb 9E000000 		.4byte	0x9e
 1630 06cf 20       		.uleb128 0x20
 1631 06d0 51040000 		.4byte	.LASF65
 1632 06d4 0B       		.byte	0xb
 1633 06d5 76       		.byte	0x76
 1634 06d6 E0060000 		.4byte	0x6e0
 1635 06da 21       		.uleb128 0x21
 1636 06db AA000000 		.4byte	0xaa
 1637 06df 00       		.byte	0
 1638 06e0 20       		.uleb128 0x20
 1639 06e1 1F020000 		.4byte	.LASF66
 1640 06e5 01       		.byte	0x1
 1641 06e6 27       		.byte	0x27
 1642 06e7 F1060000 		.4byte	0x6f1
 1643 06eb 21       		.uleb128 0x21
 1644 06ec 9E000000 		.4byte	0x9e
 1645 06f0 00       		.byte	0
 1646 06f1 20       		.uleb128 0x20
 1647 06f2 59040000 		.4byte	.LASF67
 1648 06f6 05       		.byte	0x5
 1649 06f7 1B       		.byte	0x1b
 1650 06f8 02070000 		.4byte	0x702
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 43


 1651 06fc 21       		.uleb128 0x21
 1652 06fd 02070000 		.4byte	0x702
 1653 0701 00       		.byte	0
 1654 0702 06       		.uleb128 0x6
 1655 0703 04       		.byte	0x4
 1656 0704 EB000000 		.4byte	0xeb
 1657 0708 20       		.uleb128 0x20
 1658 0709 CC010000 		.4byte	.LASF68
 1659 070d 05       		.byte	0x5
 1660 070e 1C       		.byte	0x1c
 1661 070f 19070000 		.4byte	0x719
 1662 0713 21       		.uleb128 0x21
 1663 0714 02070000 		.4byte	0x702
 1664 0718 00       		.byte	0
 1665 0719 23       		.uleb128 0x23
 1666 071a 8A010000 		.4byte	.LASF79
 1667 071e 0E       		.byte	0xe
 1668 071f 5301     		.2byte	0x153
 1669 0721 25000000 		.4byte	0x25
 1670 0725 34070000 		.4byte	0x734
 1671 0729 21       		.uleb128 0x21
 1672 072a 25000000 		.4byte	0x25
 1673 072e 21       		.uleb128 0x21
 1674 072f 25000000 		.4byte	0x25
 1675 0733 00       		.byte	0
 1676 0734 20       		.uleb128 0x20
 1677 0735 B1030000 		.4byte	.LASF69
 1678 0739 01       		.byte	0x1
 1679 073a 2B       		.byte	0x2b
 1680 073b 4F070000 		.4byte	0x74f
 1681 073f 21       		.uleb128 0x21
 1682 0740 AA000000 		.4byte	0xaa
 1683 0744 21       		.uleb128 0x21
 1684 0745 7A000000 		.4byte	0x7a
 1685 0749 21       		.uleb128 0x21
 1686 074a 25000000 		.4byte	0x25
 1687 074e 00       		.byte	0
 1688 074f 20       		.uleb128 0x20
 1689 0750 8F010000 		.4byte	.LASF70
 1690 0754 06       		.byte	0x6
 1691 0755 8A       		.byte	0x8a
 1692 0756 60070000 		.4byte	0x760
 1693 075a 21       		.uleb128 0x21
 1694 075b 9E000000 		.4byte	0x9e
 1695 075f 00       		.byte	0
 1696 0760 22       		.uleb128 0x22
 1697 0761 00000000 		.4byte	.LASF72
 1698 0765 06       		.byte	0x6
 1699 0766 71       		.byte	0x71
 1700 0767 9E000000 		.4byte	0x9e
 1701 076b 00       		.byte	0
 1702              		.section	.debug_abbrev,"",%progbits
 1703              	.Ldebug_abbrev0:
 1704 0000 01       		.uleb128 0x1
 1705 0001 11       		.uleb128 0x11
 1706 0002 01       		.byte	0x1
 1707 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 44


 1708 0004 0E       		.uleb128 0xe
 1709 0005 13       		.uleb128 0x13
 1710 0006 0B       		.uleb128 0xb
 1711 0007 03       		.uleb128 0x3
 1712 0008 0E       		.uleb128 0xe
 1713 0009 1B       		.uleb128 0x1b
 1714 000a 0E       		.uleb128 0xe
 1715 000b 55       		.uleb128 0x55
 1716 000c 17       		.uleb128 0x17
 1717 000d 11       		.uleb128 0x11
 1718 000e 01       		.uleb128 0x1
 1719 000f 10       		.uleb128 0x10
 1720 0010 17       		.uleb128 0x17
 1721 0011 00       		.byte	0
 1722 0012 00       		.byte	0
 1723 0013 02       		.uleb128 0x2
 1724 0014 24       		.uleb128 0x24
 1725 0015 00       		.byte	0
 1726 0016 0B       		.uleb128 0xb
 1727 0017 0B       		.uleb128 0xb
 1728 0018 3E       		.uleb128 0x3e
 1729 0019 0B       		.uleb128 0xb
 1730 001a 03       		.uleb128 0x3
 1731 001b 0E       		.uleb128 0xe
 1732 001c 00       		.byte	0
 1733 001d 00       		.byte	0
 1734 001e 03       		.uleb128 0x3
 1735 001f 16       		.uleb128 0x16
 1736 0020 00       		.byte	0
 1737 0021 03       		.uleb128 0x3
 1738 0022 0E       		.uleb128 0xe
 1739 0023 3A       		.uleb128 0x3a
 1740 0024 0B       		.uleb128 0xb
 1741 0025 3B       		.uleb128 0x3b
 1742 0026 0B       		.uleb128 0xb
 1743 0027 49       		.uleb128 0x49
 1744 0028 13       		.uleb128 0x13
 1745 0029 00       		.byte	0
 1746 002a 00       		.byte	0
 1747 002b 04       		.uleb128 0x4
 1748 002c 24       		.uleb128 0x24
 1749 002d 00       		.byte	0
 1750 002e 0B       		.uleb128 0xb
 1751 002f 0B       		.uleb128 0xb
 1752 0030 3E       		.uleb128 0x3e
 1753 0031 0B       		.uleb128 0xb
 1754 0032 03       		.uleb128 0x3
 1755 0033 08       		.uleb128 0x8
 1756 0034 00       		.byte	0
 1757 0035 00       		.byte	0
 1758 0036 05       		.uleb128 0x5
 1759 0037 16       		.uleb128 0x16
 1760 0038 00       		.byte	0
 1761 0039 03       		.uleb128 0x3
 1762 003a 0E       		.uleb128 0xe
 1763 003b 3A       		.uleb128 0x3a
 1764 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 45


 1765 003d 3B       		.uleb128 0x3b
 1766 003e 05       		.uleb128 0x5
 1767 003f 49       		.uleb128 0x49
 1768 0040 13       		.uleb128 0x13
 1769 0041 00       		.byte	0
 1770 0042 00       		.byte	0
 1771 0043 06       		.uleb128 0x6
 1772 0044 0F       		.uleb128 0xf
 1773 0045 00       		.byte	0
 1774 0046 0B       		.uleb128 0xb
 1775 0047 0B       		.uleb128 0xb
 1776 0048 49       		.uleb128 0x49
 1777 0049 13       		.uleb128 0x13
 1778 004a 00       		.byte	0
 1779 004b 00       		.byte	0
 1780 004c 07       		.uleb128 0x7
 1781 004d 15       		.uleb128 0x15
 1782 004e 00       		.byte	0
 1783 004f 27       		.uleb128 0x27
 1784 0050 19       		.uleb128 0x19
 1785 0051 00       		.byte	0
 1786 0052 00       		.byte	0
 1787 0053 08       		.uleb128 0x8
 1788 0054 13       		.uleb128 0x13
 1789 0055 01       		.byte	0x1
 1790 0056 03       		.uleb128 0x3
 1791 0057 0E       		.uleb128 0xe
 1792 0058 0B       		.uleb128 0xb
 1793 0059 0B       		.uleb128 0xb
 1794 005a 3A       		.uleb128 0x3a
 1795 005b 0B       		.uleb128 0xb
 1796 005c 3B       		.uleb128 0x3b
 1797 005d 0B       		.uleb128 0xb
 1798 005e 01       		.uleb128 0x1
 1799 005f 13       		.uleb128 0x13
 1800 0060 00       		.byte	0
 1801 0061 00       		.byte	0
 1802 0062 09       		.uleb128 0x9
 1803 0063 0D       		.uleb128 0xd
 1804 0064 00       		.byte	0
 1805 0065 03       		.uleb128 0x3
 1806 0066 08       		.uleb128 0x8
 1807 0067 3A       		.uleb128 0x3a
 1808 0068 0B       		.uleb128 0xb
 1809 0069 3B       		.uleb128 0x3b
 1810 006a 0B       		.uleb128 0xb
 1811 006b 49       		.uleb128 0x49
 1812 006c 13       		.uleb128 0x13
 1813 006d 38       		.uleb128 0x38
 1814 006e 0B       		.uleb128 0xb
 1815 006f 00       		.byte	0
 1816 0070 00       		.byte	0
 1817 0071 0A       		.uleb128 0xa
 1818 0072 2E       		.uleb128 0x2e
 1819 0073 01       		.byte	0x1
 1820 0074 3F       		.uleb128 0x3f
 1821 0075 19       		.uleb128 0x19
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 46


 1822 0076 03       		.uleb128 0x3
 1823 0077 0E       		.uleb128 0xe
 1824 0078 3A       		.uleb128 0x3a
 1825 0079 0B       		.uleb128 0xb
 1826 007a 3B       		.uleb128 0x3b
 1827 007b 0B       		.uleb128 0xb
 1828 007c 49       		.uleb128 0x49
 1829 007d 13       		.uleb128 0x13
 1830 007e 11       		.uleb128 0x11
 1831 007f 01       		.uleb128 0x1
 1832 0080 12       		.uleb128 0x12
 1833 0081 06       		.uleb128 0x6
 1834 0082 40       		.uleb128 0x40
 1835 0083 18       		.uleb128 0x18
 1836 0084 9642     		.uleb128 0x2116
 1837 0086 19       		.uleb128 0x19
 1838 0087 01       		.uleb128 0x1
 1839 0088 13       		.uleb128 0x13
 1840 0089 00       		.byte	0
 1841 008a 00       		.byte	0
 1842 008b 0B       		.uleb128 0xb
 1843 008c 34       		.uleb128 0x34
 1844 008d 00       		.byte	0
 1845 008e 03       		.uleb128 0x3
 1846 008f 0E       		.uleb128 0xe
 1847 0090 3A       		.uleb128 0x3a
 1848 0091 0B       		.uleb128 0xb
 1849 0092 3B       		.uleb128 0x3b
 1850 0093 0B       		.uleb128 0xb
 1851 0094 49       		.uleb128 0x49
 1852 0095 13       		.uleb128 0x13
 1853 0096 02       		.uleb128 0x2
 1854 0097 17       		.uleb128 0x17
 1855 0098 00       		.byte	0
 1856 0099 00       		.byte	0
 1857 009a 0C       		.uleb128 0xc
 1858 009b 34       		.uleb128 0x34
 1859 009c 00       		.byte	0
 1860 009d 03       		.uleb128 0x3
 1861 009e 0E       		.uleb128 0xe
 1862 009f 3A       		.uleb128 0x3a
 1863 00a0 0B       		.uleb128 0xb
 1864 00a1 3B       		.uleb128 0x3b
 1865 00a2 0B       		.uleb128 0xb
 1866 00a3 49       		.uleb128 0x49
 1867 00a4 13       		.uleb128 0x13
 1868 00a5 1C       		.uleb128 0x1c
 1869 00a6 0B       		.uleb128 0xb
 1870 00a7 00       		.byte	0
 1871 00a8 00       		.byte	0
 1872 00a9 0D       		.uleb128 0xd
 1873 00aa 34       		.uleb128 0x34
 1874 00ab 00       		.byte	0
 1875 00ac 03       		.uleb128 0x3
 1876 00ad 0E       		.uleb128 0xe
 1877 00ae 3A       		.uleb128 0x3a
 1878 00af 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 47


 1879 00b0 3B       		.uleb128 0x3b
 1880 00b1 0B       		.uleb128 0xb
 1881 00b2 49       		.uleb128 0x49
 1882 00b3 13       		.uleb128 0x13
 1883 00b4 1C       		.uleb128 0x1c
 1884 00b5 05       		.uleb128 0x5
 1885 00b6 00       		.byte	0
 1886 00b7 00       		.byte	0
 1887 00b8 0E       		.uleb128 0xe
 1888 00b9 34       		.uleb128 0x34
 1889 00ba 00       		.byte	0
 1890 00bb 03       		.uleb128 0x3
 1891 00bc 0E       		.uleb128 0xe
 1892 00bd 3A       		.uleb128 0x3a
 1893 00be 0B       		.uleb128 0xb
 1894 00bf 3B       		.uleb128 0x3b
 1895 00c0 0B       		.uleb128 0xb
 1896 00c1 49       		.uleb128 0x49
 1897 00c2 13       		.uleb128 0x13
 1898 00c3 02       		.uleb128 0x2
 1899 00c4 18       		.uleb128 0x18
 1900 00c5 00       		.byte	0
 1901 00c6 00       		.byte	0
 1902 00c7 0F       		.uleb128 0xf
 1903 00c8 34       		.uleb128 0x34
 1904 00c9 00       		.byte	0
 1905 00ca 03       		.uleb128 0x3
 1906 00cb 08       		.uleb128 0x8
 1907 00cc 3A       		.uleb128 0x3a
 1908 00cd 0B       		.uleb128 0xb
 1909 00ce 3B       		.uleb128 0x3b
 1910 00cf 0B       		.uleb128 0xb
 1911 00d0 49       		.uleb128 0x49
 1912 00d1 13       		.uleb128 0x13
 1913 00d2 02       		.uleb128 0x2
 1914 00d3 17       		.uleb128 0x17
 1915 00d4 00       		.byte	0
 1916 00d5 00       		.byte	0
 1917 00d6 10       		.uleb128 0x10
 1918 00d7 34       		.uleb128 0x34
 1919 00d8 00       		.byte	0
 1920 00d9 03       		.uleb128 0x3
 1921 00da 08       		.uleb128 0x8
 1922 00db 3A       		.uleb128 0x3a
 1923 00dc 0B       		.uleb128 0xb
 1924 00dd 3B       		.uleb128 0x3b
 1925 00de 0B       		.uleb128 0xb
 1926 00df 49       		.uleb128 0x49
 1927 00e0 13       		.uleb128 0x13
 1928 00e1 02       		.uleb128 0x2
 1929 00e2 18       		.uleb128 0x18
 1930 00e3 00       		.byte	0
 1931 00e4 00       		.byte	0
 1932 00e5 11       		.uleb128 0x11
 1933 00e6 898201   		.uleb128 0x4109
 1934 00e9 00       		.byte	0
 1935 00ea 11       		.uleb128 0x11
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 48


 1936 00eb 01       		.uleb128 0x1
 1937 00ec 31       		.uleb128 0x31
 1938 00ed 13       		.uleb128 0x13
 1939 00ee 00       		.byte	0
 1940 00ef 00       		.byte	0
 1941 00f0 12       		.uleb128 0x12
 1942 00f1 898201   		.uleb128 0x4109
 1943 00f4 01       		.byte	0x1
 1944 00f5 11       		.uleb128 0x11
 1945 00f6 01       		.uleb128 0x1
 1946 00f7 31       		.uleb128 0x31
 1947 00f8 13       		.uleb128 0x13
 1948 00f9 01       		.uleb128 0x1
 1949 00fa 13       		.uleb128 0x13
 1950 00fb 00       		.byte	0
 1951 00fc 00       		.byte	0
 1952 00fd 13       		.uleb128 0x13
 1953 00fe 8A8201   		.uleb128 0x410a
 1954 0101 00       		.byte	0
 1955 0102 02       		.uleb128 0x2
 1956 0103 18       		.uleb128 0x18
 1957 0104 9142     		.uleb128 0x2111
 1958 0106 18       		.uleb128 0x18
 1959 0107 00       		.byte	0
 1960 0108 00       		.byte	0
 1961 0109 14       		.uleb128 0x14
 1962 010a 898201   		.uleb128 0x4109
 1963 010d 01       		.byte	0x1
 1964 010e 11       		.uleb128 0x11
 1965 010f 01       		.uleb128 0x1
 1966 0110 31       		.uleb128 0x31
 1967 0111 13       		.uleb128 0x13
 1968 0112 00       		.byte	0
 1969 0113 00       		.byte	0
 1970 0114 15       		.uleb128 0x15
 1971 0115 01       		.uleb128 0x1
 1972 0116 01       		.byte	0x1
 1973 0117 49       		.uleb128 0x49
 1974 0118 13       		.uleb128 0x13
 1975 0119 01       		.uleb128 0x1
 1976 011a 13       		.uleb128 0x13
 1977 011b 00       		.byte	0
 1978 011c 00       		.byte	0
 1979 011d 16       		.uleb128 0x16
 1980 011e 21       		.uleb128 0x21
 1981 011f 00       		.byte	0
 1982 0120 49       		.uleb128 0x49
 1983 0121 13       		.uleb128 0x13
 1984 0122 2F       		.uleb128 0x2f
 1985 0123 0B       		.uleb128 0xb
 1986 0124 00       		.byte	0
 1987 0125 00       		.byte	0
 1988 0126 17       		.uleb128 0x17
 1989 0127 2E       		.uleb128 0x2e
 1990 0128 01       		.byte	0x1
 1991 0129 3F       		.uleb128 0x3f
 1992 012a 19       		.uleb128 0x19
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 49


 1993 012b 03       		.uleb128 0x3
 1994 012c 0E       		.uleb128 0xe
 1995 012d 3A       		.uleb128 0x3a
 1996 012e 0B       		.uleb128 0xb
 1997 012f 3B       		.uleb128 0x3b
 1998 0130 05       		.uleb128 0x5
 1999 0131 27       		.uleb128 0x27
 2000 0132 19       		.uleb128 0x19
 2001 0133 49       		.uleb128 0x49
 2002 0134 13       		.uleb128 0x13
 2003 0135 11       		.uleb128 0x11
 2004 0136 01       		.uleb128 0x1
 2005 0137 12       		.uleb128 0x12
 2006 0138 06       		.uleb128 0x6
 2007 0139 40       		.uleb128 0x40
 2008 013a 18       		.uleb128 0x18
 2009 013b 9742     		.uleb128 0x2117
 2010 013d 19       		.uleb128 0x19
 2011 013e 01       		.uleb128 0x1
 2012 013f 13       		.uleb128 0x13
 2013 0140 00       		.byte	0
 2014 0141 00       		.byte	0
 2015 0142 18       		.uleb128 0x18
 2016 0143 05       		.uleb128 0x5
 2017 0144 00       		.byte	0
 2018 0145 03       		.uleb128 0x3
 2019 0146 0E       		.uleb128 0xe
 2020 0147 3A       		.uleb128 0x3a
 2021 0148 0B       		.uleb128 0xb
 2022 0149 3B       		.uleb128 0x3b
 2023 014a 05       		.uleb128 0x5
 2024 014b 49       		.uleb128 0x49
 2025 014c 13       		.uleb128 0x13
 2026 014d 02       		.uleb128 0x2
 2027 014e 17       		.uleb128 0x17
 2028 014f 00       		.byte	0
 2029 0150 00       		.byte	0
 2030 0151 19       		.uleb128 0x19
 2031 0152 05       		.uleb128 0x5
 2032 0153 00       		.byte	0
 2033 0154 03       		.uleb128 0x3
 2034 0155 08       		.uleb128 0x8
 2035 0156 3A       		.uleb128 0x3a
 2036 0157 0B       		.uleb128 0xb
 2037 0158 3B       		.uleb128 0x3b
 2038 0159 05       		.uleb128 0x5
 2039 015a 49       		.uleb128 0x49
 2040 015b 13       		.uleb128 0x13
 2041 015c 02       		.uleb128 0x2
 2042 015d 17       		.uleb128 0x17
 2043 015e 00       		.byte	0
 2044 015f 00       		.byte	0
 2045 0160 1A       		.uleb128 0x1a
 2046 0161 34       		.uleb128 0x34
 2047 0162 00       		.byte	0
 2048 0163 03       		.uleb128 0x3
 2049 0164 08       		.uleb128 0x8
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 50


 2050 0165 3A       		.uleb128 0x3a
 2051 0166 0B       		.uleb128 0xb
 2052 0167 3B       		.uleb128 0x3b
 2053 0168 05       		.uleb128 0x5
 2054 0169 49       		.uleb128 0x49
 2055 016a 13       		.uleb128 0x13
 2056 016b 02       		.uleb128 0x2
 2057 016c 17       		.uleb128 0x17
 2058 016d 00       		.byte	0
 2059 016e 00       		.byte	0
 2060 016f 1B       		.uleb128 0x1b
 2061 0170 34       		.uleb128 0x34
 2062 0171 00       		.byte	0
 2063 0172 03       		.uleb128 0x3
 2064 0173 0E       		.uleb128 0xe
 2065 0174 3A       		.uleb128 0x3a
 2066 0175 0B       		.uleb128 0xb
 2067 0176 3B       		.uleb128 0x3b
 2068 0177 05       		.uleb128 0x5
 2069 0178 49       		.uleb128 0x49
 2070 0179 13       		.uleb128 0x13
 2071 017a 3F       		.uleb128 0x3f
 2072 017b 19       		.uleb128 0x19
 2073 017c 3C       		.uleb128 0x3c
 2074 017d 19       		.uleb128 0x19
 2075 017e 00       		.byte	0
 2076 017f 00       		.byte	0
 2077 0180 1C       		.uleb128 0x1c
 2078 0181 35       		.uleb128 0x35
 2079 0182 00       		.byte	0
 2080 0183 49       		.uleb128 0x49
 2081 0184 13       		.uleb128 0x13
 2082 0185 00       		.byte	0
 2083 0186 00       		.byte	0
 2084 0187 1D       		.uleb128 0x1d
 2085 0188 2E       		.uleb128 0x2e
 2086 0189 00       		.byte	0
 2087 018a 3F       		.uleb128 0x3f
 2088 018b 19       		.uleb128 0x19
 2089 018c 03       		.uleb128 0x3
 2090 018d 0E       		.uleb128 0xe
 2091 018e 3A       		.uleb128 0x3a
 2092 018f 0B       		.uleb128 0xb
 2093 0190 3B       		.uleb128 0x3b
 2094 0191 0B       		.uleb128 0xb
 2095 0192 27       		.uleb128 0x27
 2096 0193 19       		.uleb128 0x19
 2097 0194 3C       		.uleb128 0x3c
 2098 0195 19       		.uleb128 0x19
 2099 0196 00       		.byte	0
 2100 0197 00       		.byte	0
 2101 0198 1E       		.uleb128 0x1e
 2102 0199 2E       		.uleb128 0x2e
 2103 019a 01       		.byte	0x1
 2104 019b 3F       		.uleb128 0x3f
 2105 019c 19       		.uleb128 0x19
 2106 019d 03       		.uleb128 0x3
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 51


 2107 019e 0E       		.uleb128 0xe
 2108 019f 3A       		.uleb128 0x3a
 2109 01a0 0B       		.uleb128 0xb
 2110 01a1 3B       		.uleb128 0x3b
 2111 01a2 0B       		.uleb128 0xb
 2112 01a3 3C       		.uleb128 0x3c
 2113 01a4 19       		.uleb128 0x19
 2114 01a5 01       		.uleb128 0x1
 2115 01a6 13       		.uleb128 0x13
 2116 01a7 00       		.byte	0
 2117 01a8 00       		.byte	0
 2118 01a9 1F       		.uleb128 0x1f
 2119 01aa 18       		.uleb128 0x18
 2120 01ab 00       		.byte	0
 2121 01ac 00       		.byte	0
 2122 01ad 00       		.byte	0
 2123 01ae 20       		.uleb128 0x20
 2124 01af 2E       		.uleb128 0x2e
 2125 01b0 01       		.byte	0x1
 2126 01b1 3F       		.uleb128 0x3f
 2127 01b2 19       		.uleb128 0x19
 2128 01b3 03       		.uleb128 0x3
 2129 01b4 0E       		.uleb128 0xe
 2130 01b5 3A       		.uleb128 0x3a
 2131 01b6 0B       		.uleb128 0xb
 2132 01b7 3B       		.uleb128 0x3b
 2133 01b8 0B       		.uleb128 0xb
 2134 01b9 27       		.uleb128 0x27
 2135 01ba 19       		.uleb128 0x19
 2136 01bb 3C       		.uleb128 0x3c
 2137 01bc 19       		.uleb128 0x19
 2138 01bd 01       		.uleb128 0x1
 2139 01be 13       		.uleb128 0x13
 2140 01bf 00       		.byte	0
 2141 01c0 00       		.byte	0
 2142 01c1 21       		.uleb128 0x21
 2143 01c2 05       		.uleb128 0x5
 2144 01c3 00       		.byte	0
 2145 01c4 49       		.uleb128 0x49
 2146 01c5 13       		.uleb128 0x13
 2147 01c6 00       		.byte	0
 2148 01c7 00       		.byte	0
 2149 01c8 22       		.uleb128 0x22
 2150 01c9 2E       		.uleb128 0x2e
 2151 01ca 00       		.byte	0
 2152 01cb 3F       		.uleb128 0x3f
 2153 01cc 19       		.uleb128 0x19
 2154 01cd 03       		.uleb128 0x3
 2155 01ce 0E       		.uleb128 0xe
 2156 01cf 3A       		.uleb128 0x3a
 2157 01d0 0B       		.uleb128 0xb
 2158 01d1 3B       		.uleb128 0x3b
 2159 01d2 0B       		.uleb128 0xb
 2160 01d3 27       		.uleb128 0x27
 2161 01d4 19       		.uleb128 0x19
 2162 01d5 49       		.uleb128 0x49
 2163 01d6 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 52


 2164 01d7 3C       		.uleb128 0x3c
 2165 01d8 19       		.uleb128 0x19
 2166 01d9 00       		.byte	0
 2167 01da 00       		.byte	0
 2168 01db 23       		.uleb128 0x23
 2169 01dc 2E       		.uleb128 0x2e
 2170 01dd 01       		.byte	0x1
 2171 01de 3F       		.uleb128 0x3f
 2172 01df 19       		.uleb128 0x19
 2173 01e0 03       		.uleb128 0x3
 2174 01e1 0E       		.uleb128 0xe
 2175 01e2 3A       		.uleb128 0x3a
 2176 01e3 0B       		.uleb128 0xb
 2177 01e4 3B       		.uleb128 0x3b
 2178 01e5 05       		.uleb128 0x5
 2179 01e6 27       		.uleb128 0x27
 2180 01e7 19       		.uleb128 0x19
 2181 01e8 49       		.uleb128 0x49
 2182 01e9 13       		.uleb128 0x13
 2183 01ea 3C       		.uleb128 0x3c
 2184 01eb 19       		.uleb128 0x19
 2185 01ec 01       		.uleb128 0x1
 2186 01ed 13       		.uleb128 0x13
 2187 01ee 00       		.byte	0
 2188 01ef 00       		.byte	0
 2189 01f0 00       		.byte	0
 2190              		.section	.debug_loc,"",%progbits
 2191              	.Ldebug_loc0:
 2192              	.LLST0:
 2193 0000 06000000 		.4byte	.LVL0
 2194 0004 82000000 		.4byte	.LVL19
 2195 0008 0200     		.2byte	0x2
 2196 000a 30       		.byte	0x30
 2197 000b 9F       		.byte	0x9f
 2198 000c 82000000 		.4byte	.LVL19
 2199 0010 F0000000 		.4byte	.LVL36
 2200 0014 0100     		.2byte	0x1
 2201 0016 58       		.byte	0x58
 2202 0017 F0000000 		.4byte	.LVL36
 2203 001b FA020000 		.4byte	.LVL114
 2204 001f 0300     		.2byte	0x3
 2205 0021 91       		.byte	0x91
 2206 0022 B47F     		.sleb128 -76
 2207 0024 42030000 		.4byte	.LVL120
 2208 0028 4C030000 		.4byte	.LVL121
 2209 002c 0100     		.2byte	0x1
 2210 002e 58       		.byte	0x58
 2211 002f 4C030000 		.4byte	.LVL121
 2212 0033 50030000 		.4byte	.LVL122
 2213 0037 0200     		.2byte	0x2
 2214 0039 30       		.byte	0x30
 2215 003a 9F       		.byte	0x9f
 2216 003b 50030000 		.4byte	.LVL122
 2217 003f 64030000 		.4byte	.LFE63
 2218 0043 0100     		.2byte	0x1
 2219 0045 58       		.byte	0x58
 2220 0046 00000000 		.4byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 53


 2221 004a 00000000 		.4byte	0
 2222              	.LLST1:
 2223 004e 06000000 		.4byte	.LVL0
 2224 0052 54000000 		.4byte	.LVL12
 2225 0056 0200     		.2byte	0x2
 2226 0058 30       		.byte	0x30
 2227 0059 9F       		.byte	0x9f
 2228 005a 54000000 		.4byte	.LVL12
 2229 005e 5A000000 		.4byte	.LVL14
 2230 0062 0100     		.2byte	0x1
 2231 0064 54       		.byte	0x54
 2232 0065 5A000000 		.4byte	.LVL14
 2233 0069 62000000 		.4byte	.LVL17
 2234 006d 0200     		.2byte	0x2
 2235 006f 31       		.byte	0x31
 2236 0070 9F       		.byte	0x9f
 2237 0071 62000000 		.4byte	.LVL17
 2238 0075 82000000 		.4byte	.LVL19
 2239 0079 0100     		.2byte	0x1
 2240 007b 54       		.byte	0x54
 2241 007c 00000000 		.4byte	0
 2242 0080 00000000 		.4byte	0
 2243              	.LLST2:
 2244 0084 06000000 		.4byte	.LVL0
 2245 0088 82000000 		.4byte	.LVL19
 2246 008c 0200     		.2byte	0x2
 2247 008e 30       		.byte	0x30
 2248 008f 9F       		.byte	0x9f
 2249 0090 82000000 		.4byte	.LVL19
 2250 0094 96000000 		.4byte	.LVL22
 2251 0098 0100     		.2byte	0x1
 2252 009a 5B       		.byte	0x5b
 2253 009b 96000000 		.4byte	.LVL22
 2254 009f BA000000 		.4byte	.LVL28
 2255 00a3 0200     		.2byte	0x2
 2256 00a5 31       		.byte	0x31
 2257 00a6 9F       		.byte	0x9f
 2258 00a7 BA000000 		.4byte	.LVL28
 2259 00ab C2000000 		.4byte	.LVL29
 2260 00af 0100     		.2byte	0x1
 2261 00b1 5B       		.byte	0x5b
 2262 00b2 C2000000 		.4byte	.LVL29
 2263 00b6 E4000000 		.4byte	.LVL35
 2264 00ba 0200     		.2byte	0x2
 2265 00bc 32       		.byte	0x32
 2266 00bd 9F       		.byte	0x9f
 2267 00be E4000000 		.4byte	.LVL35
 2268 00c2 EE020000 		.4byte	.LVL112
 2269 00c6 0100     		.2byte	0x1
 2270 00c8 5B       		.byte	0x5b
 2271 00c9 EE020000 		.4byte	.LVL112
 2272 00cd FA020000 		.4byte	.LVL114
 2273 00d1 0200     		.2byte	0x2
 2274 00d3 30       		.byte	0x30
 2275 00d4 9F       		.byte	0x9f
 2276 00d5 FA020000 		.4byte	.LVL114
 2277 00d9 64030000 		.4byte	.LFE63
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 54


 2278 00dd 0100     		.2byte	0x1
 2279 00df 5B       		.byte	0x5b
 2280 00e0 00000000 		.4byte	0
 2281 00e4 00000000 		.4byte	0
 2282              	.LLST3:
 2283 00e8 06000000 		.4byte	.LVL0
 2284 00ec 82000000 		.4byte	.LVL19
 2285 00f0 0200     		.2byte	0x2
 2286 00f2 30       		.byte	0x30
 2287 00f3 9F       		.byte	0x9f
 2288 00f4 82000000 		.4byte	.LVL19
 2289 00f8 64030000 		.4byte	.LFE63
 2290 00fc 0100     		.2byte	0x1
 2291 00fe 59       		.byte	0x59
 2292 00ff 00000000 		.4byte	0
 2293 0103 00000000 		.4byte	0
 2294              	.LLST4:
 2295 0107 06000000 		.4byte	.LVL0
 2296 010b 82000000 		.4byte	.LVL19
 2297 010f 0200     		.2byte	0x2
 2298 0111 30       		.byte	0x30
 2299 0112 9F       		.byte	0x9f
 2300 0113 82000000 		.4byte	.LVL19
 2301 0117 78020000 		.4byte	.LVL105
 2302 011b 0100     		.2byte	0x1
 2303 011d 5A       		.byte	0x5a
 2304 011e 78020000 		.4byte	.LVL105
 2305 0122 7C020000 		.4byte	.LVL106
 2306 0126 0200     		.2byte	0x2
 2307 0128 30       		.byte	0x30
 2308 0129 9F       		.byte	0x9f
 2309 012a 7C020000 		.4byte	.LVL106
 2310 012e 20030000 		.4byte	.LVL116
 2311 0132 0100     		.2byte	0x1
 2312 0134 5A       		.byte	0x5a
 2313 0135 20030000 		.4byte	.LVL116
 2314 0139 24030000 		.4byte	.LVL117
 2315 013d 0200     		.2byte	0x2
 2316 013f 30       		.byte	0x30
 2317 0140 9F       		.byte	0x9f
 2318 0141 24030000 		.4byte	.LVL117
 2319 0145 64030000 		.4byte	.LFE63
 2320 0149 0100     		.2byte	0x1
 2321 014b 5A       		.byte	0x5a
 2322 014c 00000000 		.4byte	0
 2323 0150 00000000 		.4byte	0
 2324              	.LLST5:
 2325 0154 06000000 		.4byte	.LVL0
 2326 0158 82000000 		.4byte	.LVL19
 2327 015c 0200     		.2byte	0x2
 2328 015e 30       		.byte	0x30
 2329 015f 9F       		.byte	0x9f
 2330 0160 82000000 		.4byte	.LVL19
 2331 0164 87000000 		.4byte	.LVL20-1
 2332 0168 0100     		.2byte	0x1
 2333 016a 53       		.byte	0x53
 2334 016b 87000000 		.4byte	.LVL20-1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 55


 2335 016f 92020000 		.4byte	.LVL107
 2336 0173 0300     		.2byte	0x3
 2337 0175 91       		.byte	0x91
 2338 0176 B07F     		.sleb128 -80
 2339 0178 92020000 		.4byte	.LVL107
 2340 017c 96020000 		.4byte	.LVL108
 2341 0180 0200     		.2byte	0x2
 2342 0182 31       		.byte	0x31
 2343 0183 9F       		.byte	0x9f
 2344 0184 96020000 		.4byte	.LVL108
 2345 0188 3A030000 		.4byte	.LVL118
 2346 018c 0300     		.2byte	0x3
 2347 018e 91       		.byte	0x91
 2348 018f B07F     		.sleb128 -80
 2349 0191 3A030000 		.4byte	.LVL118
 2350 0195 3E030000 		.4byte	.LVL119
 2351 0199 0200     		.2byte	0x2
 2352 019b 31       		.byte	0x31
 2353 019c 9F       		.byte	0x9f
 2354 019d 3E030000 		.4byte	.LVL119
 2355 01a1 64030000 		.4byte	.LFE63
 2356 01a5 0300     		.2byte	0x3
 2357 01a7 91       		.byte	0x91
 2358 01a8 B07F     		.sleb128 -80
 2359 01aa 00000000 		.4byte	0
 2360 01ae 00000000 		.4byte	0
 2361              	.LLST6:
 2362 01b2 06000000 		.4byte	.LVL0
 2363 01b6 F0000000 		.4byte	.LVL36
 2364 01ba 0200     		.2byte	0x2
 2365 01bc 30       		.byte	0x30
 2366 01bd 9F       		.byte	0x9f
 2367 01be EA010000 		.4byte	.LVL84
 2368 01c2 EC010000 		.4byte	.LVL85
 2369 01c6 0100     		.2byte	0x1
 2370 01c8 50       		.byte	0x50
 2371 01c9 EC010000 		.4byte	.LVL85
 2372 01cd 14020000 		.4byte	.LVL92
 2373 01d1 0100     		.2byte	0x1
 2374 01d3 58       		.byte	0x58
 2375 01d4 14020000 		.4byte	.LVL92
 2376 01d8 16020000 		.4byte	.LVL93
 2377 01dc 0100     		.2byte	0x1
 2378 01de 50       		.byte	0x50
 2379 01df 16020000 		.4byte	.LVL93
 2380 01e3 44020000 		.4byte	.LVL101
 2381 01e7 0100     		.2byte	0x1
 2382 01e9 55       		.byte	0x55
 2383 01ea 44020000 		.4byte	.LVL101
 2384 01ee 51020000 		.4byte	.LVL103-1
 2385 01f2 0100     		.2byte	0x1
 2386 01f4 50       		.byte	0x50
 2387 01f5 EE020000 		.4byte	.LVL112
 2388 01f9 64030000 		.4byte	.LFE63
 2389 01fd 0200     		.2byte	0x2
 2390 01ff 30       		.byte	0x30
 2391 0200 9F       		.byte	0x9f
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 56


 2392 0201 00000000 		.4byte	0
 2393 0205 00000000 		.4byte	0
 2394              	.LLST7:
 2395 0209 06000000 		.4byte	.LVL0
 2396 020d 82000000 		.4byte	.LVL19
 2397 0211 0200     		.2byte	0x2
 2398 0213 30       		.byte	0x30
 2399 0214 9F       		.byte	0x9f
 2400 0215 82000000 		.4byte	.LVL19
 2401 0219 98000000 		.4byte	.LVL23
 2402 021d 0100     		.2byte	0x1
 2403 021f 57       		.byte	0x57
 2404 0220 98000000 		.4byte	.LVL23
 2405 0224 9F000000 		.4byte	.LVL24-1
 2406 0228 0100     		.2byte	0x1
 2407 022a 53       		.byte	0x53
 2408 022b 9F000000 		.4byte	.LVL24-1
 2409 022f C4000000 		.4byte	.LVL30
 2410 0233 0100     		.2byte	0x1
 2411 0235 57       		.byte	0x57
 2412 0236 C4000000 		.4byte	.LVL30
 2413 023a CB000000 		.4byte	.LVL31-1
 2414 023e 0100     		.2byte	0x1
 2415 0240 53       		.byte	0x53
 2416 0241 CB000000 		.4byte	.LVL31-1
 2417 0245 64030000 		.4byte	.LFE63
 2418 0249 0100     		.2byte	0x1
 2419 024b 57       		.byte	0x57
 2420 024c 00000000 		.4byte	0
 2421 0250 00000000 		.4byte	0
 2422              	.LLST8:
 2423 0254 06000000 		.4byte	.LVL0
 2424 0258 82000000 		.4byte	.LVL19
 2425 025c 0200     		.2byte	0x2
 2426 025e 30       		.byte	0x30
 2427 025f 9F       		.byte	0x9f
 2428 0260 82000000 		.4byte	.LVL19
 2429 0264 A8000000 		.4byte	.LVL27
 2430 0268 0300     		.2byte	0x3
 2431 026a 91       		.byte	0x91
 2432 026b A87F     		.sleb128 -88
 2433 026d A8000000 		.4byte	.LVL27
 2434 0271 BA000000 		.4byte	.LVL28
 2435 0275 0400     		.2byte	0x4
 2436 0277 0A       		.byte	0xa
 2437 0278 BC34     		.2byte	0x34bc
 2438 027a 9F       		.byte	0x9f
 2439 027b BA000000 		.4byte	.LVL28
 2440 027f D4000000 		.4byte	.LVL34
 2441 0283 0300     		.2byte	0x3
 2442 0285 91       		.byte	0x91
 2443 0286 A87F     		.sleb128 -88
 2444 0288 D4000000 		.4byte	.LVL34
 2445 028c E4000000 		.4byte	.LVL35
 2446 0290 0400     		.2byte	0x4
 2447 0292 0A       		.byte	0xa
 2448 0293 9E46     		.2byte	0x469e
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 57


 2449 0295 9F       		.byte	0x9f
 2450 0296 E4000000 		.4byte	.LVL35
 2451 029a 64030000 		.4byte	.LFE63
 2452 029e 0300     		.2byte	0x3
 2453 02a0 91       		.byte	0x91
 2454 02a1 A87F     		.sleb128 -88
 2455 02a3 00000000 		.4byte	0
 2456 02a7 00000000 		.4byte	0
 2457              	.LLST9:
 2458 02ab 06000000 		.4byte	.LVL0
 2459 02af 82000000 		.4byte	.LVL19
 2460 02b3 0200     		.2byte	0x2
 2461 02b5 30       		.byte	0x30
 2462 02b6 9F       		.byte	0x9f
 2463 02b7 82000000 		.4byte	.LVL19
 2464 02bb A8000000 		.4byte	.LVL27
 2465 02bf 0300     		.2byte	0x3
 2466 02c1 91       		.byte	0x91
 2467 02c2 AC7F     		.sleb128 -84
 2468 02c4 A8000000 		.4byte	.LVL27
 2469 02c8 BA000000 		.4byte	.LVL28
 2470 02cc 0400     		.2byte	0x4
 2471 02ce 0A       		.byte	0xa
 2472 02cf 5046     		.2byte	0x4650
 2473 02d1 9F       		.byte	0x9f
 2474 02d2 BA000000 		.4byte	.LVL28
 2475 02d6 D4000000 		.4byte	.LVL34
 2476 02da 0300     		.2byte	0x3
 2477 02dc 91       		.byte	0x91
 2478 02dd AC7F     		.sleb128 -84
 2479 02df D4000000 		.4byte	.LVL34
 2480 02e3 E4000000 		.4byte	.LVL35
 2481 02e7 0400     		.2byte	0x4
 2482 02e9 0A       		.byte	0xa
 2483 02ea 4858     		.2byte	0x5848
 2484 02ec 9F       		.byte	0x9f
 2485 02ed E4000000 		.4byte	.LVL35
 2486 02f1 64030000 		.4byte	.LFE63
 2487 02f5 0300     		.2byte	0x3
 2488 02f7 91       		.byte	0x91
 2489 02f8 AC7F     		.sleb128 -84
 2490 02fa 00000000 		.4byte	0
 2491 02fe 00000000 		.4byte	0
 2492              	.LLST10:
 2493 0302 06000000 		.4byte	.LVL0
 2494 0306 82000000 		.4byte	.LVL19
 2495 030a 0600     		.2byte	0x6
 2496 030c 9E       		.byte	0x9e
 2497 030d 04       		.uleb128 0x4
 2498 030e 007EBB46 		.4byte	0x46bb7e00
 2499 0312 82000000 		.4byte	.LVL19
 2500 0316 A2000000 		.4byte	.LVL25
 2501 031a 0100     		.2byte	0x1
 2502 031c 55       		.byte	0x55
 2503 031d A2000000 		.4byte	.LVL25
 2504 0321 A4000000 		.4byte	.LVL26
 2505 0325 0100     		.2byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 58


 2506 0327 50       		.byte	0x50
 2507 0328 A4000000 		.4byte	.LVL26
 2508 032c CE000000 		.4byte	.LVL32
 2509 0330 0100     		.2byte	0x1
 2510 0332 55       		.byte	0x55
 2511 0333 CE000000 		.4byte	.LVL32
 2512 0337 D0000000 		.4byte	.LVL33
 2513 033b 0100     		.2byte	0x1
 2514 033d 50       		.byte	0x50
 2515 033e D0000000 		.4byte	.LVL33
 2516 0342 F0000000 		.4byte	.LVL36
 2517 0346 0100     		.2byte	0x1
 2518 0348 55       		.byte	0x55
 2519 0349 F0000000 		.4byte	.LVL36
 2520 034d F2000000 		.4byte	.LVL37
 2521 0351 0300     		.2byte	0x3
 2522 0353 91       		.byte	0x91
 2523 0354 A47F     		.sleb128 -92
 2524 0356 F2000000 		.4byte	.LVL37
 2525 035a 30010000 		.4byte	.LVL49
 2526 035e 0100     		.2byte	0x1
 2527 0360 55       		.byte	0x55
 2528 0361 52020000 		.4byte	.LVL103
 2529 0365 FA020000 		.4byte	.LVL114
 2530 0369 0300     		.2byte	0x3
 2531 036b 91       		.byte	0x91
 2532 036c A47F     		.sleb128 -92
 2533 036e FA020000 		.4byte	.LVL114
 2534 0372 64030000 		.4byte	.LFE63
 2535 0376 0100     		.2byte	0x1
 2536 0378 55       		.byte	0x55
 2537 0379 00000000 		.4byte	0
 2538 037d 00000000 		.4byte	0
 2539              	.LLST11:
 2540 0381 06000000 		.4byte	.LVL0
 2541 0385 82000000 		.4byte	.LVL19
 2542 0389 0600     		.2byte	0x6
 2543 038b 9E       		.byte	0x9e
 2544 038c 04       		.uleb128 0x4
 2545 038d 007EBB46 		.4byte	0x46bb7e00
 2546 0391 F0000000 		.4byte	.LVL36
 2547 0395 F2000000 		.4byte	.LVL37
 2548 0399 0300     		.2byte	0x3
 2549 039b 91       		.byte	0x91
 2550 039c A47F     		.sleb128 -92
 2551 039e 12010000 		.4byte	.LVL42
 2552 03a2 14010000 		.4byte	.LVL43
 2553 03a6 0100     		.2byte	0x1
 2554 03a8 50       		.byte	0x50
 2555 03a9 22010000 		.4byte	.LVL46
 2556 03ad FA020000 		.4byte	.LVL114
 2557 03b1 0300     		.2byte	0x3
 2558 03b3 91       		.byte	0x91
 2559 03b4 A47F     		.sleb128 -92
 2560 03b6 00000000 		.4byte	0
 2561 03ba 00000000 		.4byte	0
 2562              	.LLST12:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 59


 2563 03be 06000000 		.4byte	.LVL0
 2564 03c2 82000000 		.4byte	.LVL19
 2565 03c6 0600     		.2byte	0x6
 2566 03c8 9E       		.byte	0x9e
 2567 03c9 04       		.uleb128 0x4
 2568 03ca 00000000 		.4byte	0
 2569 03ce F0000000 		.4byte	.LVL36
 2570 03d2 F2000000 		.4byte	.LVL37
 2571 03d6 0100     		.2byte	0x1
 2572 03d8 54       		.byte	0x54
 2573 03d9 2C010000 		.4byte	.LVL48
 2574 03dd 39010000 		.4byte	.LVL50-1
 2575 03e1 0100     		.2byte	0x1
 2576 03e3 50       		.byte	0x50
 2577 03e4 39010000 		.4byte	.LVL50-1
 2578 03e8 FA020000 		.4byte	.LVL114
 2579 03ec 0100     		.2byte	0x1
 2580 03ee 54       		.byte	0x54
 2581 03ef 00000000 		.4byte	0
 2582 03f3 00000000 		.4byte	0
 2583              	.LLST13:
 2584 03f7 0C000000 		.4byte	.LVL1
 2585 03fb 82000000 		.4byte	.LVL19
 2586 03ff 0600     		.2byte	0x6
 2587 0401 9E       		.byte	0x9e
 2588 0402 04       		.uleb128 0x4
 2589 0403 00000000 		.4byte	0
 2590 0407 4A010000 		.4byte	.LVL53
 2591 040b 4C010000 		.4byte	.LVL54
 2592 040f 0100     		.2byte	0x1
 2593 0411 50       		.byte	0x50
 2594 0412 4C010000 		.4byte	.LVL54
 2595 0416 AC010000 		.4byte	.LVL70
 2596 041a 0100     		.2byte	0x1
 2597 041c 58       		.byte	0x58
 2598 041d AE010000 		.4byte	.LVL71
 2599 0421 B2010000 		.4byte	.LVL72
 2600 0425 0100     		.2byte	0x1
 2601 0427 58       		.byte	0x58
 2602 0428 B4010000 		.4byte	.LVL73
 2603 042c B8010000 		.4byte	.LVL74
 2604 0430 0100     		.2byte	0x1
 2605 0432 58       		.byte	0x58
 2606 0433 00000000 		.4byte	0
 2607 0437 00000000 		.4byte	0
 2608              	.LLST14:
 2609 043b 0C000000 		.4byte	.LVL1
 2610 043f 82000000 		.4byte	.LVL19
 2611 0443 0600     		.2byte	0x6
 2612 0445 9E       		.byte	0x9e
 2613 0446 04       		.uleb128 0x4
 2614 0447 00000000 		.4byte	0
 2615 044b 5C010000 		.4byte	.LVL57
 2616 044f 5E010000 		.4byte	.LVL58
 2617 0453 0100     		.2byte	0x1
 2618 0455 50       		.byte	0x50
 2619 0456 5E010000 		.4byte	.LVL58
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 60


 2620 045a C0010000 		.4byte	.LVL76
 2621 045e 0100     		.2byte	0x1
 2622 0460 55       		.byte	0x55
 2623 0461 00000000 		.4byte	0
 2624 0465 00000000 		.4byte	0
 2625              	.LLST15:
 2626 0469 DC020000 		.4byte	.LVL110
 2627 046d F3020000 		.4byte	.LVL113-1
 2628 0471 0100     		.2byte	0x1
 2629 0473 53       		.byte	0x53
 2630 0474 00000000 		.4byte	0
 2631 0478 00000000 		.4byte	0
 2632              	.LLST16:
 2633 047c 0C000000 		.4byte	.LVL1
 2634 0480 82000000 		.4byte	.LVL19
 2635 0484 0600     		.2byte	0x6
 2636 0486 9E       		.byte	0x9e
 2637 0487 04       		.uleb128 0x4
 2638 0488 00000000 		.4byte	0
 2639 048c 5C010000 		.4byte	.LVL57
 2640 0490 6A010000 		.4byte	.LVL60
 2641 0494 0100     		.2byte	0x1
 2642 0496 58       		.byte	0x58
 2643 0497 6A010000 		.4byte	.LVL60
 2644 049b 6C010000 		.4byte	.LVL61
 2645 049f 0100     		.2byte	0x1
 2646 04a1 56       		.byte	0x56
 2647 04a2 6C010000 		.4byte	.LVL61
 2648 04a6 6E010000 		.4byte	.LVL62
 2649 04aa 0100     		.2byte	0x1
 2650 04ac 58       		.byte	0x58
 2651 04ad 6E010000 		.4byte	.LVL62
 2652 04b1 1E020000 		.4byte	.LVL95
 2653 04b5 0100     		.2byte	0x1
 2654 04b7 56       		.byte	0x56
 2655 04b8 00000000 		.4byte	0
 2656 04bc 00000000 		.4byte	0
 2657              	.LLST17:
 2658 04c0 0C000000 		.4byte	.LVL1
 2659 04c4 82000000 		.4byte	.LVL19
 2660 04c8 0600     		.2byte	0x6
 2661 04ca 9E       		.byte	0x9e
 2662 04cb 04       		.uleb128 0x4
 2663 04cc 00000000 		.4byte	0
 2664 04d0 7A010000 		.4byte	.LVL64
 2665 04d4 AC010000 		.4byte	.LVL70
 2666 04d8 0300     		.2byte	0x3
 2667 04da 91       		.byte	0x91
 2668 04db A47F     		.sleb128 -92
 2669 04dd AC010000 		.4byte	.LVL70
 2670 04e1 AE010000 		.4byte	.LVL71
 2671 04e5 0100     		.2byte	0x1
 2672 04e7 50       		.byte	0x50
 2673 04e8 AE010000 		.4byte	.LVL71
 2674 04ec B8010000 		.4byte	.LVL74
 2675 04f0 0300     		.2byte	0x3
 2676 04f2 91       		.byte	0x91
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 61


 2677 04f3 A47F     		.sleb128 -92
 2678 04f5 B8010000 		.4byte	.LVL74
 2679 04f9 EA010000 		.4byte	.LVL84
 2680 04fd 0100     		.2byte	0x1
 2681 04ff 58       		.byte	0x58
 2682 0500 00000000 		.4byte	0
 2683 0504 00000000 		.4byte	0
 2684              	.LLST18:
 2685 0508 58000000 		.4byte	.LVL13
 2686 050c 5C000000 		.4byte	.LVL15
 2687 0510 0100     		.2byte	0x1
 2688 0512 50       		.byte	0x50
 2689 0513 00000000 		.4byte	0
 2690 0517 00000000 		.4byte	0
 2691              	.LLST19:
 2692 051b 00000000 		.4byte	.LVL124
 2693 051f 0A000000 		.4byte	.LVL126
 2694 0523 0100     		.2byte	0x1
 2695 0525 50       		.byte	0x50
 2696 0526 0A000000 		.4byte	.LVL126
 2697 052a 2A000000 		.4byte	.LFE64
 2698 052e 0400     		.2byte	0x4
 2699 0530 F3       		.byte	0xf3
 2700 0531 01       		.uleb128 0x1
 2701 0532 50       		.byte	0x50
 2702 0533 9F       		.byte	0x9f
 2703 0534 00000000 		.4byte	0
 2704 0538 00000000 		.4byte	0
 2705              	.LLST20:
 2706 053c 00000000 		.4byte	.LVL124
 2707 0540 0A000000 		.4byte	.LVL126
 2708 0544 0100     		.2byte	0x1
 2709 0546 51       		.byte	0x51
 2710 0547 0A000000 		.4byte	.LVL126
 2711 054b 18000000 		.4byte	.LVL128
 2712 054f 0100     		.2byte	0x1
 2713 0551 54       		.byte	0x54
 2714 0552 18000000 		.4byte	.LVL128
 2715 0556 22000000 		.4byte	.LVL131
 2716 055a 0100     		.2byte	0x1
 2717 055c 56       		.byte	0x56
 2718 055d 22000000 		.4byte	.LVL131
 2719 0561 2A000000 		.4byte	.LFE64
 2720 0565 0100     		.2byte	0x1
 2721 0567 54       		.byte	0x54
 2722 0568 00000000 		.4byte	0
 2723 056c 00000000 		.4byte	0
 2724              	.LLST21:
 2725 0570 00000000 		.4byte	.LVL124
 2726 0574 0A000000 		.4byte	.LVL126
 2727 0578 0100     		.2byte	0x1
 2728 057a 52       		.byte	0x52
 2729 057b 0A000000 		.4byte	.LVL126
 2730 057f 2A000000 		.4byte	.LFE64
 2731 0583 0100     		.2byte	0x1
 2732 0585 57       		.byte	0x57
 2733 0586 00000000 		.4byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 62


 2734 058a 00000000 		.4byte	0
 2735              	.LLST22:
 2736 058e 06000000 		.4byte	.LVL125
 2737 0592 0A000000 		.4byte	.LVL126
 2738 0596 0200     		.2byte	0x2
 2739 0598 30       		.byte	0x30
 2740 0599 9F       		.byte	0x9f
 2741 059a 0A000000 		.4byte	.LVL126
 2742 059e 2A000000 		.4byte	.LFE64
 2743 05a2 0100     		.2byte	0x1
 2744 05a4 55       		.byte	0x55
 2745 05a5 00000000 		.4byte	0
 2746 05a9 00000000 		.4byte	0
 2747              	.LLST23:
 2748 05ad 00000000 		.4byte	.LVL132
 2749 05b1 0A000000 		.4byte	.LVL134
 2750 05b5 0100     		.2byte	0x1
 2751 05b7 50       		.byte	0x50
 2752 05b8 0A000000 		.4byte	.LVL134
 2753 05bc 38000000 		.4byte	.LFE65
 2754 05c0 0400     		.2byte	0x4
 2755 05c2 F3       		.byte	0xf3
 2756 05c3 01       		.uleb128 0x1
 2757 05c4 50       		.byte	0x50
 2758 05c5 9F       		.byte	0x9f
 2759 05c6 00000000 		.4byte	0
 2760 05ca 00000000 		.4byte	0
 2761              	.LLST24:
 2762 05ce 00000000 		.4byte	.LVL132
 2763 05d2 0A000000 		.4byte	.LVL134
 2764 05d6 0100     		.2byte	0x1
 2765 05d8 51       		.byte	0x51
 2766 05d9 0A000000 		.4byte	.LVL134
 2767 05dd 26000000 		.4byte	.LVL141
 2768 05e1 0100     		.2byte	0x1
 2769 05e3 57       		.byte	0x57
 2770 05e4 26000000 		.4byte	.LVL141
 2771 05e8 30000000 		.4byte	.LVL143
 2772 05ec 0100     		.2byte	0x1
 2773 05ee 53       		.byte	0x53
 2774 05ef 30000000 		.4byte	.LVL143
 2775 05f3 34000000 		.4byte	.LVL144
 2776 05f7 0100     		.2byte	0x1
 2777 05f9 57       		.byte	0x57
 2778 05fa 00000000 		.4byte	0
 2779 05fe 00000000 		.4byte	0
 2780              	.LLST25:
 2781 0602 00000000 		.4byte	.LVL132
 2782 0606 0A000000 		.4byte	.LVL134
 2783 060a 0100     		.2byte	0x1
 2784 060c 52       		.byte	0x52
 2785 060d 0A000000 		.4byte	.LVL134
 2786 0611 38000000 		.4byte	.LFE65
 2787 0615 0100     		.2byte	0x1
 2788 0617 54       		.byte	0x54
 2789 0618 00000000 		.4byte	0
 2790 061c 00000000 		.4byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 63


 2791              	.LLST26:
 2792 0620 06000000 		.4byte	.LVL133
 2793 0624 0A000000 		.4byte	.LVL134
 2794 0628 0200     		.2byte	0x2
 2795 062a 30       		.byte	0x30
 2796 062b 9F       		.byte	0x9f
 2797 062c 0A000000 		.4byte	.LVL134
 2798 0630 38000000 		.4byte	.LFE65
 2799 0634 0100     		.2byte	0x1
 2800 0636 56       		.byte	0x56
 2801 0637 00000000 		.4byte	0
 2802 063b 00000000 		.4byte	0
 2803              	.LLST27:
 2804 063f 0E000000 		.4byte	.LVL135
 2805 0643 15000000 		.4byte	.LVL136-1
 2806 0647 0100     		.2byte	0x1
 2807 0649 50       		.byte	0x50
 2808 064a 1C000000 		.4byte	.LVL138
 2809 064e 24000000 		.4byte	.LVL140
 2810 0652 0200     		.2byte	0x2
 2811 0654 3A       		.byte	0x3a
 2812 0655 9F       		.byte	0x9f
 2813 0656 24000000 		.4byte	.LVL140
 2814 065a 30000000 		.4byte	.LVL143
 2815 065e 0100     		.2byte	0x1
 2816 0660 55       		.byte	0x55
 2817 0661 00000000 		.4byte	0
 2818 0665 00000000 		.4byte	0
 2819              		.section	.debug_aranges,"",%progbits
 2820 0000 2C000000 		.4byte	0x2c
 2821 0004 0200     		.2byte	0x2
 2822 0006 00000000 		.4byte	.Ldebug_info0
 2823 000a 04       		.byte	0x4
 2824 000b 00       		.byte	0
 2825 000c 0000     		.2byte	0
 2826 000e 0000     		.2byte	0
 2827 0010 00000000 		.4byte	.LFB63
 2828 0014 64030000 		.4byte	.LFE63-.LFB63
 2829 0018 00000000 		.4byte	.LFB64
 2830 001c 2A000000 		.4byte	.LFE64-.LFB64
 2831 0020 00000000 		.4byte	.LFB65
 2832 0024 38000000 		.4byte	.LFE65-.LFB65
 2833 0028 00000000 		.4byte	0
 2834 002c 00000000 		.4byte	0
 2835              		.section	.debug_ranges,"",%progbits
 2836              	.Ldebug_ranges0:
 2837 0000 00000000 		.4byte	.LFB63
 2838 0004 64030000 		.4byte	.LFE63
 2839 0008 00000000 		.4byte	.LFB64
 2840 000c 2A000000 		.4byte	.LFE64
 2841 0010 00000000 		.4byte	.LFB65
 2842 0014 38000000 		.4byte	.LFE65
 2843 0018 00000000 		.4byte	0
 2844 001c 00000000 		.4byte	0
 2845              		.section	.debug_line,"",%progbits
 2846              	.Ldebug_line0:
 2847 0000 44030000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 64


 2847      0200CD01 
 2847      00000201 
 2847      FB0E0D00 
 2847      01010101 
 2848              	.LASF72:
 2849 0000 55415254 		.ascii	"UART_1_GetChar\000"
 2849      5F315F47 
 2849      65744368 
 2849      617200
 2850              	.LASF3:
 2851 000f 73686F72 		.ascii	"short int\000"
 2851      7420696E 
 2851      7400
 2852              	.LASF19:
 2853 0019 73697A65 		.ascii	"sizetype\000"
 2853      74797065 
 2853      00
 2854              	.LASF75:
 2855 0022 433A5C55 		.ascii	"C:\\Users\\Ville L\\Desktop\\Zumo_Robotti t\\Zumo_R"
 2855      73657273 
 2855      5C56696C 
 2855      6C65204C 
 2855      5C446573 
 2856 0050 6F626F74 		.ascii	"obotti\\ZumoBot.cydsn\000"
 2856      74695C5A 
 2856      756D6F42 
 2856      6F742E63 
 2856      7964736E 
 2857              	.LASF37:
 2858 0065 6D617844 		.ascii	"maxDiff_l1\000"
 2858      6966665F 
 2858      6C3100
 2859              	.LASF21:
 2860 0070 6379636C 		.ascii	"cycles\000"
 2860      657300
 2861              	.LASF77:
 2862 0077 6D61696E 		.ascii	"main\000"
 2862      00
 2863              	.LASF52:
 2864 007c 5F777269 		.ascii	"_write\000"
 2864      746500
 2865              	.LASF5:
 2866 0083 5F5F7569 		.ascii	"__uint16_t\000"
 2866      6E743136 
 2866      5F7400
 2867              	.LASF51:
 2868 008e 66696C65 		.ascii	"file\000"
 2868      00
 2869              	.LASF45:
 2870 0093 64696666 		.ascii	"diffs\000"
 2870      7300
 2871              	.LASF73:
 2872 0099 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2872      4320342E 
 2872      392E3320 
 2872      32303135 
 2872      30333033 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 65


 2873 00cc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2873      20726576 
 2873      6973696F 
 2873      6E203232 
 2873      31323230 
 2874 00ff 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2874      66756E63 
 2874      74696F6E 
 2874      2D736563 
 2874      74696F6E 
 2875              	.LASF58:
 2876 0127 6D6F746F 		.ascii	"motor_start\000"
 2876      725F7374 
 2876      61727400 
 2877              	.LASF76:
 2878 0133 73656E73 		.ascii	"sensors_\000"
 2878      6F72735F 
 2878      00
 2879              	.LASF30:
 2880 013c 626C6163 		.ascii	"black_threshold_l1\000"
 2880      6B5F7468 
 2880      72657368 
 2880      6F6C645F 
 2880      6C3100
 2881              	.LASF29:
 2882 014f 626C6163 		.ascii	"black_threshold_l3\000"
 2882      6B5F7468 
 2882      72657368 
 2882      6F6C645F 
 2882      6C3300
 2883              	.LASF14:
 2884 0162 75696E74 		.ascii	"uint8\000"
 2884      3800
 2885              	.LASF57:
 2886 0168 4D656173 		.ascii	"Measure_Voltage\000"
 2886      7572655F 
 2886      566F6C74 
 2886      61676500 
 2887              	.LASF62:
 2888 0178 7265666C 		.ascii	"reflectance_start\000"
 2888      65637461 
 2888      6E63655F 
 2888      73746172 
 2888      7400
 2889              	.LASF79:
 2890 018a 706F7766 		.ascii	"powf\000"
 2890      00
 2891              	.LASF70:
 2892 018f 55415254 		.ascii	"UART_1_PutChar\000"
 2892      5F315F50 
 2892      75744368 
 2892      617200
 2893              	.LASF0:
 2894 019e 666C6F61 		.ascii	"float\000"
 2894      7400
 2895              	.LASF9:
 2896 01a4 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 66


 2896      206C6F6E 
 2896      6720696E 
 2896      7400
 2897              	.LASF43:
 2898 01b2 626C6163 		.ascii	"blackness_2\000"
 2898      6B6E6573 
 2898      735F3200 
 2899              	.LASF47:
 2900 01be 64696666 		.ascii	"diff_prev_ave\000"
 2900      5F707265 
 2900      765F6176 
 2900      6500
 2901              	.LASF68:
 2902 01cc 7265666C 		.ascii	"reflectance_digital\000"
 2902      65637461 
 2902      6E63655F 
 2902      64696769 
 2902      74616C00 
 2903              	.LASF17:
 2904 01e0 63686172 		.ascii	"char\000"
 2904      00
 2905              	.LASF41:
 2906 01e5 626C6163 		.ascii	"black_threshold\000"
 2906      6B5F7468 
 2906      72657368 
 2906      6F6C6400 
 2907              	.LASF26:
 2908 01f5 65786974 		.ascii	"exitMainLoop\000"
 2908      4D61696E 
 2908      4C6F6F70 
 2908      00
 2909              	.LASF46:
 2910 0202 64696666 		.ascii	"diff_ave\000"
 2910      5F617665 
 2910      00
 2911              	.LASF50:
 2912 020b 62757474 		.ascii	"button\000"
 2912      6F6E00
 2913              	.LASF55:
 2914 0212 55415254 		.ascii	"UART_1_Start\000"
 2914      5F315F53 
 2914      74617274 
 2914      00
 2915              	.LASF66:
 2916 021f 43757374 		.ascii	"Custom_forward\000"
 2916      6F6D5F66 
 2916      6F727761 
 2916      726400
 2917              	.LASF2:
 2918 022e 756E7369 		.ascii	"unsigned char\000"
 2918      676E6564 
 2918      20636861 
 2918      7200
 2919              	.LASF22:
 2920 023c 65786974 		.ascii	"exit\000"
 2920      00
 2921              	.LASF42:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 67


 2922 0241 626C6163 		.ascii	"blackness_1\000"
 2922      6B6E6573 
 2922      735F3100 
 2923              	.LASF20:
 2924 024d 6C6F6E67 		.ascii	"long double\000"
 2924      20646F75 
 2924      626C6500 
 2925              	.LASF56:
 2926 0259 4144435F 		.ascii	"ADC_Battery_Start\000"
 2926      42617474 
 2926      6572795F 
 2926      53746172 
 2926      7400
 2927              	.LASF18:
 2928 026b 63796973 		.ascii	"cyisraddress\000"
 2928      72616464 
 2928      72657373 
 2928      00
 2929              	.LASF25:
 2930 0278 696E426C 		.ascii	"inBlack\000"
 2930      61636B00 
 2931              	.LASF61:
 2932 0280 7265666C 		.ascii	"reflectance_set_threshold\000"
 2932      65637461 
 2932      6E63655F 
 2932      7365745F 
 2932      74687265 
 2933              	.LASF53:
 2934 029a 5F726561 		.ascii	"_read\000"
 2934      6400
 2935              	.LASF35:
 2936 02a0 77686974 		.ascii	"white_threshold_r1\000"
 2936      655F7468 
 2936      72657368 
 2936      6F6C645F 
 2936      723100
 2937              	.LASF1:
 2938 02b3 7369676E 		.ascii	"signed char\000"
 2938      65642063 
 2938      68617200 
 2939              	.LASF36:
 2940 02bf 77686974 		.ascii	"white_threshold_r3\000"
 2940      655F7468 
 2940      72657368 
 2940      6F6C645F 
 2940      723300
 2941              	.LASF10:
 2942 02d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2942      206C6F6E 
 2942      6720756E 
 2942      7369676E 
 2942      65642069 
 2943              	.LASF11:
 2944 02e9 756E7369 		.ascii	"unsigned int\000"
 2944      676E6564 
 2944      20696E74 
 2944      00
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 68


 2945              	.LASF12:
 2946 02f6 75696E74 		.ascii	"uint16_t\000"
 2946      31365F74 
 2946      00
 2947              	.LASF27:
 2948 02ff 7475726E 		.ascii	"turn\000"
 2948      00
 2949              	.LASF28:
 2950 0304 73706565 		.ascii	"speed\000"
 2950      6400
 2951              	.LASF4:
 2952 030a 73686F72 		.ascii	"short unsigned int\000"
 2952      7420756E 
 2952      7369676E 
 2952      65642069 
 2952      6E7400
 2953              	.LASF59:
 2954 031d 6D6F746F 		.ascii	"motor_forward\000"
 2954      725F666F 
 2954      72776172 
 2954      6400
 2955              	.LASF24:
 2956 032b 636F756E 		.ascii	"countLines\000"
 2956      744C696E 
 2956      657300
 2957              	.LASF7:
 2958 0336 6C6F6E67 		.ascii	"long int\000"
 2958      20696E74 
 2958      00
 2959              	.LASF44:
 2960 033f 626C6163 		.ascii	"blackDiff\000"
 2960      6B446966 
 2960      6600
 2961              	.LASF13:
 2962 0349 696E7433 		.ascii	"int32_t\000"
 2962      325F7400 
 2963              	.LASF40:
 2964 0351 6D617844 		.ascii	"maxDiff\000"
 2964      69666600 
 2965              	.LASF64:
 2966 0359 42617474 		.ascii	"BatteryLed_Write\000"
 2966      6572794C 
 2966      65645F57 
 2966      72697465 
 2966      00
 2967              	.LASF71:
 2968 036a 5357315F 		.ascii	"SW1_Read\000"
 2968      52656164 
 2968      00
 2969              	.LASF15:
 2970 0373 75696E74 		.ascii	"uint32\000"
 2970      333200
 2971              	.LASF74:
 2972 037a 6D61696E 		.ascii	"main.c\000"
 2972      2E6300
 2973              	.LASF38:
 2974 0381 6D617844 		.ascii	"maxDiff_r1\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 69


 2974      6966665F 
 2974      723100
 2975              	.LASF8:
 2976 038c 6C6F6E67 		.ascii	"long unsigned int\000"
 2976      20756E73 
 2976      69676E65 
 2976      6420696E 
 2976      7400
 2977              	.LASF60:
 2978 039e 73656E73 		.ascii	"sensor_isr_StartEx\000"
 2978      6F725F69 
 2978      73725F53 
 2978      74617274 
 2978      457800
 2979              	.LASF69:
 2980 03b1 5475726E 		.ascii	"Turn\000"
 2980      00
 2981              	.LASF39:
 2982 03b6 64696769 		.ascii	"digital\000"
 2982      74616C00 
 2983              	.LASF23:
 2984 03be 6469725F 		.ascii	"dir_flag\000"
 2984      666C6167 
 2984      00
 2985              	.LASF54:
 2986 03c7 636F756E 		.ascii	"count\000"
 2986      7400
 2987              	.LASF6:
 2988 03cd 5F5F696E 		.ascii	"__int32_t\000"
 2988      7433325F 
 2988      7400
 2989              	.LASF31:
 2990 03d7 626C6163 		.ascii	"black_threshold_r1\000"
 2990      6B5F7468 
 2990      72657368 
 2990      6F6C645F 
 2990      723100
 2991              	.LASF48:
 2992 03ea 64696666 		.ascii	"diff_pos\000"
 2992      5F706F73 
 2992      00
 2993              	.LASF32:
 2994 03f3 626C6163 		.ascii	"black_threshold_r3\000"
 2994      6B5F7468 
 2994      72657368 
 2994      6F6C645F 
 2994      723300
 2995              	.LASF49:
 2996 0406 6E6F726D 		.ascii	"norm_blackness_2\000"
 2996      5F626C61 
 2996      636B6E65 
 2996      73735F32 
 2996      00
 2997              	.LASF16:
 2998 0417 646F7562 		.ascii	"double\000"
 2998      6C6500
 2999              	.LASF34:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccJxfwvQ.s 			page 70


 3000 041e 77686974 		.ascii	"white_threshold_l1\000"
 3000      655F7468 
 3000      72657368 
 3000      6F6C645F 
 3000      6C3100
 3001              	.LASF33:
 3002 0431 77686974 		.ascii	"white_threshold_l3\000"
 3002      655F7468 
 3002      72657368 
 3002      6F6C645F 
 3002      6C3300
 3003              	.LASF78:
 3004 0444 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3004      52784275 
 3004      66666572 
 3004      00
 3005              	.LASF65:
 3006 0451 43794465 		.ascii	"CyDelay\000"
 3006      6C617900 
 3007              	.LASF67:
 3008 0459 7265666C 		.ascii	"reflectance_read\000"
 3008      65637461 
 3008      6E63655F 
 3008      72656164 
 3008      00
 3009              	.LASF63:
 3010 046a 49525F6C 		.ascii	"IR_led_Write\000"
 3010      65645F57 
 3010      72697465 
 3010      00
 3011              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
