ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fcmple
  21              		.global	__aeabi_fcmpgt
  22              		.global	__aeabi_fcmplt
  23              		.global	__aeabi_fcmpge
  24              		.global	__aeabi_i2f
  25              		.global	__aeabi_fdiv
  26              		.global	__aeabi_f2d
  27              		.global	__aeabi_dmul
  28              		.global	__aeabi_d2uiz
  29              		.global	__aeabi_fmul
  30              		.global	__aeabi_i2d
  31              		.global	__aeabi_dadd
  32              		.global	__aeabi_dsub
  33              		.section	.text.main,"ax",%progbits
  34              		.align	2
  35              		.global	main
  36              		.thumb
  37              		.thumb_func
  38              		.type	main, %function
  39              	main:
  40              	.LFB63:
  41              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 2


  17:main.c        **** */
  18:main.c        **** 
  19:main.c        **** #include <project.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include "Motor.h"
  22:main.c        **** #include "Ultra.h"
  23:main.c        **** #include "Nunchuk.h"
  24:main.c        **** #include "Reflectance.h"
  25:main.c        **** #include "I2C_made.h"
  26:main.c        **** #include "Gyro.h"
  27:main.c        **** #include "Accel_magnet.h"
  28:main.c        **** #include "IR.h"
  29:main.c        **** #include "Ambient.h"
  30:main.c        **** #include "Beep.h"
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** // Declare used methods
  34:main.c        **** int rread(void);
  35:main.c        **** void motor_start();
  36:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  37:main.c        **** void Custom_forward(uint8 speed);
  38:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  39:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  40:main.c        **** void Measure_Voltage();
  41:main.c        **** void Right_turn(uint8 speed);
  42:main.c        **** void Left_turn(uint8 speed);
  43:main.c        **** 
  44:main.c        **** 
  45:main.c        **** int main()
  46:main.c        **** {
  42              		.loc 1 46 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 48
  45              		@ frame_needed = 0, uses_anonymous_args = 0
  46 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  47              		.cfi_def_cfa_offset 36
  48              		.cfi_offset 4, -36
  49              		.cfi_offset 5, -32
  50              		.cfi_offset 6, -28
  51              		.cfi_offset 7, -24
  52              		.cfi_offset 8, -20
  53              		.cfi_offset 9, -16
  54              		.cfi_offset 10, -12
  55              		.cfi_offset 11, -8
  56              		.cfi_offset 14, -4
  57 0004 8DB0     		sub	sp, sp, #52
  58              		.cfi_def_cfa_offset 88
  59              	.LVL0:
  47:main.c        ****     // 'Time counter' for the voltage measurement interval
  48:main.c        ****     int cycles = 0;
  49:main.c        ****     
  50:main.c        ****     // Needed for using the button to start the robot's movement routine
  51:main.c        ****     int exit = 0;
  52:main.c        **** 
  53:main.c        ****     // For determining behaviour with various values of 'diff'
  54:main.c        ****     int diffCase = 0;
  55:main.c        ****     
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 3


  56:main.c        ****     // The diff value which acts as a threshold for 'fast' movement away from / towards the center 
  57:main.c        ****     int diff_Fast = 500;
  58:main.c        ****     
  59:main.c        ****     // direction flag for correct turning behaviour. '1' = 'left', '2' = 'right'.
  60:main.c        ****     int dir_flag = 0;
  61:main.c        ****     
  62:main.c        ****     //For counting blackLines (to stop the robot at race end)
  63:main.c        ****     int countLines = 0;
  64:main.c        ****     int inBlack = 0;
  65:main.c        ****     int exitMainLoop = 0;
  66:main.c        ****     
  67:main.c        ****     // Turn value for the motors to use.
  68:main.c        ****     uint8 turn = 0;
  69:main.c        ****     
  70:main.c        ****     // (Maximum) movement speed of the robot.
  71:main.c        ****     uint8 speed = 240;
  72:main.c        ****     
  73:main.c        ****     // Reflectance thresholds (determined experimentally) for use in different movement behaviours.
  74:main.c        ****     int black_threshold_l3 = 21000;
  75:main.c        ****     int black_threshold_l1 = 18000; // 'sure bet' working value: 17 500
  76:main.c        ****     int black_threshold_r1 = 22600; // 'sure bet' working value: 22 000
  77:main.c        ****     int black_threshold_r3 = 21500;
  78:main.c        ****         
  79:main.c        ****     int white_threshold_l3 = 5793;
  80:main.c        ****     int white_threshold_l1 = 4500;
  81:main.c        ****     int white_threshold_r1 = 4522;
  82:main.c        ****     int white_threshold_r3 = 6293;
  83:main.c        ****     
  84:main.c        ****     int maxDiff_l1 = black_threshold_l1 - white_threshold_l1;
  85:main.c        ****     int maxDiff_r1 = black_threshold_r1 - white_threshold_r1;
  86:main.c        ****         
  87:main.c        ****     int digital = 0;
  88:main.c        ****     int maxDiff = 0;
  89:main.c        ****     int black_threshold = 0;
  90:main.c        ****     float blackness_1 = 23999;
  91:main.c        ****     float blackness_2 = 23999;
  92:main.c        ****     float blackDiff = 0.0;
  93:main.c        ****     int near_BlackThreshold = 0;
  94:main.c        **** 
  95:main.c        ****     
  96:main.c        ****     // Initialize various starting thingies
  97:main.c        ****     struct sensors_ ref;
  98:main.c        ****     struct sensors_ dig;
  99:main.c        ****     CyGlobalIntEnable; 
  60              		.loc 1 99 0
  61              	@ 99 "main.c" 1
  62 0006 62B6     		CPSIE   i
  63              	@ 0 "" 2
 100:main.c        ****     UART_1_Start();
  64              		.loc 1 100 0
  65              		.thumb
  66 0008 FFF7FEFF 		bl	UART_1_Start
  67              	.LVL1:
 101:main.c        ****     ADC_Battery_Start();   
  68              		.loc 1 101 0
  69 000c FFF7FEFF 		bl	ADC_Battery_Start
  70              	.LVL2:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 4


 102:main.c        ****     
 103:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
  71              		.loc 1 103 0
  72 0010 FFF7FEFF 		bl	Measure_Voltage
  73              	.LVL3:
 104:main.c        ****     
 105:main.c        ****     motor_start();
  74              		.loc 1 105 0
  75 0014 FFF7FEFF 		bl	motor_start
  76              	.LVL4:
 106:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  77              		.loc 1 106 0
  78 0018 0020     		movs	r0, #0
  79 001a 0146     		mov	r1, r0
  80 001c FFF7FEFF 		bl	motor_forward
  81              	.LVL5:
 107:main.c        ****     
 108:main.c        ****     // Initialize IR sensors
 109:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  82              		.loc 1 109 0
  83 0020 A548     		ldr	r0, .L58+16
  84 0022 FFF7FEFF 		bl	sensor_isr_StartEx
  85              	.LVL6:
 110:main.c        ****     reflectance_set_threshold(black_threshold_l3, black_threshold_l1, black_threshold_r1, black_thr
  86              		.loc 1 110 0
  87 0026 45F20820 		movw	r0, #21000
  88 002a 44F25061 		movw	r1, #18000
  89 002e 45F64802 		movw	r2, #22600
  90 0032 45F2FC33 		movw	r3, #21500
  91 0036 FFF7FEFF 		bl	reflectance_set_threshold
  92              	.LVL7:
 111:main.c        ****     reflectance_start();
  93              		.loc 1 111 0
  94 003a FFF7FEFF 		bl	reflectance_start
  95              	.LVL8:
 112:main.c        ****     IR_led_Write(1);
  96              		.loc 1 112 0
  97 003e 0120     		movs	r0, #1
  98 0040 FFF7FEFF 		bl	IR_led_Write
  99              	.LVL9:
 113:main.c        **** 
 114:main.c        ****     BatteryLed_Write(0); // Switch led off 
 100              		.loc 1 114 0
 101 0044 0020     		movs	r0, #0
 102 0046 FFF7FEFF 		bl	BatteryLed_Write
 103              	.LVL10:
  51:main.c        **** 
 104              		.loc 1 51 0
 105 004a 0024     		movs	r4, #0
 115:main.c        ****     
 116:main.c        ****     uint8 button; // make button exist
 117:main.c        ****     
 118:main.c        ****     // To start the robot's movement routine, press the button
 119:main.c        ****     while (exit == 0) 
 106              		.loc 1 119 0
 107 004c 06E0     		b	.L3
 108              	.LVL11:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 5


 109              	.L4:
 120:main.c        ****     {
 121:main.c        ****         button = SW1_Read();
 110              		.loc 1 121 0
 111 004e FFF7FEFF 		bl	SW1_Read
 112              	.LVL12:
 122:main.c        ****         
 123:main.c        ****         if (button == 0) 
 113              		.loc 1 123 0
 114 0052 18B9     		cbnz	r0, .L3
 115              	.LVL13:
 124:main.c        ****         {
 125:main.c        ****             exit = 1;
 126:main.c        ****             CyDelay(10);
 116              		.loc 1 126 0
 117 0054 0A20     		movs	r0, #10
 118              	.LVL14:
 119 0056 FFF7FEFF 		bl	CyDelay
 120              	.LVL15:
 125:main.c        ****             CyDelay(10);
 121              		.loc 1 125 0
 122 005a 0124     		movs	r4, #1
 123              	.LVL16:
 124              	.L3:
 119:main.c        ****     {
 125              		.loc 1 119 0
 126 005c 002C     		cmp	r4, #0
 127 005e F6D0     		beq	.L4
 128 0060 0023     		movs	r3, #0
 129 0062 0393     		str	r3, [sp, #12]
 130 0064 954E     		ldr	r6, .L58+20
 131 0066 0193     		str	r3, [sp, #4]
 132 0068 0293     		str	r3, [sp, #8]
 133 006a 1D46     		mov	r5, r3
 134 006c 0593     		str	r3, [sp, #20]
 135 006e 0493     		str	r3, [sp, #16]
 136 0070 1C46     		mov	r4, r3
 137              	.LVL17:
 138 0072 9846     		mov	r8, r3
 139 0074 9946     		mov	r9, r3
 140 0076 9B46     		mov	fp, r3
 141 0078 48E2     		b	.L5
 142              	.LVL18:
 143              	.L37:
 127:main.c        ****         }
 128:main.c        ****     }
 129:main.c        ****     
 130:main.c        ****     // Start going forward.
 131:main.c        ****     //Custom_forward(speed);
 132:main.c        ****     
 133:main.c        ****     // Giant loop to run the movement logic in.
 134:main.c        ****     while(exitMainLoop == 0)
 135:main.c        ****     {    
 136:main.c        ****         /*
 137:main.c        ****         reflectance_read(&ref); // raw reflectance value ('blackness') from the sensor; 0 - 23 999
 138:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 139:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 6


 140:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 141:main.c        ****         CyDelay(500); // comment this delay out when doing movement tests / racing !!!
 142:main.c        ****         */
 143:main.c        ****         
 144:main.c        ****         
 145:main.c        ****         // Line-following logic.
 146:main.c        ****         // NOTE: due to the calibration of the motor speeds, 240 (255 - 15) is our current max spee
 147:main.c        ****         
 148:main.c        ****         // If-switch between left and right sensor activation (affects turning logic directly below
 149:main.c        ****         if (dig.l1 == 1) 
 144              		.loc 1 149 0
 145 007a BDF82230 		ldrh	r3, [sp, #34]
 146              	.LVL19:
 147 007e 012B     		cmp	r3, #1
 148 0080 14D1     		bne	.L6
 149              	.LVL20:
 150:main.c        ****         {
 151:main.c        ****             dir_flag = 1;
 152:main.c        ****             digital = dig.l1;
 150              		.loc 1 152 0
 151 0082 1D46     		mov	r5, r3
 152              	.LVL21:
 153:main.c        ****             
 154:main.c        ****             blackness_1 = ref.l1;
 153              		.loc 1 154 0
 154 0084 BDF82A00 		ldrh	r0, [sp, #42]
 155 0088 FFF7FEFF 		bl	__aeabi_ui2f
 156              	.LVL22:
 157 008c 0646     		mov	r6, r0
 158              	.LVL23:
 155:main.c        ****             CyDelay(1);
 159              		.loc 1 155 0
 160 008e 0120     		movs	r0, #1
 161              	.LVL24:
 162 0090 FFF7FEFF 		bl	CyDelay
 163              	.LVL25:
 156:main.c        ****             
 157:main.c        ****             black_threshold = black_threshold_l1;
 158:main.c        ****             near_BlackThreshold = 16000;
 164              		.loc 1 158 0
 165 0094 4FF47A53 		mov	r3, #16000
 166 0098 0393     		str	r3, [sp, #12]
 157:main.c        ****             near_BlackThreshold = 16000;
 167              		.loc 1 157 0
 168 009a 44F25063 		movw	r3, #18000
 169 009e 0193     		str	r3, [sp, #4]
 159:main.c        ****             maxDiff = maxDiff_l1;
 170              		.loc 1 159 0
 171 00a0 43F2BC43 		movw	r3, #13500
 172 00a4 0293     		str	r3, [sp, #8]
 151:main.c        ****             digital = dig.l1;
 173              		.loc 1 151 0
 174 00a6 4FF00108 		mov	r8, #1
 175 00aa 17E0     		b	.L7
 176              	.LVL26:
 177              	.L6:
 160:main.c        ****    
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 7


 161:main.c        ****         } else if (dig.r1 == 1) {
 178              		.loc 1 161 0
 179 00ac BDF82430 		ldrh	r3, [sp, #36]
 180 00b0 012B     		cmp	r3, #1
 181 00b2 13D1     		bne	.L7
 182              	.LVL27:
 162:main.c        ****         
 163:main.c        ****             dir_flag = 2;
 164:main.c        ****             digital = dig.r1;
 183              		.loc 1 164 0
 184 00b4 1D46     		mov	r5, r3
 185              	.LVL28:
 165:main.c        ****             
 166:main.c        ****             blackness_1 = ref.r1;
 186              		.loc 1 166 0
 187 00b6 BDF82C00 		ldrh	r0, [sp, #44]
 188 00ba FFF7FEFF 		bl	__aeabi_ui2f
 189              	.LVL29:
 190 00be 0646     		mov	r6, r0
 191              	.LVL30:
 167:main.c        ****             CyDelay(1);
 192              		.loc 1 167 0
 193 00c0 0120     		movs	r0, #1
 194              	.LVL31:
 195 00c2 FFF7FEFF 		bl	CyDelay
 196              	.LVL32:
 168:main.c        ****             
 169:main.c        ****             black_threshold = black_threshold_r1;
 170:main.c        ****             near_BlackThreshold = 19200;
 197              		.loc 1 170 0
 198 00c6 4FF49643 		mov	r3, #19200
 199 00ca 0393     		str	r3, [sp, #12]
 169:main.c        ****             near_BlackThreshold = 19200;
 200              		.loc 1 169 0
 201 00cc 45F64803 		movw	r3, #22600
 202 00d0 0193     		str	r3, [sp, #4]
 171:main.c        ****             maxDiff = maxDiff_r1;
 203              		.loc 1 171 0
 204 00d2 44F29E63 		movw	r3, #18078
 205 00d6 0293     		str	r3, [sp, #8]
 163:main.c        ****             digital = dig.r1;
 206              		.loc 1 163 0
 207 00d8 4FF00208 		mov	r8, #2
 208              	.LVL33:
 209              	.L7:
 172:main.c        ****             
 173:main.c        ****         }
 174:main.c        ****          
 175:main.c        ****         // When the measured blackness value drops below the threshold, start the appropriate turni
 176:main.c        ****         if (digital == 1)
 210              		.loc 1 176 0
 211 00dc 012D     		cmp	r5, #1
 212 00de 40F0EA81 		bne	.L8
 213 00e2 0027     		movs	r7, #0
 214 00e4 00E0     		b	.L32
 215              	.LVL34:
 216              	.L45:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 8


 177:main.c        ****         { 
 178:main.c        **** 
 179:main.c        ****             // When the robot starts to veer off to the left or right, do a corrective turn in the 
 180:main.c        ****             do {
 181:main.c        ****                 
 182:main.c        ****                 // Obtain a second ref value (1 millisecond later).
 183:main.c        ****                 reflectance_read(&ref);
 184:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 185:main.c        ****                 
 186:main.c        ****                 // This if-härdelli is needed solely due to the way that structs work...
 187:main.c        ****                 if (dir_flag == 1) 
 188:main.c        ****                 {
 189:main.c        ****                     digital = dig.l1;
 190:main.c        ****                     blackness_2 = ref.l1;
 191:main.c        ****                 } else {
 192:main.c        ****                     digital = dig.r1;
 193:main.c        ****                     blackness_2 = ref.r1;
 194:main.c        ****                 }
 195:main.c        ****                                
 196:main.c        ****                 // Calculate the difference between the two values.
 197:main.c        ****                 blackDiff = blackness_1 - blackness_2;
 198:main.c        ****        
 199:main.c        ****                 // Behaviour changes based on the determined values of blackness_2 and blackDiff.
 200:main.c        ****                 // NOTE: diff_Fast = 500 at the moment.
 201:main.c        ****                 if (blackDiff <= -diff_Fast) { diffCase = 1; }
 202:main.c        ****                 else if (blackDiff > -diff_Fast && blackDiff < 0) { diffCase = 2; }            
 203:main.c        ****                 else if (blackDiff >= 0 && blackDiff < diff_Fast) { diffCase = 3; }
 204:main.c        ****                 else if (blackDiff >= diff_Fast) { diffCase = 4; }
 205:main.c        ****                 
 206:main.c        ****                 switch (diffCase)
 207:main.c        ****                 {
 208:main.c        ****                     case 1: // blackDiff <= -diff_Fast
 209:main.c        ****                     
 210:main.c        ****                         // moving fast towards center of line
 211:main.c        ****                         
 212:main.c        ****                         if (blackness_2 < near_BlackThreshold) 
 213:main.c        ****                         {
 214:main.c        ****                             turn = 1.2 * speed * ( (black_threshold - blackness_2) / black_threshol
 215:main.c        ****                             
 216:main.c        ****                         } else {
 217:main.c        ****                         
 218:main.c        ****                             turn = 0;
 219:main.c        ****                         }
 220:main.c        ****                               
 221:main.c        ****                         break;
 222:main.c        ****                     
 223:main.c        ****                     case 2: // -diff_Fast < blackDiff < 0
 224:main.c        ****                     
 225:main.c        ****                         // moving at a moderate speed towards center of line
 226:main.c        ****                     
 227:main.c        ****                         if (blackness_2 < near_BlackThreshold) 
 228:main.c        ****                         {
 229:main.c        ****                             turn = 1.2 * speed * ( (black_threshold - blackness_2) / black_threshol
 230:main.c        ****                             turn += 1.4 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 231:main.c        ****                             
 232:main.c        ****                         } else {
 233:main.c        ****                         
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 9


 234:main.c        ****                             turn = 1.1 * speed * ( (black_threshold - blackness_2) / black_threshol
 235:main.c        ****                             turn -= 1.1 * ( (blackDiff * blackDiff / maxDiff)); //subtracts from tu
 236:main.c        ****                         }
 237:main.c        ****                                                          
 238:main.c        ****                         break;
 239:main.c        ****                         
 240:main.c        ****                     case 3: // 0 <= blackDiff < diff_Fast
 241:main.c        ****                         
 242:main.c        ****                         // moving at a moderate speed away from center of line
 243:main.c        ****                         
 244:main.c        ****                         if (blackness_2 < near_BlackThreshold) 
 245:main.c        ****                         {
 246:main.c        ****                             turn = 1.3 * speed * ( (black_threshold - blackness_2) / black_threshol
 247:main.c        ****                             turn += 1.5 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 248:main.c        ****                             
 249:main.c        ****                         } else {
 250:main.c        ****                         
 251:main.c        ****                             turn = 1.2 * speed * ( (black_threshold - blackness_2) / black_threshol
 252:main.c        ****                             turn += 1.4 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 253:main.c        ****                         }
 254:main.c        ****                         
 255:main.c        ****                         break;   
 256:main.c        ****                         
 257:main.c        ****                     case 4: // blackDiff >= diff_Fast
 258:main.c        ****                         
 259:main.c        ****                         // moving at a fast speed away from center of line
 260:main.c        ****                     
 261:main.c        ****                         if (blackness_2 < near_BlackThreshold) 
 262:main.c        ****                         {
 263:main.c        ****                             turn = 1.5 * speed * ( (black_threshold - blackness_2) / black_threshol
 264:main.c        ****                             turn += 1.7 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 265:main.c        ****                             
 266:main.c        ****                         } else {
 267:main.c        ****                         
 268:main.c        ****                             turn = 1.4 * speed * ( (black_threshold - blackness_2) / black_threshol
 269:main.c        ****                             turn += 1.6 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 270:main.c        ****                         }
 271:main.c        ****                         
 272:main.c        ****                         break;
 273:main.c        ****                                                                   
 274:main.c        ****                         // possible case 5: blackDiff > 9000 (or some high value)
 275:main.c        ****                         // there can be an infinite number of cases for increasingly finer control.
 276:main.c        ****                 }
 277:main.c        ****                 
 278:main.c        ****                 // Check for egregious values of 'turn' and correct them if found.
 279:main.c        ****                 if (turn > 240)
 280:main.c        ****                 {
 281:main.c        ****                     turn = 240;
 282:main.c        ****                 } else if (turn < 0) {
 283:main.c        ****                     turn = 0;   
 284:main.c        ****                 }
 285:main.c        ****                                                           
 286:main.c        ****                 // Execute the turn (right turn if the left sensor activated, left turn if the righ
 287:main.c        ****                 if (dir_flag == 1) 
 288:main.c        ****                 {
 289:main.c        ****                     Right_turn(turn); } else {
 290:main.c        ****                     Left_turn(turn);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 10


 291:main.c        ****                 }
 292:main.c        ****                              
 293:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 294:main.c        ****                 // As the loop continues, blackness_2's value is stored in blackness_1 and then bla
 295:main.c        ****                 blackness_1 = blackness_2;
 217              		.loc 1 295 0
 218 00e6 009E     		ldr	r6, [sp]	@ float
 219              	.LVL35:
 220              	.L32:
 183:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 221              		.loc 1 183 0
 222 00e8 0AA8     		add	r0, sp, #40
 223 00ea FFF7FEFF 		bl	reflectance_read
 224              	.LVL36:
 184:main.c        ****                 
 225              		.loc 1 184 0
 226 00ee 08A8     		add	r0, sp, #32
 227 00f0 FFF7FEFF 		bl	reflectance_digital
 228              	.LVL37:
 187:main.c        ****                 {
 229              		.loc 1 187 0
 230 00f4 B8F1010F 		cmp	r8, #1
 231 00f8 07D1     		bne	.L9
 189:main.c        ****                     blackness_2 = ref.l1;
 232              		.loc 1 189 0
 233 00fa BDF82250 		ldrh	r5, [sp, #34]
 234              	.LVL38:
 190:main.c        ****                 } else {
 235              		.loc 1 190 0
 236 00fe BDF82A00 		ldrh	r0, [sp, #42]
 237 0102 FFF7FEFF 		bl	__aeabi_ui2f
 238              	.LVL39:
 239 0106 0090     		str	r0, [sp]	@ float
 240              	.LVL40:
 241 0108 06E0     		b	.L10
 242              	.LVL41:
 243              	.L9:
 192:main.c        ****                     blackness_2 = ref.r1;
 244              		.loc 1 192 0
 245 010a BDF82450 		ldrh	r5, [sp, #36]
 246              	.LVL42:
 193:main.c        ****                 }
 247              		.loc 1 193 0
 248 010e BDF82C00 		ldrh	r0, [sp, #44]
 249 0112 FFF7FEFF 		bl	__aeabi_ui2f
 250              	.LVL43:
 251 0116 0090     		str	r0, [sp]	@ float
 252              	.LVL44:
 253              	.L10:
 197:main.c        ****        
 254              		.loc 1 197 0
 255 0118 3046     		mov	r0, r6
 256 011a 0099     		ldr	r1, [sp]	@ float
 257 011c FFF7FEFF 		bl	__aeabi_fsub
 258              	.LVL45:
 259 0120 0646     		mov	r6, r0
 260              	.LVL46:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 11


 201:main.c        ****                 else if (blackDiff > -diff_Fast && blackDiff < 0) { diffCase = 2; }            
 261              		.loc 1 201 0
 262 0122 6749     		ldr	r1, .L58+24
 263 0124 FFF7FEFF 		bl	__aeabi_fcmple
 264              	.LVL47:
 265 0128 C8B9     		cbnz	r0, .L39
 202:main.c        ****                 else if (blackDiff >= 0 && blackDiff < diff_Fast) { diffCase = 3; }
 266              		.loc 1 202 0
 267 012a 3046     		mov	r0, r6
 268 012c 6449     		ldr	r1, .L58+24
 269 012e FFF7FEFF 		bl	__aeabi_fcmpgt
 270              	.LVL48:
 271 0132 20B1     		cbz	r0, .L12
 202:main.c        ****                 else if (blackDiff >= 0 && blackDiff < diff_Fast) { diffCase = 3; }
 272              		.loc 1 202 0 is_stmt 0 discriminator 1
 273 0134 3046     		mov	r0, r6
 274 0136 0021     		movs	r1, #0
 275 0138 FFF7FEFF 		bl	__aeabi_fcmplt
 276              	.LVL49:
 277 013c 90B9     		cbnz	r0, .L40
 278              	.L12:
 203:main.c        ****                 else if (blackDiff >= diff_Fast) { diffCase = 4; }
 279              		.loc 1 203 0 is_stmt 1
 280 013e 3046     		mov	r0, r6
 281 0140 0021     		movs	r1, #0
 282 0142 FFF7FEFF 		bl	__aeabi_fcmpge
 283              	.LVL50:
 284 0146 20B1     		cbz	r0, .L14
 203:main.c        ****                 else if (blackDiff >= diff_Fast) { diffCase = 4; }
 285              		.loc 1 203 0 is_stmt 0 discriminator 1
 286 0148 3046     		mov	r0, r6
 287 014a 5E49     		ldr	r1, .L58+28
 288 014c FFF7FEFF 		bl	__aeabi_fcmplt
 289              	.LVL51:
 290 0150 58B9     		cbnz	r0, .L41
 291              	.L14:
 204:main.c        ****                 
 292              		.loc 1 204 0 is_stmt 1
 293 0152 3046     		mov	r0, r6
 294 0154 5B49     		ldr	r1, .L58+28
 295 0156 FFF7FEFF 		bl	__aeabi_fcmpge
 296              	.LVL52:
 297 015a 48B9     		cbnz	r0, .L42
 298 015c 0AE0     		b	.L11
 299              	.L39:
 201:main.c        ****                 else if (blackDiff > -diff_Fast && blackDiff < 0) { diffCase = 2; }            
 300              		.loc 1 201 0
 301 015e 4FF00109 		mov	r9, #1
 302              	.LVL53:
 303 0162 07E0     		b	.L11
 304              	.LVL54:
 305              	.L40:
 202:main.c        ****                 else if (blackDiff >= 0 && blackDiff < diff_Fast) { diffCase = 3; }
 306              		.loc 1 202 0
 307 0164 4FF00209 		mov	r9, #2
 308              	.LVL55:
 309 0168 04E0     		b	.L11
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 12


 310              	.LVL56:
 311              	.L41:
 203:main.c        ****                 else if (blackDiff >= diff_Fast) { diffCase = 4; }
 312              		.loc 1 203 0
 313 016a 4FF00309 		mov	r9, #3
 314              	.LVL57:
 315 016e 01E0     		b	.L11
 316              	.LVL58:
 317              	.L42:
 204:main.c        ****                 
 318              		.loc 1 204 0
 319 0170 4FF00409 		mov	r9, #4
 320              	.LVL59:
 321              	.L11:
 206:main.c        ****                 {
 322              		.loc 1 206 0
 323 0174 09F1FF33 		add	r3, r9, #-1
 324 0178 032B     		cmp	r3, #3
 325 017a 00F28581 		bhi	.L16
 326 017e DFE813F0 		tbh	[pc, r3, lsl #1]
 327              	.L18:
 328 0182 0400     		.2byte	(.L17-.L18)/2
 329 0184 2100     		.2byte	(.L19-.L18)/2
 330 0186 A700     		.2byte	(.L20-.L18)/2
 331 0188 1401     		.2byte	(.L21-.L18)/2
 332              		.p2align 1
 333              	.L17:
 212:main.c        ****                         {
 334              		.loc 1 212 0
 335 018a 0398     		ldr	r0, [sp, #12]
 336 018c FFF7FEFF 		bl	__aeabi_i2f
 337              	.LVL60:
 338 0190 0099     		ldr	r1, [sp]	@ float
 339 0192 FFF7FEFF 		bl	__aeabi_fcmpgt
 340              	.LVL61:
 341 0196 0028     		cmp	r0, #0
 342 0198 00F07581 		beq	.L53
 214:main.c        ****                             
 343              		.loc 1 214 0
 344 019c 0198     		ldr	r0, [sp, #4]
 345 019e FFF7FEFF 		bl	__aeabi_i2f
 346              	.LVL62:
 347 01a2 0646     		mov	r6, r0
 348              	.LVL63:
 349 01a4 0099     		ldr	r1, [sp]	@ float
 350 01a6 FFF7FEFF 		bl	__aeabi_fsub
 351              	.LVL64:
 352 01aa 3146     		mov	r1, r6
 353 01ac FFF7FEFF 		bl	__aeabi_fdiv
 354              	.LVL65:
 355 01b0 FFF7FEFF 		bl	__aeabi_f2d
 356              	.LVL66:
 357 01b4 0022     		movs	r2, #0
 358 01b6 444B     		ldr	r3, .L58+32
 359 01b8 FFF7FEFF 		bl	__aeabi_dmul
 360              	.LVL67:
 361 01bc FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 13


 362              	.LVL68:
 363 01c0 C7B2     		uxtb	r7, r0
 364              	.LVL69:
 365 01c2 61E1     		b	.L16
 366              	.LVL70:
 367              	.L19:
 227:main.c        ****                         {
 368              		.loc 1 227 0
 369 01c4 0398     		ldr	r0, [sp, #12]
 370 01c6 FFF7FEFF 		bl	__aeabi_i2f
 371              	.LVL71:
 372 01ca 0099     		ldr	r1, [sp]	@ float
 373 01cc FFF7FEFF 		bl	__aeabi_fcmpgt
 374              	.LVL72:
 375 01d0 0028     		cmp	r0, #0
 376 01d2 33D0     		beq	.L54
 229:main.c        ****                             turn += 1.4 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 377              		.loc 1 229 0
 378 01d4 0198     		ldr	r0, [sp, #4]
 379 01d6 FFF7FEFF 		bl	__aeabi_i2f
 380              	.LVL73:
 381 01da 0746     		mov	r7, r0
 382              	.LVL74:
 383 01dc 0099     		ldr	r1, [sp]	@ float
 384 01de FFF7FEFF 		bl	__aeabi_fsub
 385              	.LVL75:
 386 01e2 3946     		mov	r1, r7
 387 01e4 FFF7FEFF 		bl	__aeabi_fdiv
 388              	.LVL76:
 389 01e8 FFF7FEFF 		bl	__aeabi_f2d
 390              	.LVL77:
 391 01ec 0022     		movs	r2, #0
 392 01ee 364B     		ldr	r3, .L58+32
 393 01f0 FFF7FEFF 		bl	__aeabi_dmul
 394              	.LVL78:
 395 01f4 FFF7FEFF 		bl	__aeabi_d2uiz
 396              	.LVL79:
 397 01f8 5FFA80FA 		uxtb	r10, r0
 398              	.LVL80:
 230:main.c        ****                             
 399              		.loc 1 230 0
 400 01fc 3046     		mov	r0, r6
 401 01fe 3146     		mov	r1, r6
 402 0200 FFF7FEFF 		bl	__aeabi_fmul
 403              	.LVL81:
 404 0204 0646     		mov	r6, r0
 405              	.LVL82:
 406 0206 0298     		ldr	r0, [sp, #8]
 407 0208 FFF7FEFF 		bl	__aeabi_i2f
 408              	.LVL83:
 409 020c 0146     		mov	r1, r0
 410 020e 3046     		mov	r0, r6
 411 0210 FFF7FEFF 		bl	__aeabi_fdiv
 412              	.LVL84:
 413 0214 FFF7FEFF 		bl	__aeabi_f2d
 414              	.LVL85:
 415 0218 23A3     		adr	r3, .L58
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 14


 416 021a D3E90023 		ldrd	r2, [r3]
 417 021e FFF7FEFF 		bl	__aeabi_dmul
 418              	.LVL86:
 419 0222 0646     		mov	r6, r0
 420 0224 0F46     		mov	r7, r1
 421 0226 5046     		mov	r0, r10
 422 0228 FFF7FEFF 		bl	__aeabi_i2d
 423              	.LVL87:
 424 022c 3246     		mov	r2, r6
 425 022e 3B46     		mov	r3, r7
 426 0230 FFF7FEFF 		bl	__aeabi_dadd
 427              	.LVL88:
 428 0234 FFF7FEFF 		bl	__aeabi_d2uiz
 429              	.LVL89:
 430 0238 C7B2     		uxtb	r7, r0
 431              	.LVL90:
 432 023a 25E1     		b	.L16
 433              	.LVL91:
 434              	.L54:
 234:main.c        ****                             turn -= 1.1 * ( (blackDiff * blackDiff / maxDiff)); //subtracts from tu
 435              		.loc 1 234 0
 436 023c 0198     		ldr	r0, [sp, #4]
 437 023e FFF7FEFF 		bl	__aeabi_i2f
 438              	.LVL92:
 439 0242 0746     		mov	r7, r0
 440              	.LVL93:
 441 0244 0099     		ldr	r1, [sp]	@ float
 442 0246 FFF7FEFF 		bl	__aeabi_fsub
 443              	.LVL94:
 444 024a 3946     		mov	r1, r7
 445 024c FFF7FEFF 		bl	__aeabi_fdiv
 446              	.LVL95:
 447 0250 FFF7FEFF 		bl	__aeabi_f2d
 448              	.LVL96:
 449 0254 0022     		movs	r2, #0
 450 0256 1D4B     		ldr	r3, .L58+36
 451 0258 FFF7FEFF 		bl	__aeabi_dmul
 452              	.LVL97:
 453 025c FFF7FEFF 		bl	__aeabi_d2uiz
 454              	.LVL98:
 455 0260 5FFA80FA 		uxtb	r10, r0
 456              	.LVL99:
 235:main.c        ****                         }
 457              		.loc 1 235 0
 458 0264 3046     		mov	r0, r6
 459 0266 3146     		mov	r1, r6
 460 0268 FFF7FEFF 		bl	__aeabi_fmul
 461              	.LVL100:
 462 026c 0646     		mov	r6, r0
 463              	.LVL101:
 464 026e 0298     		ldr	r0, [sp, #8]
 465 0270 FFF7FEFF 		bl	__aeabi_i2f
 466              	.LVL102:
 467 0274 0146     		mov	r1, r0
 468 0276 3046     		mov	r0, r6
 469 0278 FFF7FEFF 		bl	__aeabi_fdiv
 470              	.LVL103:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 15


 471 027c FFF7FEFF 		bl	__aeabi_f2d
 472              	.LVL104:
 473 0280 0BA3     		adr	r3, .L58+8
 474 0282 D3E90023 		ldrd	r2, [r3]
 475 0286 FFF7FEFF 		bl	__aeabi_dmul
 476              	.LVL105:
 477 028a 0646     		mov	r6, r0
 478 028c 0F46     		mov	r7, r1
 479 028e 5046     		mov	r0, r10
 480 0290 FFF7FEFF 		bl	__aeabi_i2d
 481              	.LVL106:
 482 0294 3246     		mov	r2, r6
 483 0296 3B46     		mov	r3, r7
 484 0298 FFF7FEFF 		bl	__aeabi_dsub
 485              	.LVL107:
 486 029c FFF7FEFF 		bl	__aeabi_d2uiz
 487              	.LVL108:
 488 02a0 C7B2     		uxtb	r7, r0
 489              	.LVL109:
 490 02a2 F1E0     		b	.L16
 491              	.L59:
 492 02a4 AFF30080 		.align	3
 493              	.L58:
 494 02a8 66666666 		.word	1717986918
 495 02ac 6666F63F 		.word	1073112678
 496 02b0 9A999999 		.word	-1717986918
 497 02b4 9999F13F 		.word	1072798105
 498 02b8 00000000 		.word	sensor_isr_handler
 499 02bc 007EBB46 		.word	1186692608
 500 02c0 0000FAC3 		.word	-1007026176
 501 02c4 0000FA43 		.word	1140457472
 502 02c8 00007240 		.word	1081212928
 503 02cc 00807040 		.word	1081114624
 504              	.LVL110:
 505              	.L20:
 244:main.c        ****                         {
 506              		.loc 1 244 0
 507 02d0 0398     		ldr	r0, [sp, #12]
 508 02d2 FFF7FEFF 		bl	__aeabi_i2f
 509              	.LVL111:
 510 02d6 0099     		ldr	r1, [sp]	@ float
 511 02d8 FFF7FEFF 		bl	__aeabi_fcmpgt
 512              	.LVL112:
 513 02dc 0028     		cmp	r0, #0
 514 02de 31D0     		beq	.L55
 246:main.c        ****                             turn += 1.5 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 515              		.loc 1 246 0
 516 02e0 0198     		ldr	r0, [sp, #4]
 517 02e2 FFF7FEFF 		bl	__aeabi_i2f
 518              	.LVL113:
 519 02e6 0746     		mov	r7, r0
 520              	.LVL114:
 521 02e8 0099     		ldr	r1, [sp]	@ float
 522 02ea FFF7FEFF 		bl	__aeabi_fsub
 523              	.LVL115:
 524 02ee 3946     		mov	r1, r7
 525 02f0 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 16


 526              	.LVL116:
 527 02f4 FFF7FEFF 		bl	__aeabi_f2d
 528              	.LVL117:
 529 02f8 0022     		movs	r2, #0
 530 02fa 8D4B     		ldr	r3, .L60+24
 531 02fc FFF7FEFF 		bl	__aeabi_dmul
 532              	.LVL118:
 533 0300 FFF7FEFF 		bl	__aeabi_d2uiz
 534              	.LVL119:
 535 0304 C7B2     		uxtb	r7, r0
 536              	.LVL120:
 247:main.c        ****                             
 537              		.loc 1 247 0
 538 0306 3046     		mov	r0, r6
 539 0308 3146     		mov	r1, r6
 540 030a FFF7FEFF 		bl	__aeabi_fmul
 541              	.LVL121:
 542 030e 0646     		mov	r6, r0
 543              	.LVL122:
 544 0310 0298     		ldr	r0, [sp, #8]
 545 0312 FFF7FEFF 		bl	__aeabi_i2f
 546              	.LVL123:
 547 0316 0146     		mov	r1, r0
 548 0318 3046     		mov	r0, r6
 549 031a FFF7FEFF 		bl	__aeabi_fdiv
 550              	.LVL124:
 551 031e FFF7FEFF 		bl	__aeabi_f2d
 552              	.LVL125:
 553 0322 0022     		movs	r2, #0
 554 0324 834B     		ldr	r3, .L60+28
 555 0326 FFF7FEFF 		bl	__aeabi_dmul
 556              	.LVL126:
 557 032a CDE90601 		strd	r0, [sp, #24]
 558 032e 3846     		mov	r0, r7
 559 0330 FFF7FEFF 		bl	__aeabi_i2d
 560              	.LVL127:
 561 0334 DDE90623 		ldrd	r2, [sp, #24]
 562 0338 FFF7FEFF 		bl	__aeabi_dadd
 563              	.LVL128:
 564 033c FFF7FEFF 		bl	__aeabi_d2uiz
 565              	.LVL129:
 566 0340 C7B2     		uxtb	r7, r0
 567              	.LVL130:
 568 0342 A1E0     		b	.L16
 569              	.LVL131:
 570              	.L55:
 251:main.c        ****                             turn += 1.4 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 571              		.loc 1 251 0
 572 0344 0198     		ldr	r0, [sp, #4]
 573 0346 FFF7FEFF 		bl	__aeabi_i2f
 574              	.LVL132:
 575 034a 0746     		mov	r7, r0
 576              	.LVL133:
 577 034c 0099     		ldr	r1, [sp]	@ float
 578 034e FFF7FEFF 		bl	__aeabi_fsub
 579              	.LVL134:
 580 0352 3946     		mov	r1, r7
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 17


 581 0354 FFF7FEFF 		bl	__aeabi_fdiv
 582              	.LVL135:
 583 0358 FFF7FEFF 		bl	__aeabi_f2d
 584              	.LVL136:
 585 035c 0022     		movs	r2, #0
 586 035e 764B     		ldr	r3, .L60+32
 587 0360 FFF7FEFF 		bl	__aeabi_dmul
 588              	.LVL137:
 589 0364 FFF7FEFF 		bl	__aeabi_d2uiz
 590              	.LVL138:
 591 0368 C7B2     		uxtb	r7, r0
 592              	.LVL139:
 252:main.c        ****                         }
 593              		.loc 1 252 0
 594 036a 3046     		mov	r0, r6
 595 036c 3146     		mov	r1, r6
 596 036e FFF7FEFF 		bl	__aeabi_fmul
 597              	.LVL140:
 598 0372 0646     		mov	r6, r0
 599              	.LVL141:
 600 0374 0298     		ldr	r0, [sp, #8]
 601 0376 FFF7FEFF 		bl	__aeabi_i2f
 602              	.LVL142:
 603 037a 0146     		mov	r1, r0
 604 037c 3046     		mov	r0, r6
 605 037e FFF7FEFF 		bl	__aeabi_fdiv
 606              	.LVL143:
 607 0382 FFF7FEFF 		bl	__aeabi_f2d
 608              	.LVL144:
 609 0386 64A3     		adr	r3, .L60
 610 0388 D3E90023 		ldrd	r2, [r3]
 611 038c FFF7FEFF 		bl	__aeabi_dmul
 612              	.LVL145:
 613 0390 CDE90601 		strd	r0, [sp, #24]
 614 0394 3846     		mov	r0, r7
 615 0396 FFF7FEFF 		bl	__aeabi_i2d
 616              	.LVL146:
 617 039a DDE90623 		ldrd	r2, [sp, #24]
 618 039e FFF7FEFF 		bl	__aeabi_dadd
 619              	.LVL147:
 620 03a2 FFF7FEFF 		bl	__aeabi_d2uiz
 621              	.LVL148:
 622 03a6 C7B2     		uxtb	r7, r0
 623              	.LVL149:
 624 03a8 6EE0     		b	.L16
 625              	.LVL150:
 626              	.L21:
 261:main.c        ****                         {
 627              		.loc 1 261 0
 628 03aa 0398     		ldr	r0, [sp, #12]
 629 03ac FFF7FEFF 		bl	__aeabi_i2f
 630              	.LVL151:
 631 03b0 0099     		ldr	r1, [sp]	@ float
 632 03b2 FFF7FEFF 		bl	__aeabi_fcmpgt
 633              	.LVL152:
 634 03b6 0028     		cmp	r0, #0
 635 03b8 32D0     		beq	.L56
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 18


 263:main.c        ****                             turn += 1.7 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 636              		.loc 1 263 0
 637 03ba 0198     		ldr	r0, [sp, #4]
 638 03bc FFF7FEFF 		bl	__aeabi_i2f
 639              	.LVL153:
 640 03c0 0746     		mov	r7, r0
 641              	.LVL154:
 642 03c2 0099     		ldr	r1, [sp]	@ float
 643 03c4 FFF7FEFF 		bl	__aeabi_fsub
 644              	.LVL155:
 645 03c8 3946     		mov	r1, r7
 646 03ca FFF7FEFF 		bl	__aeabi_fdiv
 647              	.LVL156:
 648 03ce FFF7FEFF 		bl	__aeabi_f2d
 649              	.LVL157:
 650 03d2 0022     		movs	r2, #0
 651 03d4 594B     		ldr	r3, .L60+36
 652 03d6 FFF7FEFF 		bl	__aeabi_dmul
 653              	.LVL158:
 654 03da FFF7FEFF 		bl	__aeabi_d2uiz
 655              	.LVL159:
 656 03de C7B2     		uxtb	r7, r0
 657              	.LVL160:
 264:main.c        ****                             
 658              		.loc 1 264 0
 659 03e0 3046     		mov	r0, r6
 660 03e2 3146     		mov	r1, r6
 661 03e4 FFF7FEFF 		bl	__aeabi_fmul
 662              	.LVL161:
 663 03e8 0646     		mov	r6, r0
 664              	.LVL162:
 665 03ea 0298     		ldr	r0, [sp, #8]
 666 03ec FFF7FEFF 		bl	__aeabi_i2f
 667              	.LVL163:
 668 03f0 0146     		mov	r1, r0
 669 03f2 3046     		mov	r0, r6
 670 03f4 FFF7FEFF 		bl	__aeabi_fdiv
 671              	.LVL164:
 672 03f8 FFF7FEFF 		bl	__aeabi_f2d
 673              	.LVL165:
 674 03fc 48A3     		adr	r3, .L60+8
 675 03fe D3E90023 		ldrd	r2, [r3]
 676 0402 FFF7FEFF 		bl	__aeabi_dmul
 677              	.LVL166:
 678 0406 CDE90601 		strd	r0, [sp, #24]
 679 040a 3846     		mov	r0, r7
 680 040c FFF7FEFF 		bl	__aeabi_i2d
 681              	.LVL167:
 682 0410 DDE90623 		ldrd	r2, [sp, #24]
 683 0414 FFF7FEFF 		bl	__aeabi_dadd
 684              	.LVL168:
 685 0418 FFF7FEFF 		bl	__aeabi_d2uiz
 686              	.LVL169:
 687 041c C7B2     		uxtb	r7, r0
 688              	.LVL170:
 689 041e 33E0     		b	.L16
 690              	.LVL171:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 19


 691              	.L56:
 268:main.c        ****                             turn += 1.6 * ( (blackDiff * blackDiff / maxDiff)); // adds to turn
 692              		.loc 1 268 0
 693 0420 0198     		ldr	r0, [sp, #4]
 694 0422 FFF7FEFF 		bl	__aeabi_i2f
 695              	.LVL172:
 696 0426 0746     		mov	r7, r0
 697              	.LVL173:
 698 0428 0099     		ldr	r1, [sp]	@ float
 699 042a FFF7FEFF 		bl	__aeabi_fsub
 700              	.LVL174:
 701 042e 3946     		mov	r1, r7
 702 0430 FFF7FEFF 		bl	__aeabi_fdiv
 703              	.LVL175:
 704 0434 FFF7FEFF 		bl	__aeabi_f2d
 705              	.LVL176:
 706 0438 0022     		movs	r2, #0
 707 043a 414B     		ldr	r3, .L60+40
 708 043c FFF7FEFF 		bl	__aeabi_dmul
 709              	.LVL177:
 710 0440 FFF7FEFF 		bl	__aeabi_d2uiz
 711              	.LVL178:
 712 0444 C7B2     		uxtb	r7, r0
 713              	.LVL179:
 269:main.c        ****                         }
 714              		.loc 1 269 0
 715 0446 3046     		mov	r0, r6
 716 0448 3146     		mov	r1, r6
 717 044a FFF7FEFF 		bl	__aeabi_fmul
 718              	.LVL180:
 719 044e 0646     		mov	r6, r0
 720              	.LVL181:
 721 0450 0298     		ldr	r0, [sp, #8]
 722 0452 FFF7FEFF 		bl	__aeabi_i2f
 723              	.LVL182:
 724 0456 0146     		mov	r1, r0
 725 0458 3046     		mov	r0, r6
 726 045a FFF7FEFF 		bl	__aeabi_fdiv
 727              	.LVL183:
 728 045e FFF7FEFF 		bl	__aeabi_f2d
 729              	.LVL184:
 730 0462 31A3     		adr	r3, .L60+16
 731 0464 D3E90023 		ldrd	r2, [r3]
 732 0468 FFF7FEFF 		bl	__aeabi_dmul
 733              	.LVL185:
 734 046c CDE90601 		strd	r0, [sp, #24]
 735 0470 3846     		mov	r0, r7
 736 0472 FFF7FEFF 		bl	__aeabi_i2d
 737              	.LVL186:
 738 0476 DDE90623 		ldrd	r2, [sp, #24]
 739 047a FFF7FEFF 		bl	__aeabi_dadd
 740              	.LVL187:
 741 047e FFF7FEFF 		bl	__aeabi_d2uiz
 742              	.LVL188:
 743 0482 C7B2     		uxtb	r7, r0
 744              	.LVL189:
 745 0484 00E0     		b	.L16
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 20


 746              	.LVL190:
 747              	.L53:
 218:main.c        ****                         }
 748              		.loc 1 218 0
 749 0486 0027     		movs	r7, #0
 750              	.LVL191:
 751              	.L16:
 279:main.c        ****                 {
 752              		.loc 1 279 0
 753 0488 F02F     		cmp	r7, #240
 754 048a 00D9     		bls	.L29
 281:main.c        ****                 } else if (turn < 0) {
 755              		.loc 1 281 0
 756 048c F027     		movs	r7, #240
 757              	.LVL192:
 758              	.L29:
 287:main.c        ****                 {
 759              		.loc 1 287 0
 760 048e B8F1010F 		cmp	r8, #1
 761 0492 03D1     		bne	.L30
 289:main.c        ****                     Left_turn(turn);
 762              		.loc 1 289 0
 763 0494 3846     		mov	r0, r7
 764 0496 FFF7FEFF 		bl	Right_turn
 765              	.LVL193:
 766 049a 02E0     		b	.L31
 767              	.L30:
 290:main.c        ****                 }
 768              		.loc 1 290 0
 769 049c 3846     		mov	r0, r7
 770 049e FFF7FEFF 		bl	Left_turn
 771              	.LVL194:
 772              	.L31:
 296:main.c        ****                 
 297:main.c        ****                 CyDelay(1);
 773              		.loc 1 297 0
 774 04a2 0120     		movs	r0, #1
 775 04a4 FFF7FEFF 		bl	CyDelay
 776              	.LVL195:
 298:main.c        ****                          
 299:main.c        ****             } while (digital == 1);
 777              		.loc 1 299 0
 778 04a8 012D     		cmp	r5, #1
 779 04aa 3FF41CAE 		beq	.L45
 780              	.LVL196:
 300:main.c        ****                                     
 301:main.c        ****             // After each executed turn, do a small 'corrective twitch' in the opposite direction
 302:main.c        ****             //Left_turn(speed/2); // experimental value
 303:main.c        ****             //CyDelay(10); // experimental value
 304:main.c        ****           
 305:main.c        ****             // For added safety, set turn to zero... May not be necessary.
 306:main.c        ****             turn = 0;
 307:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 308:main.c        ****             Custom_forward(speed);
 781              		.loc 1 308 0
 782 04ae F020     		movs	r0, #240
 783 04b0 FFF7FEFF 		bl	Custom_forward
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 21


 784              	.LVL197:
 295:main.c        ****                 
 785              		.loc 1 295 0
 786 04b4 009E     		ldr	r6, [sp]	@ float
 787              	.LVL198:
 788              	.L8:
 309:main.c        ****                                           
 310:main.c        ****         } 
 311:main.c        ****         
 312:main.c        ****         //First let's put line recognition logic here. It may be necessary to have line regocnition
 313:main.c        ****         if (dig.l3 == 0 && dig.r3 == 0){
 789              		.loc 1 313 0
 790 04b6 BDF82030 		ldrh	r3, [sp, #32]
 791 04ba 23B9     		cbnz	r3, .L33
 792              		.loc 1 313 0 is_stmt 0 discriminator 1
 793 04bc BDF82620 		ldrh	r2, [sp, #38]
 794 04c0 0AB9     		cbnz	r2, .L33
 314:main.c        ****             inBlack = 1;
 795              		.loc 1 314 0 is_stmt 1
 796 04c2 0122     		movs	r2, #1
 797 04c4 0492     		str	r2, [sp, #16]
 798              	.LVL199:
 799              	.L33:
 315:main.c        ****         }
 316:main.c        ****         
 317:main.c        ****         if (inBlack == 1 && dig.r3 == 1 && dig.l3 == 1){
 800              		.loc 1 317 0
 801 04c6 049A     		ldr	r2, [sp, #16]
 802 04c8 42B1     		cbz	r2, .L34
 803              		.loc 1 317 0 is_stmt 0 discriminator 1
 804 04ca BDF82620 		ldrh	r2, [sp, #38]
 805 04ce 012A     		cmp	r2, #1
 806 04d0 04D1     		bne	.L34
 807              		.loc 1 317 0 discriminator 2
 808 04d2 012B     		cmp	r3, #1
 809 04d4 02D1     		bne	.L34
 318:main.c        ****             ++countLines;
 810              		.loc 1 318 0 is_stmt 1
 811 04d6 0134     		adds	r4, r4, #1
 812              	.LVL200:
 319:main.c        ****             inBlack = 0;
 813              		.loc 1 319 0
 814 04d8 0022     		movs	r2, #0
 815 04da 0492     		str	r2, [sp, #16]
 816              	.LVL201:
 817              	.L34:
 320:main.c        ****         }
 321:main.c        ****         
 322:main.c        ****         //this must change (2=>1), when added moving to starting-line logic.
 323:main.c        ****         if (countLines == 2 && dig.r3 == 0 && dig.l3 == 0){
 818              		.loc 1 323 0
 819 04dc 022C     		cmp	r4, #2
 820 04de 09D1     		bne	.L35
 821              		.loc 1 323 0 is_stmt 0 discriminator 1
 822 04e0 BDF82620 		ldrh	r2, [sp, #38]
 823 04e4 32B9     		cbnz	r2, .L35
 824              		.loc 1 323 0 discriminator 2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 22


 825 04e6 2BB9     		cbnz	r3, .L35
 324:main.c        ****             motor_forward(0,0);
 826              		.loc 1 324 0 is_stmt 1
 827 04e8 0020     		movs	r0, #0
 828 04ea 0146     		mov	r1, r0
 829 04ec FFF7FEFF 		bl	motor_forward
 830              	.LVL202:
 325:main.c        ****             exitMainLoop = 1;
 831              		.loc 1 325 0
 832 04f0 0123     		movs	r3, #1
 833 04f2 0593     		str	r3, [sp, #20]
 834              	.LVL203:
 835              	.L35:
 326:main.c        ****         }        
 327:main.c        ****                                             
 328:main.c        ****         // For measuring the battery voltage at regular intervals. 
 329:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 330:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 331:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 332:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 333:main.c        ****         cycles++;
 836              		.loc 1 333 0
 837 04f4 0BF1010B 		add	fp, fp, #1
 838              	.LVL204:
 334:main.c        ****         if (cycles >= 80000)
 839              		.loc 1 334 0
 840 04f8 124B     		ldr	r3, .L60+44
 841 04fa 9B45     		cmp	fp, r3
 842 04fc 03DD     		ble	.L36
 335:main.c        ****         {
 336:main.c        ****             Measure_Voltage();
 843              		.loc 1 336 0
 844 04fe FFF7FEFF 		bl	Measure_Voltage
 845              	.LVL205:
 337:main.c        ****             cycles = 0;
 846              		.loc 1 337 0
 847 0502 4FF0000B 		mov	fp, #0
 848              	.LVL206:
 849              	.L36:
 338:main.c        ****         }
 339:main.c        ****         
 340:main.c        ****         CyDelay(1);   
 850              		.loc 1 340 0
 851 0506 0120     		movs	r0, #1
 852 0508 FFF7FEFF 		bl	CyDelay
 853              	.LVL207:
 854              	.L5:
 134:main.c        ****     {    
 855              		.loc 1 134 0
 856 050c 059B     		ldr	r3, [sp, #20]
 857 050e 002B     		cmp	r3, #0
 858 0510 3FF4B3AD 		beq	.L37
 859              	.L38:
 341:main.c        ****     }  
 342:main.c        ****     
 343:main.c        ****     //empty loop to end with
 344:main.c        ****     while(1) {}
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 23


 860              		.loc 1 344 0 discriminator 1
 861 0514 FEE7     		b	.L38
 862              	.L61:
 863 0516 00BF     		.align	3
 864              	.L60:
 865 0518 66666666 		.word	1717986918
 866 051c 6666F63F 		.word	1073112678
 867 0520 33333333 		.word	858993459
 868 0524 3333FB3F 		.word	1073427251
 869 0528 9A999999 		.word	-1717986918
 870 052c 9999F93F 		.word	1073322393
 871 0530 00807340 		.word	1081311232
 872 0534 0000F83F 		.word	1073217536
 873 0538 00007240 		.word	1081212928
 874 053c 00807640 		.word	1081507840
 875 0540 00007540 		.word	1081409536
 876 0544 7F380100 		.word	79999
 877              		.cfi_endproc
 878              	.LFE63:
 879              		.size	main, .-main
 880              		.section	.text._write,"ax",%progbits
 881              		.align	2
 882              		.global	_write
 883              		.thumb
 884              		.thumb_func
 885              		.type	_write, %function
 886              	_write:
 887              	.LFB64:
 345:main.c        **** }
 346:main.c        ****     
 347:main.c        ****     
 348:main.c        ****     
 349:main.c        ****         // Old comment on the turn logic... Still holds for the most part. There's no room for it i
 350:main.c        ****         // anymore, so I'm putting it down here for the moment:
 351:main.c        ****         
 352:main.c        ****         // Determine the correct turn amount (240 is max turn, 0 is no turn).
 353:main.c        ****         
 354:main.c        ****         // The larger the measured blackness value, the smaller the base turn amount, and vice vers
 355:main.c        ****         // value equals the blackness threshold, base turn amount = 0 (i.e. the robot goes straight
 356:main.c        ****         // The base turn amount is further modified by the rate of blackness change multiplied by a
 357:main.c        ****         // (now using square of diff).
 358:main.c        ****         // The more rapid the change of values (i.e. the difference between two measurements), the 
 359:main.c        ****         // becomes, thus leading to a steeper turn. 
 360:main.c        ****         // Finally, > 240 and < 0 checks were added to pre-empt any potential issues with invalid t
 361:main.c        ****         
 362:main.c        ****         // Calibrated base turn amount with the black_threshold; when blackness2_left = 17 500, tur
 363:main.c        ****         // With 10 000 blackness value, base turn amount = 144.
 364:main.c        ****         // With 15 000 blackness, base turn amount = 48.
 365:main.c        ****         // By adding a multiplying constant, the base turn amount can be raised and the turns tight
 366:main.c        ****         // NOTE: Due to the physical differences between the sensors, 'balancing' the values of tur
 367:main.c        ****         // the left and right sides may well be a 'false friend'!
 368:main.c        **** 
 369:main.c        **** // ================================================================================================
 370:main.c        **** // ================================================================================================
 371:main.c        **** 
 372:main.c        **** 
 373:main.c        **** //*/
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 24


 374:main.c        **** 
 375:main.c        **** /*//ultra sonic sensor//
 376:main.c        **** int main()
 377:main.c        **** {
 378:main.c        ****     CyGlobalIntEnable; 
 379:main.c        ****     UART_1_Start();
 380:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 381:main.c        ****     while(1) {
 382:main.c        ****         //If you want to print out the value  
 383:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 384:main.c        ****         CyDelay(1000);
 385:main.c        ****     }
 386:main.c        **** }   
 387:main.c        **** //*/
 388:main.c        **** 
 389:main.c        **** 
 390:main.c        **** /*//nunchuk//
 391:main.c        **** int main()
 392:main.c        **** {
 393:main.c        ****     CyGlobalIntEnable; 
 394:main.c        ****     UART_1_Start();
 395:main.c        ****   
 396:main.c        ****     nunchuk_start();
 397:main.c        ****     nunchuk_init();
 398:main.c        ****     
 399:main.c        ****     for(;;)
 400:main.c        ****     {    
 401:main.c        ****         nunchuk_read();
 402:main.c        ****     }
 403:main.c        **** }   
 404:main.c        **** //*/
 405:main.c        **** 
 406:main.c        **** 
 407:main.c        **** /*//IR receiver//
 408:main.c        **** int main()
 409:main.c        **** {
 410:main.c        ****     CyGlobalIntEnable; 
 411:main.c        ****     UART_1_Start();
 412:main.c        ****     
 413:main.c        ****     unsigned int IR_val; 
 414:main.c        ****     
 415:main.c        ****     for(;;)
 416:main.c        ****     {
 417:main.c        ****        IR_val = get_IR();
 418:main.c        ****        printf("%x\r\n\n",IR_val);
 419:main.c        ****     }    
 420:main.c        ****  }   
 421:main.c        **** //*/
 422:main.c        **** 
 423:main.c        **** 
 424:main.c        **** /*//Ambient light sensor//
 425:main.c        **** int main()
 426:main.c        **** {
 427:main.c        ****     CyGlobalIntEnable; 
 428:main.c        ****     UART_1_Start();
 429:main.c        ****     
 430:main.c        ****     I2C_Start();
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 25


 431:main.c        ****     
 432:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 433:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 434:main.c        ****     
 435:main.c        ****     for(;;)
 436:main.c        ****     {    
 437:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 438:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 439:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 440:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 441:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 442:main.c        ****         
 443:main.c        ****         uint8 CH0, CH1;
 444:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 445:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 446:main.c        **** 
 447:main.c        ****         double Ch0 = CH0;
 448:main.c        ****         double Ch1 = CH1;
 449:main.c        ****         
 450:main.c        ****         double data = 0;
 451:main.c        ****         data = getLux(Ch0,Ch1);
 452:main.c        ****         
 453:main.c        ****         // If you want to print out data
 454:main.c        ****         //printf("%lf\r\n",data);    
 455:main.c        ****     }    
 456:main.c        ****  }   
 457:main.c        **** //*/
 458:main.c        **** 
 459:main.c        **** 
 460:main.c        **** /*//accelerometer//
 461:main.c        **** int main()
 462:main.c        **** {
 463:main.c        ****     CyGlobalIntEnable; 
 464:main.c        ****     UART_1_Start();
 465:main.c        ****   
 466:main.c        ****     I2C_Start();
 467:main.c        ****   
 468:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 469:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 470:main.c        ****     
 471:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 472:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 473:main.c        ****     
 474:main.c        ****     
 475:main.c        ****     for(;;)
 476:main.c        ****     {
 477:main.c        ****         //print out accelerometer output
 478:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 479:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 480:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 481:main.c        ****         
 482:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 483:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 484:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 485:main.c        ****         
 486:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 487:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 26


 488:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 489:main.c        ****         
 490:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 491:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 492:main.c        ****         printf("\n");
 493:main.c        ****         
 494:main.c        ****         CyDelay(50);
 495:main.c        ****     }
 496:main.c        **** }   
 497:main.c        **** //*/
 498:main.c        **** 
 499:main.c        **** 
 500:main.c        **** /*//reflectance//
 501:main.c        **** int main()
 502:main.c        **** {
 503:main.c        ****     struct sensors_ ref;
 504:main.c        ****     struct sensors_ dig;
 505:main.c        ****     CyGlobalIntEnable; 
 506:main.c        ****     UART_1_Start();
 507:main.c        ****   
 508:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 509:main.c        ****     
 510:main.c        ****     reflectance_start();
 511:main.c        **** 
 512:main.c        ****     IR_led_Write(1);
 513:main.c        ****     for(;;)
 514:main.c        ****     {
 515:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 516:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 517:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 518:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 519:main.c        ****         
 520:main.c        ****         CyDelay(500);
 521:main.c        ****     }
 522:main.c        **** }   
 523:main.c        **** //*/
 524:main.c        **** 
 525:main.c        ****  /* //motor//
 526:main.c        **** int main()
 527:main.c        **** {
 528:main.c        ****     CyGlobalIntEnable; 
 529:main.c        ****     UART_1_Start();
 530:main.c        **** 
 531:main.c        ****     motor_start();              // motor start
 532:main.c        **** 
 533:main.c        ****     motor_forward(100,2000);     // moving forward
 534:main.c        ****     motor_turn(200,50,2000);     // turn
 535:main.c        ****     motor_turn(50,200,2000);     // turn
 536:main.c        ****     motor_backward(100,2000);    // movinb backward
 537:main.c        ****        
 538:main.c        ****     motor_stop();               // motor stop
 539:main.c        ****     
 540:main.c        ****     for(;;)
 541:main.c        ****     {
 542:main.c        **** 
 543:main.c        ****     }
 544:main.c        **** }
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 27


 545:main.c        **** //*/
 546:main.c        ****     
 547:main.c        **** 
 548:main.c        **** /*//gyroscope//
 549:main.c        **** int main()
 550:main.c        **** {
 551:main.c        ****     CyGlobalIntEnable; 
 552:main.c        ****     UART_1_Start();
 553:main.c        ****   
 554:main.c        ****     I2C_Start();
 555:main.c        ****   
 556:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 557:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 558:main.c        ****     
 559:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 560:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 561:main.c        ****     
 562:main.c        ****     for(;;)
 563:main.c        ****     {
 564:main.c        ****         //print out gyroscope output
 565:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 566:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 567:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 568:main.c        ****         
 569:main.c        ****         
 570:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 571:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 572:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 573:main.c        ****         
 574:main.c        ****         
 575:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 576:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 577:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 578:main.c        ****      
 579:main.c        ****         // If you want to print value
 580:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 581:main.c        ****         CyDelay(50);
 582:main.c        ****     }
 583:main.c        **** }   
 584:main.c        **** //*/
 585:main.c        **** 
 586:main.c        **** 
 587:main.c        **** /*//magnetometer//
 588:main.c        **** int main()
 589:main.c        **** {
 590:main.c        ****     CyGlobalIntEnable; 
 591:main.c        ****     UART_1_Start();
 592:main.c        ****   
 593:main.c        ****     I2C_Start();
 594:main.c        ****    
 595:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 596:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 597:main.c        ****     
 598:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 599:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 600:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 601:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 28


 602:main.c        ****     
 603:main.c        ****     
 604:main.c        ****     for(;;)
 605:main.c        ****     {
 606:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 607:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 608:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 609:main.c        ****         
 610:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 611:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 612:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 613:main.c        ****         
 614:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 615:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 616:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 617:main.c        ****         
 618:main.c        ****         heading(X_AXIS, Y_AXIS);
 619:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 620:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 621:main.c        ****         CyDelay(50);      
 622:main.c        ****     }
 623:main.c        **** }   
 624:main.c        **** //*/
 625:main.c        **** 
 626:main.c        **** 
 627:main.c        **** /*
 628:main.c        **** 
 629:main.c        **** 
 630:main.c        ****     <p>
 631:main.c        ****     <B>Sensors</B><br>
 632:main.c        ****     &nbsp;Included: <br>
 633:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 634:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 635:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 636:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 637:main.c        ****     &nbsp;Wii nunchuck<br>
 638:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 639:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 640:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 641:main.c        ****     &nbsp;IR LED <br><br><br>
 642:main.c        ****     </p>
 643:main.c        ****     
 644:main.c        ****     <p>
 645:main.c        ****     <B>Communication</B><br>
 646:main.c        ****     I2C, UART, Serial<br>
 647:main.c        ****     </p>
 648:main.c        **** 
 649:main.c        **** */
 650:main.c        **** 
 651:main.c        **** 
 652:main.c        **** #if 0
 653:main.c        **** int rread(void)
 654:main.c        **** {
 655:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 656:main.c        ****     SC0_Write(1);
 657:main.c        ****     CyDelayUs(10);
 658:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 29


 659:main.c        ****     Timer_1_Start();
 660:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 661:main.c        ****     uint16_t end = 0;
 662:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 663:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 664:main.c        ****             end = Timer_1_ReadCounter();
 665:main.c        ****         }
 666:main.c        ****     }
 667:main.c        ****     Timer_1_Stop();
 668:main.c        ****     
 669:main.c        ****     return (start - end);
 670:main.c        **** }
 671:main.c        **** #endif
 672:main.c        **** 
 673:main.c        **** /* Don't remove the functions below */
 674:main.c        **** int _write(int file, char *ptr, int len)
 675:main.c        **** {
 888              		.loc 1 675 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              	.LVL208:
 893 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 894              		.cfi_def_cfa_offset 24
 895              		.cfi_offset 3, -24
 896              		.cfi_offset 4, -20
 897              		.cfi_offset 5, -16
 898              		.cfi_offset 6, -12
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 0C46     		mov	r4, r1
 902 0004 1746     		mov	r7, r2
 903              	.LVL209:
 676:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 677:main.c        **** 	int n;
 678:main.c        **** 	for(n = 0; n < len; n++) {
 904              		.loc 1 678 0
 905 0006 0025     		movs	r5, #0
 906 0008 0BE0     		b	.L63
 907              	.LVL210:
 908              	.L65:
 679:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 909              		.loc 1 679 0
 910 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 911 000c 0A2B     		cmp	r3, #10
 912 000e 02D1     		bne	.L64
 913              		.loc 1 679 0 is_stmt 0 discriminator 1
 914 0010 0D20     		movs	r0, #13
 915 0012 FFF7FEFF 		bl	UART_1_PutChar
 916              	.LVL211:
 917              	.L64:
 680:main.c        **** 		UART_1_PutChar(*ptr++);
 918              		.loc 1 680 0 is_stmt 1 discriminator 2
 919 0016 661C     		adds	r6, r4, #1
 920              	.LVL212:
 921 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 922 001a FFF7FEFF 		bl	UART_1_PutChar
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 30


 923              	.LVL213:
 678:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 924              		.loc 1 678 0 discriminator 2
 925 001e 0135     		adds	r5, r5, #1
 926              	.LVL214:
 927              		.loc 1 680 0 discriminator 2
 928 0020 3446     		mov	r4, r6
 929              	.LVL215:
 930              	.L63:
 678:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 931              		.loc 1 678 0 discriminator 1
 932 0022 BD42     		cmp	r5, r7
 933 0024 F1DB     		blt	.L65
 681:main.c        **** 	}
 682:main.c        **** 	return len;
 683:main.c        **** }
 934              		.loc 1 683 0
 935 0026 3846     		mov	r0, r7
 936 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 937              		.cfi_endproc
 938              	.LFE64:
 939              		.size	_write, .-_write
 940 002a 00BF     		.section	.text._read,"ax",%progbits
 941              		.align	2
 942              		.global	_read
 943              		.thumb
 944              		.thumb_func
 945              		.type	_read, %function
 946              	_read:
 947              	.LFB65:
 684:main.c        **** 
 685:main.c        **** int _read (int file, char *ptr, int count)
 686:main.c        **** {
 948              		.loc 1 686 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              	.LVL216:
 953 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 954              		.cfi_def_cfa_offset 24
 955              		.cfi_offset 3, -24
 956              		.cfi_offset 4, -20
 957              		.cfi_offset 5, -16
 958              		.cfi_offset 6, -12
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 0F46     		mov	r7, r1
 962 0004 1446     		mov	r4, r2
 963              	.LVL217:
 687:main.c        ****     int chs = 0;
 964              		.loc 1 687 0
 965 0006 0026     		movs	r6, #0
 688:main.c        ****     char ch;
 689:main.c        ****  
 690:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 691:main.c        ****     while(count > 0) {
 966              		.loc 1 691 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 31


 967 0008 12E0     		b	.L69
 968              	.LVL218:
 969              	.L72:
 692:main.c        ****         ch = UART_1_GetChar();
 970              		.loc 1 692 0
 971 000a FFF7FEFF 		bl	UART_1_GetChar
 972              	.LVL219:
 693:main.c        ****         if(ch != 0) {
 973              		.loc 1 693 0
 974 000e 0546     		mov	r5, r0
 975 0010 70B1     		cbz	r0, .L69
 694:main.c        ****             UART_1_PutChar(ch);
 976              		.loc 1 694 0
 977 0012 FFF7FEFF 		bl	UART_1_PutChar
 978              	.LVL220:
 695:main.c        ****             chs++;
 979              		.loc 1 695 0
 980 0016 0136     		adds	r6, r6, #1
 981              	.LVL221:
 696:main.c        ****             if(ch == '\r') {
 982              		.loc 1 696 0
 983 0018 0D2D     		cmp	r5, #13
 984 001a 03D1     		bne	.L70
 985              	.LVL222:
 697:main.c        ****                 ch = '\n';
 698:main.c        ****                 UART_1_PutChar(ch);
 986              		.loc 1 698 0
 987 001c 0A20     		movs	r0, #10
 988 001e FFF7FEFF 		bl	UART_1_PutChar
 989              	.LVL223:
 697:main.c        ****                 ch = '\n';
 990              		.loc 1 697 0
 991 0022 0A25     		movs	r5, #10
 992              	.LVL224:
 993              	.L70:
 699:main.c        ****             }
 700:main.c        ****             *ptr++ = ch;
 994              		.loc 1 700 0
 995 0024 7B1C     		adds	r3, r7, #1
 996              	.LVL225:
 997 0026 3D70     		strb	r5, [r7]
 701:main.c        ****             count--;
 998              		.loc 1 701 0
 999 0028 013C     		subs	r4, r4, #1
 1000              	.LVL226:
 702:main.c        ****             if(ch == '\n') break;
 1001              		.loc 1 702 0
 1002 002a 0A2D     		cmp	r5, #10
 1003 002c 02D0     		beq	.L71
 700:main.c        ****             count--;
 1004              		.loc 1 700 0
 1005 002e 1F46     		mov	r7, r3
 1006              	.LVL227:
 1007              	.L69:
 691:main.c        ****         ch = UART_1_GetChar();
 1008              		.loc 1 691 0
 1009 0030 002C     		cmp	r4, #0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 32


 1010 0032 EADC     		bgt	.L72
 1011              	.LVL228:
 1012              	.L71:
 703:main.c        ****         }
 704:main.c        ****     }
 705:main.c        ****     return chs;
 706:main.c        **** }
 1013              		.loc 1 706 0
 1014 0034 3046     		mov	r0, r6
 1015 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1016              		.cfi_endproc
 1017              	.LFE65:
 1018              		.size	_read, .-_read
 1019              		.text
 1020              	.Letext0:
 1021              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1022              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1023              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1024              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 1025              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 1026              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 1027              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 1028              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 1029              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 1030              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 1031              		.file 12 "Generated_Source\\PSoC5/SW1.h"
 1032              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 1033              		.section	.debug_info,"",%progbits
 1034              	.Ldebug_info0:
 1035 0000 B0060000 		.4byte	0x6b0
 1036 0004 0400     		.2byte	0x4
 1037 0006 00000000 		.4byte	.Ldebug_abbrev0
 1038 000a 04       		.byte	0x4
 1039 000b 01       		.uleb128 0x1
 1040 000c 6F030000 		.4byte	.LASF72
 1041 0010 01       		.byte	0x1
 1042 0011 F8020000 		.4byte	.LASF73
 1043 0015 7A020000 		.4byte	.LASF74
 1044 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1045 001d 00000000 		.4byte	0
 1046 0021 00000000 		.4byte	.Ldebug_line0
 1047 0025 02       		.uleb128 0x2
 1048 0026 01       		.byte	0x1
 1049 0027 06       		.byte	0x6
 1050 0028 DC010000 		.4byte	.LASF0
 1051 002c 02       		.uleb128 0x2
 1052 002d 01       		.byte	0x1
 1053 002e 08       		.byte	0x8
 1054 002f 4E010000 		.4byte	.LASF1
 1055 0033 02       		.uleb128 0x2
 1056 0034 02       		.byte	0x2
 1057 0035 05       		.byte	0x5
 1058 0036 0F000000 		.4byte	.LASF2
 1059 003a 03       		.uleb128 0x3
 1060 003b 55000000 		.4byte	.LASF4
 1061 003f 02       		.byte	0x2
 1062 0040 2B       		.byte	0x2b
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 33


 1063 0041 45000000 		.4byte	0x45
 1064 0045 02       		.uleb128 0x2
 1065 0046 02       		.byte	0x2
 1066 0047 07       		.byte	0x7
 1067 0048 33020000 		.4byte	.LASF3
 1068 004c 03       		.uleb128 0x3
 1069 004d 52030000 		.4byte	.LASF5
 1070 0051 02       		.byte	0x2
 1071 0052 3F       		.byte	0x3f
 1072 0053 57000000 		.4byte	0x57
 1073 0057 02       		.uleb128 0x2
 1074 0058 04       		.byte	0x4
 1075 0059 05       		.byte	0x5
 1076 005a 5F020000 		.4byte	.LASF6
 1077 005e 02       		.uleb128 0x2
 1078 005f 04       		.byte	0x4
 1079 0060 07       		.byte	0x7
 1080 0061 0A030000 		.4byte	.LASF7
 1081 0065 02       		.uleb128 0x2
 1082 0066 08       		.byte	0x8
 1083 0067 05       		.byte	0x5
 1084 0068 E7000000 		.4byte	.LASF8
 1085 006c 02       		.uleb128 0x2
 1086 006d 08       		.byte	0x8
 1087 006e 07       		.byte	0x7
 1088 006f FB010000 		.4byte	.LASF9
 1089 0073 04       		.uleb128 0x4
 1090 0074 04       		.byte	0x4
 1091 0075 05       		.byte	0x5
 1092 0076 696E7400 		.ascii	"int\000"
 1093 007a 02       		.uleb128 0x2
 1094 007b 04       		.byte	0x4
 1095 007c 07       		.byte	0x7
 1096 007d 12020000 		.4byte	.LASF10
 1097 0081 03       		.uleb128 0x3
 1098 0082 1F020000 		.4byte	.LASF11
 1099 0086 03       		.byte	0x3
 1100 0087 21       		.byte	0x21
 1101 0088 3A000000 		.4byte	0x3a
 1102 008c 03       		.uleb128 0x3
 1103 008d 72020000 		.4byte	.LASF12
 1104 0091 03       		.byte	0x3
 1105 0092 2C       		.byte	0x2c
 1106 0093 4C000000 		.4byte	0x4c
 1107 0097 05       		.uleb128 0x5
 1108 0098 94000000 		.4byte	.LASF13
 1109 009c 04       		.byte	0x4
 1110 009d 9201     		.2byte	0x192
 1111 009f 2C000000 		.4byte	0x2c
 1112 00a3 05       		.uleb128 0x5
 1113 00a4 F1020000 		.4byte	.LASF14
 1114 00a8 04       		.byte	0x4
 1115 00a9 9401     		.2byte	0x194
 1116 00ab 5E000000 		.4byte	0x5e
 1117 00af 02       		.uleb128 0x2
 1118 00b0 04       		.byte	0x4
 1119 00b1 04       		.byte	0x4
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 34


 1120 00b2 D8000000 		.4byte	.LASF15
 1121 00b6 02       		.uleb128 0x2
 1122 00b7 08       		.byte	0x8
 1123 00b8 04       		.byte	0x4
 1124 00b9 10040000 		.4byte	.LASF16
 1125 00bd 02       		.uleb128 0x2
 1126 00be 01       		.byte	0x1
 1127 00bf 08       		.byte	0x8
 1128 00c0 16010000 		.4byte	.LASF17
 1129 00c4 05       		.uleb128 0x5
 1130 00c5 F5000000 		.4byte	.LASF18
 1131 00c9 04       		.byte	0x4
 1132 00ca 4E02     		.2byte	0x24e
 1133 00cc D0000000 		.4byte	0xd0
 1134 00d0 06       		.uleb128 0x6
 1135 00d1 04       		.byte	0x4
 1136 00d2 D6000000 		.4byte	0xd6
 1137 00d6 07       		.uleb128 0x7
 1138 00d7 02       		.uleb128 0x2
 1139 00d8 04       		.byte	0x4
 1140 00d9 07       		.byte	0x7
 1141 00da 19000000 		.4byte	.LASF19
 1142 00de 06       		.uleb128 0x6
 1143 00df 04       		.byte	0x4
 1144 00e0 BD000000 		.4byte	0xbd
 1145 00e4 08       		.uleb128 0x8
 1146 00e5 65000000 		.4byte	.LASF75
 1147 00e9 08       		.byte	0x8
 1148 00ea 05       		.byte	0x5
 1149 00eb 11       		.byte	0x11
 1150 00ec 1D010000 		.4byte	0x11d
 1151 00f0 09       		.uleb128 0x9
 1152 00f1 6C3300   		.ascii	"l3\000"
 1153 00f4 05       		.byte	0x5
 1154 00f5 12       		.byte	0x12
 1155 00f6 81000000 		.4byte	0x81
 1156 00fa 00       		.byte	0
 1157 00fb 09       		.uleb128 0x9
 1158 00fc 6C3100   		.ascii	"l1\000"
 1159 00ff 05       		.byte	0x5
 1160 0100 14       		.byte	0x14
 1161 0101 81000000 		.4byte	0x81
 1162 0105 02       		.byte	0x2
 1163 0106 09       		.uleb128 0x9
 1164 0107 723100   		.ascii	"r1\000"
 1165 010a 05       		.byte	0x5
 1166 010b 15       		.byte	0x15
 1167 010c 81000000 		.4byte	0x81
 1168 0110 04       		.byte	0x4
 1169 0111 09       		.uleb128 0x9
 1170 0112 723300   		.ascii	"r3\000"
 1171 0115 05       		.byte	0x5
 1172 0116 17       		.byte	0x17
 1173 0117 81000000 		.4byte	0x81
 1174 011b 06       		.byte	0x6
 1175 011c 00       		.byte	0
 1176 011d 02       		.uleb128 0x2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 35


 1177 011e 08       		.byte	0x8
 1178 011f 04       		.byte	0x4
 1179 0120 6D010000 		.4byte	.LASF20
 1180 0124 0A       		.uleb128 0xa
 1181 0125 3E000000 		.4byte	.LASF76
 1182 0129 01       		.byte	0x1
 1183 012a 2D       		.byte	0x2d
 1184 012b 73000000 		.4byte	0x73
 1185 012f 00000000 		.4byte	.LFB63
 1186 0133 48050000 		.4byte	.LFE63-.LFB63
 1187 0137 01       		.uleb128 0x1
 1188 0138 9C       		.byte	0x9c
 1189 0139 6C040000 		.4byte	0x46c
 1190 013d 0B       		.uleb128 0xb
 1191 013e 37000000 		.4byte	.LASF21
 1192 0142 01       		.byte	0x1
 1193 0143 30       		.byte	0x30
 1194 0144 73000000 		.4byte	0x73
 1195 0148 00000000 		.4byte	.LLST0
 1196 014c 0B       		.uleb128 0xb
 1197 014d 5C010000 		.4byte	.LASF22
 1198 0151 01       		.byte	0x1
 1199 0152 33       		.byte	0x33
 1200 0153 73000000 		.4byte	0x73
 1201 0157 36000000 		.4byte	.LLST1
 1202 015b 0B       		.uleb128 0xb
 1203 015c DE000000 		.4byte	.LASF23
 1204 0160 01       		.byte	0x1
 1205 0161 36       		.byte	0x36
 1206 0162 73000000 		.4byte	0x73
 1207 0166 6C000000 		.4byte	.LLST2
 1208 016a 0C       		.uleb128 0xc
 1209 016b 22000000 		.4byte	.LASF24
 1210 016f 01       		.byte	0x1
 1211 0170 39       		.byte	0x39
 1212 0171 73000000 		.4byte	0x73
 1213 0175 F401     		.2byte	0x1f4
 1214 0177 0B       		.uleb128 0xb
 1215 0178 43030000 		.4byte	.LASF25
 1216 017c 01       		.byte	0x1
 1217 017d 3C       		.byte	0x3c
 1218 017e 73000000 		.4byte	0x73
 1219 0182 AC000000 		.4byte	.LLST3
 1220 0186 0B       		.uleb128 0xb
 1221 0187 54020000 		.4byte	.LASF26
 1222 018b 01       		.byte	0x1
 1223 018c 3F       		.byte	0x3f
 1224 018d 73000000 		.4byte	0x73
 1225 0191 F9000000 		.4byte	.LLST4
 1226 0195 0B       		.uleb128 0xb
 1227 0196 A1010000 		.4byte	.LASF27
 1228 019a 01       		.byte	0x1
 1229 019b 40       		.byte	0x40
 1230 019c 73000000 		.4byte	0x73
 1231 01a0 18010000 		.4byte	.LLST5
 1232 01a4 0B       		.uleb128 0xb
 1233 01a5 2B010000 		.4byte	.LASF28
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 36


 1234 01a9 01       		.byte	0x1
 1235 01aa 41       		.byte	0x41
 1236 01ab 73000000 		.4byte	0x73
 1237 01af 52010000 		.4byte	.LLST6
 1238 01b3 0B       		.uleb128 0xb
 1239 01b4 28020000 		.4byte	.LASF29
 1240 01b8 01       		.byte	0x1
 1241 01b9 44       		.byte	0x44
 1242 01ba 97000000 		.4byte	0x97
 1243 01be 97010000 		.4byte	.LLST7
 1244 01c2 0D       		.uleb128 0xd
 1245 01c3 2D020000 		.4byte	.LASF30
 1246 01c7 01       		.byte	0x1
 1247 01c8 47       		.byte	0x47
 1248 01c9 97000000 		.4byte	0x97
 1249 01cd 70       		.sleb128 -16
 1250 01ce 0C       		.uleb128 0xc
 1251 01cf 81000000 		.4byte	.LASF31
 1252 01d3 01       		.byte	0x1
 1253 01d4 4A       		.byte	0x4a
 1254 01d5 73000000 		.4byte	0x73
 1255 01d9 0852     		.2byte	0x5208
 1256 01db 0C       		.uleb128 0xc
 1257 01dc 6E000000 		.4byte	.LASF32
 1258 01e0 01       		.byte	0x1
 1259 01e1 4B       		.byte	0x4b
 1260 01e2 73000000 		.4byte	0x73
 1261 01e6 5046     		.2byte	0x4650
 1262 01e8 0C       		.uleb128 0xc
 1263 01e9 5C030000 		.4byte	.LASF33
 1264 01ed 01       		.byte	0x1
 1265 01ee 4C       		.byte	0x4c
 1266 01ef 73000000 		.4byte	0x73
 1267 01f3 4858     		.2byte	0x5848
 1268 01f5 0C       		.uleb128 0xc
 1269 01f6 FD030000 		.4byte	.LASF34
 1270 01fa 01       		.byte	0x1
 1271 01fb 4D       		.byte	0x4d
 1272 01fc 73000000 		.4byte	0x73
 1273 0200 FC53     		.2byte	0x53fc
 1274 0202 0C       		.uleb128 0xc
 1275 0203 2A040000 		.4byte	.LASF35
 1276 0207 01       		.byte	0x1
 1277 0208 4F       		.byte	0x4f
 1278 0209 73000000 		.4byte	0x73
 1279 020d A116     		.2byte	0x16a1
 1280 020f 0C       		.uleb128 0xc
 1281 0210 17040000 		.4byte	.LASF36
 1282 0214 01       		.byte	0x1
 1283 0215 50       		.byte	0x50
 1284 0216 73000000 		.4byte	0x73
 1285 021a 9411     		.2byte	0x1194
 1286 021c 0C       		.uleb128 0xc
 1287 021d C9010000 		.4byte	.LASF37
 1288 0221 01       		.byte	0x1
 1289 0222 51       		.byte	0x51
 1290 0223 73000000 		.4byte	0x73
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 37


 1291 0227 AA11     		.2byte	0x11aa
 1292 0229 0C       		.uleb128 0xc
 1293 022a E8010000 		.4byte	.LASF38
 1294 022e 01       		.byte	0x1
 1295 022f 52       		.byte	0x52
 1296 0230 73000000 		.4byte	0x73
 1297 0234 9518     		.2byte	0x1895
 1298 0236 0C       		.uleb128 0xc
 1299 0237 2C000000 		.4byte	.LASF39
 1300 023b 01       		.byte	0x1
 1301 023c 54       		.byte	0x54
 1302 023d 73000000 		.4byte	0x73
 1303 0241 BC34     		.2byte	0x34bc
 1304 0243 0C       		.uleb128 0xc
 1305 0244 FF020000 		.4byte	.LASF40
 1306 0248 01       		.byte	0x1
 1307 0249 55       		.byte	0x55
 1308 024a 73000000 		.4byte	0x73
 1309 024e 9E46     		.2byte	0x469e
 1310 0250 0B       		.uleb128 0xb
 1311 0251 3B030000 		.4byte	.LASF41
 1312 0255 01       		.byte	0x1
 1313 0256 57       		.byte	0x57
 1314 0257 73000000 		.4byte	0x73
 1315 025b 1A020000 		.4byte	.LLST8
 1316 025f 0B       		.uleb128 0xb
 1317 0260 CF020000 		.4byte	.LASF42
 1318 0264 01       		.byte	0x1
 1319 0265 58       		.byte	0x58
 1320 0266 73000000 		.4byte	0x73
 1321 026a 65020000 		.4byte	.LLST9
 1322 026e 0B       		.uleb128 0xb
 1323 026f 1B010000 		.4byte	.LASF43
 1324 0273 01       		.byte	0x1
 1325 0274 59       		.byte	0x59
 1326 0275 73000000 		.4byte	0x73
 1327 0279 BC020000 		.4byte	.LLST10
 1328 027d 0B       		.uleb128 0xb
 1329 027e 61010000 		.4byte	.LASF44
 1330 0282 01       		.byte	0x1
 1331 0283 5A       		.byte	0x5a
 1332 0284 AF000000 		.4byte	0xaf
 1333 0288 13030000 		.4byte	.LLST11
 1334 028c 0B       		.uleb128 0xb
 1335 028d 79010000 		.4byte	.LASF45
 1336 0291 01       		.byte	0x1
 1337 0292 5B       		.byte	0x5b
 1338 0293 AF000000 		.4byte	0xaf
 1339 0297 90030000 		.4byte	.LLST12
 1340 029b 0B       		.uleb128 0xb
 1341 029c 68020000 		.4byte	.LASF46
 1342 02a0 01       		.byte	0x1
 1343 02a1 5C       		.byte	0x5c
 1344 02a2 AF000000 		.4byte	0xaf
 1345 02a6 CB030000 		.4byte	.LLST13
 1346 02aa 0B       		.uleb128 0xb
 1347 02ab BB020000 		.4byte	.LASF47
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 38


 1348 02af 01       		.byte	0x1
 1349 02b0 5D       		.byte	0x5d
 1350 02b1 73000000 		.4byte	0x73
 1351 02b5 46040000 		.4byte	.LLST14
 1352 02b9 0E       		.uleb128 0xe
 1353 02ba 72656600 		.ascii	"ref\000"
 1354 02be 01       		.byte	0x1
 1355 02bf 61       		.byte	0x61
 1356 02c0 E4000000 		.4byte	0xe4
 1357 02c4 02       		.uleb128 0x2
 1358 02c5 91       		.byte	0x91
 1359 02c6 50       		.sleb128 -48
 1360 02c7 0E       		.uleb128 0xe
 1361 02c8 64696700 		.ascii	"dig\000"
 1362 02cc 01       		.byte	0x1
 1363 02cd 62       		.byte	0x62
 1364 02ce E4000000 		.4byte	0xe4
 1365 02d2 02       		.uleb128 0x2
 1366 02d3 91       		.byte	0x91
 1367 02d4 48       		.sleb128 -56
 1368 02d5 0B       		.uleb128 0xb
 1369 02d6 38010000 		.4byte	.LASF48
 1370 02da 01       		.byte	0x1
 1371 02db 74       		.byte	0x74
 1372 02dc 97000000 		.4byte	0x97
 1373 02e0 9D040000 		.4byte	.LLST15
 1374 02e4 0F       		.uleb128 0xf
 1375 02e5 0C000000 		.4byte	.LVL1
 1376 02e9 88050000 		.4byte	0x588
 1377 02ed 0F       		.uleb128 0xf
 1378 02ee 10000000 		.4byte	.LVL2
 1379 02f2 8F050000 		.4byte	0x58f
 1380 02f6 0F       		.uleb128 0xf
 1381 02f7 14000000 		.4byte	.LVL3
 1382 02fb 96050000 		.4byte	0x596
 1383 02ff 0F       		.uleb128 0xf
 1384 0300 18000000 		.4byte	.LVL4
 1385 0304 A3050000 		.4byte	0x5a3
 1386 0308 10       		.uleb128 0x10
 1387 0309 20000000 		.4byte	.LVL5
 1388 030d B0050000 		.4byte	0x5b0
 1389 0311 20030000 		.4byte	0x320
 1390 0315 11       		.uleb128 0x11
 1391 0316 01       		.uleb128 0x1
 1392 0317 51       		.byte	0x51
 1393 0318 01       		.uleb128 0x1
 1394 0319 30       		.byte	0x30
 1395 031a 11       		.uleb128 0x11
 1396 031b 01       		.uleb128 0x1
 1397 031c 50       		.byte	0x50
 1398 031d 01       		.uleb128 0x1
 1399 031e 30       		.byte	0x30
 1400 031f 00       		.byte	0
 1401 0320 0F       		.uleb128 0xf
 1402 0321 26000000 		.4byte	.LVL6
 1403 0325 C6050000 		.4byte	0x5c6
 1404 0329 10       		.uleb128 0x10
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 39


 1405 032a 3A000000 		.4byte	.LVL7
 1406 032e D7050000 		.4byte	0x5d7
 1407 0332 53030000 		.4byte	0x353
 1408 0336 11       		.uleb128 0x11
 1409 0337 01       		.uleb128 0x1
 1410 0338 53       		.byte	0x53
 1411 0339 03       		.uleb128 0x3
 1412 033a 0A       		.byte	0xa
 1413 033b FC53     		.2byte	0x53fc
 1414 033d 11       		.uleb128 0x11
 1415 033e 01       		.uleb128 0x1
 1416 033f 52       		.byte	0x52
 1417 0340 03       		.uleb128 0x3
 1418 0341 0A       		.byte	0xa
 1419 0342 4858     		.2byte	0x5848
 1420 0344 11       		.uleb128 0x11
 1421 0345 01       		.uleb128 0x1
 1422 0346 51       		.byte	0x51
 1423 0347 03       		.uleb128 0x3
 1424 0348 0A       		.byte	0xa
 1425 0349 5046     		.2byte	0x4650
 1426 034b 11       		.uleb128 0x11
 1427 034c 01       		.uleb128 0x1
 1428 034d 50       		.byte	0x50
 1429 034e 03       		.uleb128 0x3
 1430 034f 0A       		.byte	0xa
 1431 0350 0852     		.2byte	0x5208
 1432 0352 00       		.byte	0
 1433 0353 0F       		.uleb128 0xf
 1434 0354 3E000000 		.4byte	.LVL8
 1435 0358 F7050000 		.4byte	0x5f7
 1436 035c 10       		.uleb128 0x10
 1437 035d 44000000 		.4byte	.LVL9
 1438 0361 FE050000 		.4byte	0x5fe
 1439 0365 6F030000 		.4byte	0x36f
 1440 0369 11       		.uleb128 0x11
 1441 036a 01       		.uleb128 0x1
 1442 036b 50       		.byte	0x50
 1443 036c 01       		.uleb128 0x1
 1444 036d 31       		.byte	0x31
 1445 036e 00       		.byte	0
 1446 036f 10       		.uleb128 0x10
 1447 0370 4A000000 		.4byte	.LVL10
 1448 0374 0F060000 		.4byte	0x60f
 1449 0378 82030000 		.4byte	0x382
 1450 037c 11       		.uleb128 0x11
 1451 037d 01       		.uleb128 0x1
 1452 037e 50       		.byte	0x50
 1453 037f 01       		.uleb128 0x1
 1454 0380 30       		.byte	0x30
 1455 0381 00       		.byte	0
 1456 0382 0F       		.uleb128 0xf
 1457 0383 52000000 		.4byte	.LVL12
 1458 0387 20060000 		.4byte	0x620
 1459 038b 10       		.uleb128 0x10
 1460 038c 5A000000 		.4byte	.LVL15
 1461 0390 2B060000 		.4byte	0x62b
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 40


 1462 0394 9E030000 		.4byte	0x39e
 1463 0398 11       		.uleb128 0x11
 1464 0399 01       		.uleb128 0x1
 1465 039a 50       		.byte	0x50
 1466 039b 01       		.uleb128 0x1
 1467 039c 3A       		.byte	0x3a
 1468 039d 00       		.byte	0
 1469 039e 10       		.uleb128 0x10
 1470 039f 94000000 		.4byte	.LVL25
 1471 03a3 2B060000 		.4byte	0x62b
 1472 03a7 B1030000 		.4byte	0x3b1
 1473 03ab 11       		.uleb128 0x11
 1474 03ac 01       		.uleb128 0x1
 1475 03ad 50       		.byte	0x50
 1476 03ae 01       		.uleb128 0x1
 1477 03af 31       		.byte	0x31
 1478 03b0 00       		.byte	0
 1479 03b1 10       		.uleb128 0x10
 1480 03b2 C6000000 		.4byte	.LVL32
 1481 03b6 2B060000 		.4byte	0x62b
 1482 03ba C4030000 		.4byte	0x3c4
 1483 03be 11       		.uleb128 0x11
 1484 03bf 01       		.uleb128 0x1
 1485 03c0 50       		.byte	0x50
 1486 03c1 01       		.uleb128 0x1
 1487 03c2 31       		.byte	0x31
 1488 03c3 00       		.byte	0
 1489 03c4 10       		.uleb128 0x10
 1490 03c5 EE000000 		.4byte	.LVL36
 1491 03c9 3C060000 		.4byte	0x63c
 1492 03cd D8030000 		.4byte	0x3d8
 1493 03d1 11       		.uleb128 0x11
 1494 03d2 01       		.uleb128 0x1
 1495 03d3 50       		.byte	0x50
 1496 03d4 02       		.uleb128 0x2
 1497 03d5 91       		.byte	0x91
 1498 03d6 50       		.sleb128 -48
 1499 03d7 00       		.byte	0
 1500 03d8 10       		.uleb128 0x10
 1501 03d9 F4000000 		.4byte	.LVL37
 1502 03dd 53060000 		.4byte	0x653
 1503 03e1 EC030000 		.4byte	0x3ec
 1504 03e5 11       		.uleb128 0x11
 1505 03e6 01       		.uleb128 0x1
 1506 03e7 50       		.byte	0x50
 1507 03e8 02       		.uleb128 0x2
 1508 03e9 91       		.byte	0x91
 1509 03ea 48       		.sleb128 -56
 1510 03eb 00       		.byte	0
 1511 03ec 10       		.uleb128 0x10
 1512 03ed 9A040000 		.4byte	.LVL193
 1513 03f1 64060000 		.4byte	0x664
 1514 03f5 00040000 		.4byte	0x400
 1515 03f9 11       		.uleb128 0x11
 1516 03fa 01       		.uleb128 0x1
 1517 03fb 50       		.byte	0x50
 1518 03fc 02       		.uleb128 0x2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 41


 1519 03fd 77       		.byte	0x77
 1520 03fe 00       		.sleb128 0
 1521 03ff 00       		.byte	0
 1522 0400 10       		.uleb128 0x10
 1523 0401 A2040000 		.4byte	.LVL194
 1524 0405 75060000 		.4byte	0x675
 1525 0409 14040000 		.4byte	0x414
 1526 040d 11       		.uleb128 0x11
 1527 040e 01       		.uleb128 0x1
 1528 040f 50       		.byte	0x50
 1529 0410 02       		.uleb128 0x2
 1530 0411 77       		.byte	0x77
 1531 0412 00       		.sleb128 0
 1532 0413 00       		.byte	0
 1533 0414 10       		.uleb128 0x10
 1534 0415 A8040000 		.4byte	.LVL195
 1535 0419 2B060000 		.4byte	0x62b
 1536 041d 27040000 		.4byte	0x427
 1537 0421 11       		.uleb128 0x11
 1538 0422 01       		.uleb128 0x1
 1539 0423 50       		.byte	0x50
 1540 0424 01       		.uleb128 0x1
 1541 0425 31       		.byte	0x31
 1542 0426 00       		.byte	0
 1543 0427 10       		.uleb128 0x10
 1544 0428 B4040000 		.4byte	.LVL197
 1545 042c 86060000 		.4byte	0x686
 1546 0430 3B040000 		.4byte	0x43b
 1547 0434 11       		.uleb128 0x11
 1548 0435 01       		.uleb128 0x1
 1549 0436 50       		.byte	0x50
 1550 0437 02       		.uleb128 0x2
 1551 0438 09       		.byte	0x9
 1552 0439 F0       		.byte	0xf0
 1553 043a 00       		.byte	0
 1554 043b 10       		.uleb128 0x10
 1555 043c F0040000 		.4byte	.LVL202
 1556 0440 B0050000 		.4byte	0x5b0
 1557 0444 53040000 		.4byte	0x453
 1558 0448 11       		.uleb128 0x11
 1559 0449 01       		.uleb128 0x1
 1560 044a 51       		.byte	0x51
 1561 044b 01       		.uleb128 0x1
 1562 044c 30       		.byte	0x30
 1563 044d 11       		.uleb128 0x11
 1564 044e 01       		.uleb128 0x1
 1565 044f 50       		.byte	0x50
 1566 0450 01       		.uleb128 0x1
 1567 0451 30       		.byte	0x30
 1568 0452 00       		.byte	0
 1569 0453 0F       		.uleb128 0xf
 1570 0454 02050000 		.4byte	.LVL205
 1571 0458 96050000 		.4byte	0x596
 1572 045c 12       		.uleb128 0x12
 1573 045d 0C050000 		.4byte	.LVL207
 1574 0461 2B060000 		.4byte	0x62b
 1575 0465 11       		.uleb128 0x11
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 42


 1576 0466 01       		.uleb128 0x1
 1577 0467 50       		.byte	0x50
 1578 0468 01       		.uleb128 0x1
 1579 0469 31       		.byte	0x31
 1580 046a 00       		.byte	0
 1581 046b 00       		.byte	0
 1582 046c 13       		.uleb128 0x13
 1583 046d 43000000 		.4byte	.LASF50
 1584 0471 01       		.byte	0x1
 1585 0472 A202     		.2byte	0x2a2
 1586 0474 73000000 		.4byte	0x73
 1587 0478 00000000 		.4byte	.LFB64
 1588 047c 2A000000 		.4byte	.LFE64-.LFB64
 1589 0480 01       		.uleb128 0x1
 1590 0481 9C       		.byte	0x9c
 1591 0482 E1040000 		.4byte	0x4e1
 1592 0486 14       		.uleb128 0x14
 1593 0487 60000000 		.4byte	.LASF49
 1594 048b 01       		.byte	0x1
 1595 048c A202     		.2byte	0x2a2
 1596 048e 73000000 		.4byte	0x73
 1597 0492 B0040000 		.4byte	.LLST16
 1598 0496 15       		.uleb128 0x15
 1599 0497 70747200 		.ascii	"ptr\000"
 1600 049b 01       		.byte	0x1
 1601 049c A202     		.2byte	0x2a2
 1602 049e DE000000 		.4byte	0xde
 1603 04a2 D1040000 		.4byte	.LLST17
 1604 04a6 15       		.uleb128 0x15
 1605 04a7 6C656E00 		.ascii	"len\000"
 1606 04ab 01       		.byte	0x1
 1607 04ac A202     		.2byte	0x2a2
 1608 04ae 73000000 		.4byte	0x73
 1609 04b2 05050000 		.4byte	.LLST18
 1610 04b6 16       		.uleb128 0x16
 1611 04b7 6E00     		.ascii	"n\000"
 1612 04b9 01       		.byte	0x1
 1613 04ba A502     		.2byte	0x2a5
 1614 04bc 73000000 		.4byte	0x73
 1615 04c0 23050000 		.4byte	.LLST19
 1616 04c4 10       		.uleb128 0x10
 1617 04c5 16000000 		.4byte	.LVL211
 1618 04c9 97060000 		.4byte	0x697
 1619 04cd D7040000 		.4byte	0x4d7
 1620 04d1 11       		.uleb128 0x11
 1621 04d2 01       		.uleb128 0x1
 1622 04d3 50       		.byte	0x50
 1623 04d4 01       		.uleb128 0x1
 1624 04d5 3D       		.byte	0x3d
 1625 04d6 00       		.byte	0
 1626 04d7 0F       		.uleb128 0xf
 1627 04d8 1E000000 		.4byte	.LVL213
 1628 04dc 97060000 		.4byte	0x697
 1629 04e0 00       		.byte	0
 1630 04e1 13       		.uleb128 0x13
 1631 04e2 C3010000 		.4byte	.LASF51
 1632 04e6 01       		.byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 43


 1633 04e7 AD02     		.2byte	0x2ad
 1634 04e9 73000000 		.4byte	0x73
 1635 04ed 00000000 		.4byte	.LFB65
 1636 04f1 38000000 		.4byte	.LFE65-.LFB65
 1637 04f5 01       		.uleb128 0x1
 1638 04f6 9C       		.byte	0x9c
 1639 04f7 77050000 		.4byte	0x577
 1640 04fb 14       		.uleb128 0x14
 1641 04fc 60000000 		.4byte	.LASF49
 1642 0500 01       		.byte	0x1
 1643 0501 AD02     		.2byte	0x2ad
 1644 0503 73000000 		.4byte	0x73
 1645 0507 42050000 		.4byte	.LLST20
 1646 050b 15       		.uleb128 0x15
 1647 050c 70747200 		.ascii	"ptr\000"
 1648 0510 01       		.byte	0x1
 1649 0511 AD02     		.2byte	0x2ad
 1650 0513 DE000000 		.4byte	0xde
 1651 0517 63050000 		.4byte	.LLST21
 1652 051b 14       		.uleb128 0x14
 1653 051c 4C030000 		.4byte	.LASF52
 1654 0520 01       		.byte	0x1
 1655 0521 AD02     		.2byte	0x2ad
 1656 0523 73000000 		.4byte	0x73
 1657 0527 97050000 		.4byte	.LLST22
 1658 052b 16       		.uleb128 0x16
 1659 052c 63687300 		.ascii	"chs\000"
 1660 0530 01       		.byte	0x1
 1661 0531 AF02     		.2byte	0x2af
 1662 0533 73000000 		.4byte	0x73
 1663 0537 B5050000 		.4byte	.LLST23
 1664 053b 16       		.uleb128 0x16
 1665 053c 636800   		.ascii	"ch\000"
 1666 053f 01       		.byte	0x1
 1667 0540 B002     		.2byte	0x2b0
 1668 0542 BD000000 		.4byte	0xbd
 1669 0546 D4050000 		.4byte	.LLST24
 1670 054a 0F       		.uleb128 0xf
 1671 054b 0E000000 		.4byte	.LVL219
 1672 054f A8060000 		.4byte	0x6a8
 1673 0553 10       		.uleb128 0x10
 1674 0554 16000000 		.4byte	.LVL220
 1675 0558 97060000 		.4byte	0x697
 1676 055c 67050000 		.4byte	0x567
 1677 0560 11       		.uleb128 0x11
 1678 0561 01       		.uleb128 0x1
 1679 0562 50       		.byte	0x50
 1680 0563 02       		.uleb128 0x2
 1681 0564 75       		.byte	0x75
 1682 0565 00       		.sleb128 0
 1683 0566 00       		.byte	0
 1684 0567 12       		.uleb128 0x12
 1685 0568 22000000 		.4byte	.LVL223
 1686 056c 97060000 		.4byte	0x697
 1687 0570 11       		.uleb128 0x11
 1688 0571 01       		.uleb128 0x1
 1689 0572 50       		.byte	0x50
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 44


 1690 0573 01       		.uleb128 0x1
 1691 0574 3A       		.byte	0x3a
 1692 0575 00       		.byte	0
 1693 0576 00       		.byte	0
 1694 0577 17       		.uleb128 0x17
 1695 0578 3D040000 		.4byte	.LASF77
 1696 057c 0D       		.byte	0xd
 1697 057d 9606     		.2byte	0x696
 1698 057f 83050000 		.4byte	0x583
 1699 0583 18       		.uleb128 0x18
 1700 0584 8C000000 		.4byte	0x8c
 1701 0588 19       		.uleb128 0x19
 1702 0589 BC000000 		.4byte	.LASF53
 1703 058d 06       		.byte	0x6
 1704 058e 54       		.byte	0x54
 1705 058f 19       		.uleb128 0x19
 1706 0590 85010000 		.4byte	.LASF54
 1707 0594 07       		.byte	0x7
 1708 0595 34       		.byte	0x34
 1709 0596 1A       		.uleb128 0x1a
 1710 0597 9A000000 		.4byte	.LASF55
 1711 059b 01       		.byte	0x1
 1712 059c 28       		.byte	0x28
 1713 059d A3050000 		.4byte	0x5a3
 1714 05a1 1B       		.uleb128 0x1b
 1715 05a2 00       		.byte	0
 1716 05a3 1A       		.uleb128 0x1a
 1717 05a4 2F030000 		.4byte	.LASF56
 1718 05a8 01       		.byte	0x1
 1719 05a9 23       		.byte	0x23
 1720 05aa B0050000 		.4byte	0x5b0
 1721 05ae 1B       		.uleb128 0x1b
 1722 05af 00       		.byte	0
 1723 05b0 1C       		.uleb128 0x1c
 1724 05b1 46020000 		.4byte	.LASF57
 1725 05b5 01       		.byte	0x1
 1726 05b6 24       		.byte	0x24
 1727 05b7 C6050000 		.4byte	0x5c6
 1728 05bb 1D       		.uleb128 0x1d
 1729 05bc 97000000 		.4byte	0x97
 1730 05c0 1D       		.uleb128 0x1d
 1731 05c1 A3000000 		.4byte	0xa3
 1732 05c5 00       		.byte	0
 1733 05c6 1C       		.uleb128 0x1c
 1734 05c7 1C030000 		.4byte	.LASF58
 1735 05cb 08       		.byte	0x8
 1736 05cc 18       		.byte	0x18
 1737 05cd D7050000 		.4byte	0x5d7
 1738 05d1 1D       		.uleb128 0x1d
 1739 05d2 C4000000 		.4byte	0xc4
 1740 05d6 00       		.byte	0
 1741 05d7 1C       		.uleb128 0x1c
 1742 05d8 A9010000 		.4byte	.LASF59
 1743 05dc 01       		.byte	0x1
 1744 05dd 27       		.byte	0x27
 1745 05de F7050000 		.4byte	0x5f7
 1746 05e2 1D       		.uleb128 0x1d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 45


 1747 05e3 81000000 		.4byte	0x81
 1748 05e7 1D       		.uleb128 0x1d
 1749 05e8 81000000 		.4byte	0x81
 1750 05ec 1D       		.uleb128 0x1d
 1751 05ed 81000000 		.4byte	0x81
 1752 05f1 1D       		.uleb128 0x1d
 1753 05f2 81000000 		.4byte	0x81
 1754 05f6 00       		.byte	0
 1755 05f7 19       		.uleb128 0x19
 1756 05f8 AA000000 		.4byte	.LASF60
 1757 05fc 05       		.byte	0x5
 1758 05fd 1A       		.byte	0x1a
 1759 05fe 1C       		.uleb128 0x1c
 1760 05ff 63040000 		.4byte	.LASF61
 1761 0603 09       		.byte	0x9
 1762 0604 26       		.byte	0x26
 1763 0605 0F060000 		.4byte	0x60f
 1764 0609 1D       		.uleb128 0x1d
 1765 060a 97000000 		.4byte	0x97
 1766 060e 00       		.byte	0
 1767 060f 1C       		.uleb128 0x1c
 1768 0610 D7020000 		.4byte	.LASF62
 1769 0614 0A       		.byte	0xa
 1770 0615 26       		.byte	0x26
 1771 0616 20060000 		.4byte	0x620
 1772 061a 1D       		.uleb128 0x1d
 1773 061b 97000000 		.4byte	0x97
 1774 061f 00       		.byte	0
 1775 0620 1E       		.uleb128 0x1e
 1776 0621 E8020000 		.4byte	.LASF70
 1777 0625 0C       		.byte	0xc
 1778 0626 29       		.byte	0x29
 1779 0627 97000000 		.4byte	0x97
 1780 062b 1C       		.uleb128 0x1c
 1781 062c 4A040000 		.4byte	.LASF63
 1782 0630 0B       		.byte	0xb
 1783 0631 76       		.byte	0x76
 1784 0632 3C060000 		.4byte	0x63c
 1785 0636 1D       		.uleb128 0x1d
 1786 0637 A3000000 		.4byte	0xa3
 1787 063b 00       		.byte	0
 1788 063c 1C       		.uleb128 0x1c
 1789 063d 52040000 		.4byte	.LASF64
 1790 0641 05       		.byte	0x5
 1791 0642 1B       		.byte	0x1b
 1792 0643 4D060000 		.4byte	0x64d
 1793 0647 1D       		.uleb128 0x1d
 1794 0648 4D060000 		.4byte	0x64d
 1795 064c 00       		.byte	0
 1796 064d 06       		.uleb128 0x6
 1797 064e 04       		.byte	0x4
 1798 064f E4000000 		.4byte	0xe4
 1799 0653 1C       		.uleb128 0x1c
 1800 0654 02010000 		.4byte	.LASF65
 1801 0658 05       		.byte	0x5
 1802 0659 1C       		.byte	0x1c
 1803 065a 64060000 		.4byte	0x664
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 46


 1804 065e 1D       		.uleb128 0x1d
 1805 065f 4D060000 		.4byte	0x64d
 1806 0663 00       		.byte	0
 1807 0664 1C       		.uleb128 0x1c
 1808 0665 4A000000 		.4byte	.LASF66
 1809 0669 01       		.byte	0x1
 1810 066a 29       		.byte	0x29
 1811 066b 75060000 		.4byte	0x675
 1812 066f 1D       		.uleb128 0x1d
 1813 0670 97000000 		.4byte	0x97
 1814 0674 00       		.byte	0
 1815 0675 1C       		.uleb128 0x1c
 1816 0676 97010000 		.4byte	.LASF67
 1817 067a 01       		.byte	0x1
 1818 067b 2A       		.byte	0x2a
 1819 067c 86060000 		.4byte	0x686
 1820 0680 1D       		.uleb128 0x1d
 1821 0681 97000000 		.4byte	0x97
 1822 0685 00       		.byte	0
 1823 0686 1C       		.uleb128 0x1c
 1824 0687 3F010000 		.4byte	.LASF68
 1825 068b 01       		.byte	0x1
 1826 068c 25       		.byte	0x25
 1827 068d 97060000 		.4byte	0x697
 1828 0691 1D       		.uleb128 0x1d
 1829 0692 97000000 		.4byte	0x97
 1830 0696 00       		.byte	0
 1831 0697 1C       		.uleb128 0x1c
 1832 0698 C9000000 		.4byte	.LASF69
 1833 069c 06       		.byte	0x6
 1834 069d 8A       		.byte	0x8a
 1835 069e A8060000 		.4byte	0x6a8
 1836 06a2 1D       		.uleb128 0x1d
 1837 06a3 97000000 		.4byte	0x97
 1838 06a7 00       		.byte	0
 1839 06a8 1E       		.uleb128 0x1e
 1840 06a9 00000000 		.4byte	.LASF71
 1841 06ad 06       		.byte	0x6
 1842 06ae 71       		.byte	0x71
 1843 06af 97000000 		.4byte	0x97
 1844 06b3 00       		.byte	0
 1845              		.section	.debug_abbrev,"",%progbits
 1846              	.Ldebug_abbrev0:
 1847 0000 01       		.uleb128 0x1
 1848 0001 11       		.uleb128 0x11
 1849 0002 01       		.byte	0x1
 1850 0003 25       		.uleb128 0x25
 1851 0004 0E       		.uleb128 0xe
 1852 0005 13       		.uleb128 0x13
 1853 0006 0B       		.uleb128 0xb
 1854 0007 03       		.uleb128 0x3
 1855 0008 0E       		.uleb128 0xe
 1856 0009 1B       		.uleb128 0x1b
 1857 000a 0E       		.uleb128 0xe
 1858 000b 55       		.uleb128 0x55
 1859 000c 17       		.uleb128 0x17
 1860 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 47


 1861 000e 01       		.uleb128 0x1
 1862 000f 10       		.uleb128 0x10
 1863 0010 17       		.uleb128 0x17
 1864 0011 00       		.byte	0
 1865 0012 00       		.byte	0
 1866 0013 02       		.uleb128 0x2
 1867 0014 24       		.uleb128 0x24
 1868 0015 00       		.byte	0
 1869 0016 0B       		.uleb128 0xb
 1870 0017 0B       		.uleb128 0xb
 1871 0018 3E       		.uleb128 0x3e
 1872 0019 0B       		.uleb128 0xb
 1873 001a 03       		.uleb128 0x3
 1874 001b 0E       		.uleb128 0xe
 1875 001c 00       		.byte	0
 1876 001d 00       		.byte	0
 1877 001e 03       		.uleb128 0x3
 1878 001f 16       		.uleb128 0x16
 1879 0020 00       		.byte	0
 1880 0021 03       		.uleb128 0x3
 1881 0022 0E       		.uleb128 0xe
 1882 0023 3A       		.uleb128 0x3a
 1883 0024 0B       		.uleb128 0xb
 1884 0025 3B       		.uleb128 0x3b
 1885 0026 0B       		.uleb128 0xb
 1886 0027 49       		.uleb128 0x49
 1887 0028 13       		.uleb128 0x13
 1888 0029 00       		.byte	0
 1889 002a 00       		.byte	0
 1890 002b 04       		.uleb128 0x4
 1891 002c 24       		.uleb128 0x24
 1892 002d 00       		.byte	0
 1893 002e 0B       		.uleb128 0xb
 1894 002f 0B       		.uleb128 0xb
 1895 0030 3E       		.uleb128 0x3e
 1896 0031 0B       		.uleb128 0xb
 1897 0032 03       		.uleb128 0x3
 1898 0033 08       		.uleb128 0x8
 1899 0034 00       		.byte	0
 1900 0035 00       		.byte	0
 1901 0036 05       		.uleb128 0x5
 1902 0037 16       		.uleb128 0x16
 1903 0038 00       		.byte	0
 1904 0039 03       		.uleb128 0x3
 1905 003a 0E       		.uleb128 0xe
 1906 003b 3A       		.uleb128 0x3a
 1907 003c 0B       		.uleb128 0xb
 1908 003d 3B       		.uleb128 0x3b
 1909 003e 05       		.uleb128 0x5
 1910 003f 49       		.uleb128 0x49
 1911 0040 13       		.uleb128 0x13
 1912 0041 00       		.byte	0
 1913 0042 00       		.byte	0
 1914 0043 06       		.uleb128 0x6
 1915 0044 0F       		.uleb128 0xf
 1916 0045 00       		.byte	0
 1917 0046 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 48


 1918 0047 0B       		.uleb128 0xb
 1919 0048 49       		.uleb128 0x49
 1920 0049 13       		.uleb128 0x13
 1921 004a 00       		.byte	0
 1922 004b 00       		.byte	0
 1923 004c 07       		.uleb128 0x7
 1924 004d 15       		.uleb128 0x15
 1925 004e 00       		.byte	0
 1926 004f 27       		.uleb128 0x27
 1927 0050 19       		.uleb128 0x19
 1928 0051 00       		.byte	0
 1929 0052 00       		.byte	0
 1930 0053 08       		.uleb128 0x8
 1931 0054 13       		.uleb128 0x13
 1932 0055 01       		.byte	0x1
 1933 0056 03       		.uleb128 0x3
 1934 0057 0E       		.uleb128 0xe
 1935 0058 0B       		.uleb128 0xb
 1936 0059 0B       		.uleb128 0xb
 1937 005a 3A       		.uleb128 0x3a
 1938 005b 0B       		.uleb128 0xb
 1939 005c 3B       		.uleb128 0x3b
 1940 005d 0B       		.uleb128 0xb
 1941 005e 01       		.uleb128 0x1
 1942 005f 13       		.uleb128 0x13
 1943 0060 00       		.byte	0
 1944 0061 00       		.byte	0
 1945 0062 09       		.uleb128 0x9
 1946 0063 0D       		.uleb128 0xd
 1947 0064 00       		.byte	0
 1948 0065 03       		.uleb128 0x3
 1949 0066 08       		.uleb128 0x8
 1950 0067 3A       		.uleb128 0x3a
 1951 0068 0B       		.uleb128 0xb
 1952 0069 3B       		.uleb128 0x3b
 1953 006a 0B       		.uleb128 0xb
 1954 006b 49       		.uleb128 0x49
 1955 006c 13       		.uleb128 0x13
 1956 006d 38       		.uleb128 0x38
 1957 006e 0B       		.uleb128 0xb
 1958 006f 00       		.byte	0
 1959 0070 00       		.byte	0
 1960 0071 0A       		.uleb128 0xa
 1961 0072 2E       		.uleb128 0x2e
 1962 0073 01       		.byte	0x1
 1963 0074 3F       		.uleb128 0x3f
 1964 0075 19       		.uleb128 0x19
 1965 0076 03       		.uleb128 0x3
 1966 0077 0E       		.uleb128 0xe
 1967 0078 3A       		.uleb128 0x3a
 1968 0079 0B       		.uleb128 0xb
 1969 007a 3B       		.uleb128 0x3b
 1970 007b 0B       		.uleb128 0xb
 1971 007c 49       		.uleb128 0x49
 1972 007d 13       		.uleb128 0x13
 1973 007e 11       		.uleb128 0x11
 1974 007f 01       		.uleb128 0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 49


 1975 0080 12       		.uleb128 0x12
 1976 0081 06       		.uleb128 0x6
 1977 0082 40       		.uleb128 0x40
 1978 0083 18       		.uleb128 0x18
 1979 0084 9642     		.uleb128 0x2116
 1980 0086 19       		.uleb128 0x19
 1981 0087 01       		.uleb128 0x1
 1982 0088 13       		.uleb128 0x13
 1983 0089 00       		.byte	0
 1984 008a 00       		.byte	0
 1985 008b 0B       		.uleb128 0xb
 1986 008c 34       		.uleb128 0x34
 1987 008d 00       		.byte	0
 1988 008e 03       		.uleb128 0x3
 1989 008f 0E       		.uleb128 0xe
 1990 0090 3A       		.uleb128 0x3a
 1991 0091 0B       		.uleb128 0xb
 1992 0092 3B       		.uleb128 0x3b
 1993 0093 0B       		.uleb128 0xb
 1994 0094 49       		.uleb128 0x49
 1995 0095 13       		.uleb128 0x13
 1996 0096 02       		.uleb128 0x2
 1997 0097 17       		.uleb128 0x17
 1998 0098 00       		.byte	0
 1999 0099 00       		.byte	0
 2000 009a 0C       		.uleb128 0xc
 2001 009b 34       		.uleb128 0x34
 2002 009c 00       		.byte	0
 2003 009d 03       		.uleb128 0x3
 2004 009e 0E       		.uleb128 0xe
 2005 009f 3A       		.uleb128 0x3a
 2006 00a0 0B       		.uleb128 0xb
 2007 00a1 3B       		.uleb128 0x3b
 2008 00a2 0B       		.uleb128 0xb
 2009 00a3 49       		.uleb128 0x49
 2010 00a4 13       		.uleb128 0x13
 2011 00a5 1C       		.uleb128 0x1c
 2012 00a6 05       		.uleb128 0x5
 2013 00a7 00       		.byte	0
 2014 00a8 00       		.byte	0
 2015 00a9 0D       		.uleb128 0xd
 2016 00aa 34       		.uleb128 0x34
 2017 00ab 00       		.byte	0
 2018 00ac 03       		.uleb128 0x3
 2019 00ad 0E       		.uleb128 0xe
 2020 00ae 3A       		.uleb128 0x3a
 2021 00af 0B       		.uleb128 0xb
 2022 00b0 3B       		.uleb128 0x3b
 2023 00b1 0B       		.uleb128 0xb
 2024 00b2 49       		.uleb128 0x49
 2025 00b3 13       		.uleb128 0x13
 2026 00b4 1C       		.uleb128 0x1c
 2027 00b5 0D       		.uleb128 0xd
 2028 00b6 00       		.byte	0
 2029 00b7 00       		.byte	0
 2030 00b8 0E       		.uleb128 0xe
 2031 00b9 34       		.uleb128 0x34
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 50


 2032 00ba 00       		.byte	0
 2033 00bb 03       		.uleb128 0x3
 2034 00bc 08       		.uleb128 0x8
 2035 00bd 3A       		.uleb128 0x3a
 2036 00be 0B       		.uleb128 0xb
 2037 00bf 3B       		.uleb128 0x3b
 2038 00c0 0B       		.uleb128 0xb
 2039 00c1 49       		.uleb128 0x49
 2040 00c2 13       		.uleb128 0x13
 2041 00c3 02       		.uleb128 0x2
 2042 00c4 18       		.uleb128 0x18
 2043 00c5 00       		.byte	0
 2044 00c6 00       		.byte	0
 2045 00c7 0F       		.uleb128 0xf
 2046 00c8 898201   		.uleb128 0x4109
 2047 00cb 00       		.byte	0
 2048 00cc 11       		.uleb128 0x11
 2049 00cd 01       		.uleb128 0x1
 2050 00ce 31       		.uleb128 0x31
 2051 00cf 13       		.uleb128 0x13
 2052 00d0 00       		.byte	0
 2053 00d1 00       		.byte	0
 2054 00d2 10       		.uleb128 0x10
 2055 00d3 898201   		.uleb128 0x4109
 2056 00d6 01       		.byte	0x1
 2057 00d7 11       		.uleb128 0x11
 2058 00d8 01       		.uleb128 0x1
 2059 00d9 31       		.uleb128 0x31
 2060 00da 13       		.uleb128 0x13
 2061 00db 01       		.uleb128 0x1
 2062 00dc 13       		.uleb128 0x13
 2063 00dd 00       		.byte	0
 2064 00de 00       		.byte	0
 2065 00df 11       		.uleb128 0x11
 2066 00e0 8A8201   		.uleb128 0x410a
 2067 00e3 00       		.byte	0
 2068 00e4 02       		.uleb128 0x2
 2069 00e5 18       		.uleb128 0x18
 2070 00e6 9142     		.uleb128 0x2111
 2071 00e8 18       		.uleb128 0x18
 2072 00e9 00       		.byte	0
 2073 00ea 00       		.byte	0
 2074 00eb 12       		.uleb128 0x12
 2075 00ec 898201   		.uleb128 0x4109
 2076 00ef 01       		.byte	0x1
 2077 00f0 11       		.uleb128 0x11
 2078 00f1 01       		.uleb128 0x1
 2079 00f2 31       		.uleb128 0x31
 2080 00f3 13       		.uleb128 0x13
 2081 00f4 00       		.byte	0
 2082 00f5 00       		.byte	0
 2083 00f6 13       		.uleb128 0x13
 2084 00f7 2E       		.uleb128 0x2e
 2085 00f8 01       		.byte	0x1
 2086 00f9 3F       		.uleb128 0x3f
 2087 00fa 19       		.uleb128 0x19
 2088 00fb 03       		.uleb128 0x3
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 51


 2089 00fc 0E       		.uleb128 0xe
 2090 00fd 3A       		.uleb128 0x3a
 2091 00fe 0B       		.uleb128 0xb
 2092 00ff 3B       		.uleb128 0x3b
 2093 0100 05       		.uleb128 0x5
 2094 0101 27       		.uleb128 0x27
 2095 0102 19       		.uleb128 0x19
 2096 0103 49       		.uleb128 0x49
 2097 0104 13       		.uleb128 0x13
 2098 0105 11       		.uleb128 0x11
 2099 0106 01       		.uleb128 0x1
 2100 0107 12       		.uleb128 0x12
 2101 0108 06       		.uleb128 0x6
 2102 0109 40       		.uleb128 0x40
 2103 010a 18       		.uleb128 0x18
 2104 010b 9742     		.uleb128 0x2117
 2105 010d 19       		.uleb128 0x19
 2106 010e 01       		.uleb128 0x1
 2107 010f 13       		.uleb128 0x13
 2108 0110 00       		.byte	0
 2109 0111 00       		.byte	0
 2110 0112 14       		.uleb128 0x14
 2111 0113 05       		.uleb128 0x5
 2112 0114 00       		.byte	0
 2113 0115 03       		.uleb128 0x3
 2114 0116 0E       		.uleb128 0xe
 2115 0117 3A       		.uleb128 0x3a
 2116 0118 0B       		.uleb128 0xb
 2117 0119 3B       		.uleb128 0x3b
 2118 011a 05       		.uleb128 0x5
 2119 011b 49       		.uleb128 0x49
 2120 011c 13       		.uleb128 0x13
 2121 011d 02       		.uleb128 0x2
 2122 011e 17       		.uleb128 0x17
 2123 011f 00       		.byte	0
 2124 0120 00       		.byte	0
 2125 0121 15       		.uleb128 0x15
 2126 0122 05       		.uleb128 0x5
 2127 0123 00       		.byte	0
 2128 0124 03       		.uleb128 0x3
 2129 0125 08       		.uleb128 0x8
 2130 0126 3A       		.uleb128 0x3a
 2131 0127 0B       		.uleb128 0xb
 2132 0128 3B       		.uleb128 0x3b
 2133 0129 05       		.uleb128 0x5
 2134 012a 49       		.uleb128 0x49
 2135 012b 13       		.uleb128 0x13
 2136 012c 02       		.uleb128 0x2
 2137 012d 17       		.uleb128 0x17
 2138 012e 00       		.byte	0
 2139 012f 00       		.byte	0
 2140 0130 16       		.uleb128 0x16
 2141 0131 34       		.uleb128 0x34
 2142 0132 00       		.byte	0
 2143 0133 03       		.uleb128 0x3
 2144 0134 08       		.uleb128 0x8
 2145 0135 3A       		.uleb128 0x3a
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 52


 2146 0136 0B       		.uleb128 0xb
 2147 0137 3B       		.uleb128 0x3b
 2148 0138 05       		.uleb128 0x5
 2149 0139 49       		.uleb128 0x49
 2150 013a 13       		.uleb128 0x13
 2151 013b 02       		.uleb128 0x2
 2152 013c 17       		.uleb128 0x17
 2153 013d 00       		.byte	0
 2154 013e 00       		.byte	0
 2155 013f 17       		.uleb128 0x17
 2156 0140 34       		.uleb128 0x34
 2157 0141 00       		.byte	0
 2158 0142 03       		.uleb128 0x3
 2159 0143 0E       		.uleb128 0xe
 2160 0144 3A       		.uleb128 0x3a
 2161 0145 0B       		.uleb128 0xb
 2162 0146 3B       		.uleb128 0x3b
 2163 0147 05       		.uleb128 0x5
 2164 0148 49       		.uleb128 0x49
 2165 0149 13       		.uleb128 0x13
 2166 014a 3F       		.uleb128 0x3f
 2167 014b 19       		.uleb128 0x19
 2168 014c 3C       		.uleb128 0x3c
 2169 014d 19       		.uleb128 0x19
 2170 014e 00       		.byte	0
 2171 014f 00       		.byte	0
 2172 0150 18       		.uleb128 0x18
 2173 0151 35       		.uleb128 0x35
 2174 0152 00       		.byte	0
 2175 0153 49       		.uleb128 0x49
 2176 0154 13       		.uleb128 0x13
 2177 0155 00       		.byte	0
 2178 0156 00       		.byte	0
 2179 0157 19       		.uleb128 0x19
 2180 0158 2E       		.uleb128 0x2e
 2181 0159 00       		.byte	0
 2182 015a 3F       		.uleb128 0x3f
 2183 015b 19       		.uleb128 0x19
 2184 015c 03       		.uleb128 0x3
 2185 015d 0E       		.uleb128 0xe
 2186 015e 3A       		.uleb128 0x3a
 2187 015f 0B       		.uleb128 0xb
 2188 0160 3B       		.uleb128 0x3b
 2189 0161 0B       		.uleb128 0xb
 2190 0162 27       		.uleb128 0x27
 2191 0163 19       		.uleb128 0x19
 2192 0164 3C       		.uleb128 0x3c
 2193 0165 19       		.uleb128 0x19
 2194 0166 00       		.byte	0
 2195 0167 00       		.byte	0
 2196 0168 1A       		.uleb128 0x1a
 2197 0169 2E       		.uleb128 0x2e
 2198 016a 01       		.byte	0x1
 2199 016b 3F       		.uleb128 0x3f
 2200 016c 19       		.uleb128 0x19
 2201 016d 03       		.uleb128 0x3
 2202 016e 0E       		.uleb128 0xe
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 53


 2203 016f 3A       		.uleb128 0x3a
 2204 0170 0B       		.uleb128 0xb
 2205 0171 3B       		.uleb128 0x3b
 2206 0172 0B       		.uleb128 0xb
 2207 0173 3C       		.uleb128 0x3c
 2208 0174 19       		.uleb128 0x19
 2209 0175 01       		.uleb128 0x1
 2210 0176 13       		.uleb128 0x13
 2211 0177 00       		.byte	0
 2212 0178 00       		.byte	0
 2213 0179 1B       		.uleb128 0x1b
 2214 017a 18       		.uleb128 0x18
 2215 017b 00       		.byte	0
 2216 017c 00       		.byte	0
 2217 017d 00       		.byte	0
 2218 017e 1C       		.uleb128 0x1c
 2219 017f 2E       		.uleb128 0x2e
 2220 0180 01       		.byte	0x1
 2221 0181 3F       		.uleb128 0x3f
 2222 0182 19       		.uleb128 0x19
 2223 0183 03       		.uleb128 0x3
 2224 0184 0E       		.uleb128 0xe
 2225 0185 3A       		.uleb128 0x3a
 2226 0186 0B       		.uleb128 0xb
 2227 0187 3B       		.uleb128 0x3b
 2228 0188 0B       		.uleb128 0xb
 2229 0189 27       		.uleb128 0x27
 2230 018a 19       		.uleb128 0x19
 2231 018b 3C       		.uleb128 0x3c
 2232 018c 19       		.uleb128 0x19
 2233 018d 01       		.uleb128 0x1
 2234 018e 13       		.uleb128 0x13
 2235 018f 00       		.byte	0
 2236 0190 00       		.byte	0
 2237 0191 1D       		.uleb128 0x1d
 2238 0192 05       		.uleb128 0x5
 2239 0193 00       		.byte	0
 2240 0194 49       		.uleb128 0x49
 2241 0195 13       		.uleb128 0x13
 2242 0196 00       		.byte	0
 2243 0197 00       		.byte	0
 2244 0198 1E       		.uleb128 0x1e
 2245 0199 2E       		.uleb128 0x2e
 2246 019a 00       		.byte	0
 2247 019b 3F       		.uleb128 0x3f
 2248 019c 19       		.uleb128 0x19
 2249 019d 03       		.uleb128 0x3
 2250 019e 0E       		.uleb128 0xe
 2251 019f 3A       		.uleb128 0x3a
 2252 01a0 0B       		.uleb128 0xb
 2253 01a1 3B       		.uleb128 0x3b
 2254 01a2 0B       		.uleb128 0xb
 2255 01a3 27       		.uleb128 0x27
 2256 01a4 19       		.uleb128 0x19
 2257 01a5 49       		.uleb128 0x49
 2258 01a6 13       		.uleb128 0x13
 2259 01a7 3C       		.uleb128 0x3c
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 54


 2260 01a8 19       		.uleb128 0x19
 2261 01a9 00       		.byte	0
 2262 01aa 00       		.byte	0
 2263 01ab 00       		.byte	0
 2264              		.section	.debug_loc,"",%progbits
 2265              	.Ldebug_loc0:
 2266              	.LLST0:
 2267 0000 06000000 		.4byte	.LVL0
 2268 0004 7A000000 		.4byte	.LVL18
 2269 0008 0200     		.2byte	0x2
 2270 000a 30       		.byte	0x30
 2271 000b 9F       		.byte	0x9f
 2272 000c 7A000000 		.4byte	.LVL18
 2273 0010 02050000 		.4byte	.LVL205
 2274 0014 0100     		.2byte	0x1
 2275 0016 5B       		.byte	0x5b
 2276 0017 02050000 		.4byte	.LVL205
 2277 001b 06050000 		.4byte	.LVL206
 2278 001f 0200     		.2byte	0x2
 2279 0021 30       		.byte	0x30
 2280 0022 9F       		.byte	0x9f
 2281 0023 06050000 		.4byte	.LVL206
 2282 0027 48050000 		.4byte	.LFE63
 2283 002b 0100     		.2byte	0x1
 2284 002d 5B       		.byte	0x5b
 2285 002e 00000000 		.4byte	0
 2286 0032 00000000 		.4byte	0
 2287              	.LLST1:
 2288 0036 06000000 		.4byte	.LVL0
 2289 003a 4E000000 		.4byte	.LVL11
 2290 003e 0200     		.2byte	0x2
 2291 0040 30       		.byte	0x30
 2292 0041 9F       		.byte	0x9f
 2293 0042 4E000000 		.4byte	.LVL11
 2294 0046 54000000 		.4byte	.LVL13
 2295 004a 0100     		.2byte	0x1
 2296 004c 54       		.byte	0x54
 2297 004d 54000000 		.4byte	.LVL13
 2298 0051 5C000000 		.4byte	.LVL16
 2299 0055 0200     		.2byte	0x2
 2300 0057 31       		.byte	0x31
 2301 0058 9F       		.byte	0x9f
 2302 0059 5C000000 		.4byte	.LVL16
 2303 005d 72000000 		.4byte	.LVL17
 2304 0061 0100     		.2byte	0x1
 2305 0063 54       		.byte	0x54
 2306 0064 00000000 		.4byte	0
 2307 0068 00000000 		.4byte	0
 2308              	.LLST2:
 2309 006c 06000000 		.4byte	.LVL0
 2310 0070 7A000000 		.4byte	.LVL18
 2311 0074 0200     		.2byte	0x2
 2312 0076 30       		.byte	0x30
 2313 0077 9F       		.byte	0x9f
 2314 0078 7A000000 		.4byte	.LVL18
 2315 007c 62010000 		.4byte	.LVL53
 2316 0080 0100     		.2byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 55


 2317 0082 59       		.byte	0x59
 2318 0083 64010000 		.4byte	.LVL54
 2319 0087 68010000 		.4byte	.LVL55
 2320 008b 0100     		.2byte	0x1
 2321 008d 59       		.byte	0x59
 2322 008e 6A010000 		.4byte	.LVL56
 2323 0092 6E010000 		.4byte	.LVL57
 2324 0096 0100     		.2byte	0x1
 2325 0098 59       		.byte	0x59
 2326 0099 70010000 		.4byte	.LVL58
 2327 009d 48050000 		.4byte	.LFE63
 2328 00a1 0100     		.2byte	0x1
 2329 00a3 59       		.byte	0x59
 2330 00a4 00000000 		.4byte	0
 2331 00a8 00000000 		.4byte	0
 2332              	.LLST3:
 2333 00ac 06000000 		.4byte	.LVL0
 2334 00b0 7A000000 		.4byte	.LVL18
 2335 00b4 0200     		.2byte	0x2
 2336 00b6 30       		.byte	0x30
 2337 00b7 9F       		.byte	0x9f
 2338 00b8 7A000000 		.4byte	.LVL18
 2339 00bc 82000000 		.4byte	.LVL20
 2340 00c0 0100     		.2byte	0x1
 2341 00c2 58       		.byte	0x58
 2342 00c3 82000000 		.4byte	.LVL20
 2343 00c7 AC000000 		.4byte	.LVL26
 2344 00cb 0200     		.2byte	0x2
 2345 00cd 31       		.byte	0x31
 2346 00ce 9F       		.byte	0x9f
 2347 00cf AC000000 		.4byte	.LVL26
 2348 00d3 B4000000 		.4byte	.LVL27
 2349 00d7 0100     		.2byte	0x1
 2350 00d9 58       		.byte	0x58
 2351 00da B4000000 		.4byte	.LVL27
 2352 00de DC000000 		.4byte	.LVL33
 2353 00e2 0200     		.2byte	0x2
 2354 00e4 32       		.byte	0x32
 2355 00e5 9F       		.byte	0x9f
 2356 00e6 DC000000 		.4byte	.LVL33
 2357 00ea 48050000 		.4byte	.LFE63
 2358 00ee 0100     		.2byte	0x1
 2359 00f0 58       		.byte	0x58
 2360 00f1 00000000 		.4byte	0
 2361 00f5 00000000 		.4byte	0
 2362              	.LLST4:
 2363 00f9 06000000 		.4byte	.LVL0
 2364 00fd 7A000000 		.4byte	.LVL18
 2365 0101 0200     		.2byte	0x2
 2366 0103 30       		.byte	0x30
 2367 0104 9F       		.byte	0x9f
 2368 0105 7A000000 		.4byte	.LVL18
 2369 0109 48050000 		.4byte	.LFE63
 2370 010d 0100     		.2byte	0x1
 2371 010f 54       		.byte	0x54
 2372 0110 00000000 		.4byte	0
 2373 0114 00000000 		.4byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 56


 2374              	.LLST5:
 2375 0118 06000000 		.4byte	.LVL0
 2376 011c 7A000000 		.4byte	.LVL18
 2377 0120 0200     		.2byte	0x2
 2378 0122 30       		.byte	0x30
 2379 0123 9F       		.byte	0x9f
 2380 0124 7A000000 		.4byte	.LVL18
 2381 0128 D8040000 		.4byte	.LVL200
 2382 012c 0300     		.2byte	0x3
 2383 012e 91       		.byte	0x91
 2384 012f B87F     		.sleb128 -72
 2385 0131 D8040000 		.4byte	.LVL200
 2386 0135 DC040000 		.4byte	.LVL201
 2387 0139 0200     		.2byte	0x2
 2388 013b 30       		.byte	0x30
 2389 013c 9F       		.byte	0x9f
 2390 013d DC040000 		.4byte	.LVL201
 2391 0141 48050000 		.4byte	.LFE63
 2392 0145 0300     		.2byte	0x3
 2393 0147 91       		.byte	0x91
 2394 0148 B87F     		.sleb128 -72
 2395 014a 00000000 		.4byte	0
 2396 014e 00000000 		.4byte	0
 2397              	.LLST6:
 2398 0152 06000000 		.4byte	.LVL0
 2399 0156 7A000000 		.4byte	.LVL18
 2400 015a 0200     		.2byte	0x2
 2401 015c 30       		.byte	0x30
 2402 015d 9F       		.byte	0x9f
 2403 015e 7A000000 		.4byte	.LVL18
 2404 0162 7E000000 		.4byte	.LVL19
 2405 0166 0100     		.2byte	0x1
 2406 0168 53       		.byte	0x53
 2407 0169 7E000000 		.4byte	.LVL19
 2408 016d F0040000 		.4byte	.LVL202
 2409 0171 0300     		.2byte	0x3
 2410 0173 91       		.byte	0x91
 2411 0174 BC7F     		.sleb128 -68
 2412 0176 F0040000 		.4byte	.LVL202
 2413 017a F4040000 		.4byte	.LVL203
 2414 017e 0200     		.2byte	0x2
 2415 0180 31       		.byte	0x31
 2416 0181 9F       		.byte	0x9f
 2417 0182 F4040000 		.4byte	.LVL203
 2418 0186 48050000 		.4byte	.LFE63
 2419 018a 0300     		.2byte	0x3
 2420 018c 91       		.byte	0x91
 2421 018d BC7F     		.sleb128 -68
 2422 018f 00000000 		.4byte	0
 2423 0193 00000000 		.4byte	0
 2424              	.LLST7:
 2425 0197 06000000 		.4byte	.LVL0
 2426 019b E6000000 		.4byte	.LVL34
 2427 019f 0200     		.2byte	0x2
 2428 01a1 30       		.byte	0x30
 2429 01a2 9F       		.byte	0x9f
 2430 01a3 E6000000 		.4byte	.LVL34
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 57


 2431 01a7 DC010000 		.4byte	.LVL74
 2432 01ab 0100     		.2byte	0x1
 2433 01ad 57       		.byte	0x57
 2434 01ae FC010000 		.4byte	.LVL80
 2435 01b2 3A020000 		.4byte	.LVL90
 2436 01b6 0100     		.2byte	0x1
 2437 01b8 5A       		.byte	0x5a
 2438 01b9 3A020000 		.4byte	.LVL90
 2439 01bd 44020000 		.4byte	.LVL93
 2440 01c1 0100     		.2byte	0x1
 2441 01c3 57       		.byte	0x57
 2442 01c4 64020000 		.4byte	.LVL99
 2443 01c8 A2020000 		.4byte	.LVL109
 2444 01cc 0100     		.2byte	0x1
 2445 01ce 5A       		.byte	0x5a
 2446 01cf A2020000 		.4byte	.LVL109
 2447 01d3 E8020000 		.4byte	.LVL114
 2448 01d7 0100     		.2byte	0x1
 2449 01d9 57       		.byte	0x57
 2450 01da 06030000 		.4byte	.LVL120
 2451 01de 4C030000 		.4byte	.LVL133
 2452 01e2 0100     		.2byte	0x1
 2453 01e4 57       		.byte	0x57
 2454 01e5 6A030000 		.4byte	.LVL139
 2455 01e9 C2030000 		.4byte	.LVL154
 2456 01ed 0100     		.2byte	0x1
 2457 01ef 57       		.byte	0x57
 2458 01f0 E0030000 		.4byte	.LVL160
 2459 01f4 28040000 		.4byte	.LVL173
 2460 01f8 0100     		.2byte	0x1
 2461 01fa 57       		.byte	0x57
 2462 01fb 46040000 		.4byte	.LVL179
 2463 01ff AE040000 		.4byte	.LVL196
 2464 0203 0100     		.2byte	0x1
 2465 0205 57       		.byte	0x57
 2466 0206 AE040000 		.4byte	.LVL196
 2467 020a 48050000 		.4byte	.LFE63
 2468 020e 0200     		.2byte	0x2
 2469 0210 30       		.byte	0x30
 2470 0211 9F       		.byte	0x9f
 2471 0212 00000000 		.4byte	0
 2472 0216 00000000 		.4byte	0
 2473              	.LLST8:
 2474 021a 06000000 		.4byte	.LVL0
 2475 021e 7A000000 		.4byte	.LVL18
 2476 0222 0200     		.2byte	0x2
 2477 0224 30       		.byte	0x30
 2478 0225 9F       		.byte	0x9f
 2479 0226 7A000000 		.4byte	.LVL18
 2480 022a 84000000 		.4byte	.LVL21
 2481 022e 0100     		.2byte	0x1
 2482 0230 55       		.byte	0x55
 2483 0231 84000000 		.4byte	.LVL21
 2484 0235 8B000000 		.4byte	.LVL22-1
 2485 0239 0100     		.2byte	0x1
 2486 023b 53       		.byte	0x53
 2487 023c 8B000000 		.4byte	.LVL22-1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 58


 2488 0240 B6000000 		.4byte	.LVL28
 2489 0244 0100     		.2byte	0x1
 2490 0246 55       		.byte	0x55
 2491 0247 B6000000 		.4byte	.LVL28
 2492 024b BD000000 		.4byte	.LVL29-1
 2493 024f 0100     		.2byte	0x1
 2494 0251 53       		.byte	0x53
 2495 0252 BD000000 		.4byte	.LVL29-1
 2496 0256 48050000 		.4byte	.LFE63
 2497 025a 0100     		.2byte	0x1
 2498 025c 55       		.byte	0x55
 2499 025d 00000000 		.4byte	0
 2500 0261 00000000 		.4byte	0
 2501              	.LLST9:
 2502 0265 06000000 		.4byte	.LVL0
 2503 0269 7A000000 		.4byte	.LVL18
 2504 026d 0200     		.2byte	0x2
 2505 026f 30       		.byte	0x30
 2506 0270 9F       		.byte	0x9f
 2507 0271 7A000000 		.4byte	.LVL18
 2508 0275 94000000 		.4byte	.LVL25
 2509 0279 0300     		.2byte	0x3
 2510 027b 91       		.byte	0x91
 2511 027c B07F     		.sleb128 -80
 2512 027e 94000000 		.4byte	.LVL25
 2513 0282 AC000000 		.4byte	.LVL26
 2514 0286 0400     		.2byte	0x4
 2515 0288 0A       		.byte	0xa
 2516 0289 BC34     		.2byte	0x34bc
 2517 028b 9F       		.byte	0x9f
 2518 028c AC000000 		.4byte	.LVL26
 2519 0290 C6000000 		.4byte	.LVL32
 2520 0294 0300     		.2byte	0x3
 2521 0296 91       		.byte	0x91
 2522 0297 B07F     		.sleb128 -80
 2523 0299 C6000000 		.4byte	.LVL32
 2524 029d DC000000 		.4byte	.LVL33
 2525 02a1 0400     		.2byte	0x4
 2526 02a3 0A       		.byte	0xa
 2527 02a4 9E46     		.2byte	0x469e
 2528 02a6 9F       		.byte	0x9f
 2529 02a7 DC000000 		.4byte	.LVL33
 2530 02ab 48050000 		.4byte	.LFE63
 2531 02af 0300     		.2byte	0x3
 2532 02b1 91       		.byte	0x91
 2533 02b2 B07F     		.sleb128 -80
 2534 02b4 00000000 		.4byte	0
 2535 02b8 00000000 		.4byte	0
 2536              	.LLST10:
 2537 02bc 06000000 		.4byte	.LVL0
 2538 02c0 7A000000 		.4byte	.LVL18
 2539 02c4 0200     		.2byte	0x2
 2540 02c6 30       		.byte	0x30
 2541 02c7 9F       		.byte	0x9f
 2542 02c8 7A000000 		.4byte	.LVL18
 2543 02cc 94000000 		.4byte	.LVL25
 2544 02d0 0300     		.2byte	0x3
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 59


 2545 02d2 91       		.byte	0x91
 2546 02d3 AC7F     		.sleb128 -84
 2547 02d5 94000000 		.4byte	.LVL25
 2548 02d9 AC000000 		.4byte	.LVL26
 2549 02dd 0400     		.2byte	0x4
 2550 02df 0A       		.byte	0xa
 2551 02e0 5046     		.2byte	0x4650
 2552 02e2 9F       		.byte	0x9f
 2553 02e3 AC000000 		.4byte	.LVL26
 2554 02e7 C6000000 		.4byte	.LVL32
 2555 02eb 0300     		.2byte	0x3
 2556 02ed 91       		.byte	0x91
 2557 02ee AC7F     		.sleb128 -84
 2558 02f0 C6000000 		.4byte	.LVL32
 2559 02f4 DC000000 		.4byte	.LVL33
 2560 02f8 0400     		.2byte	0x4
 2561 02fa 0A       		.byte	0xa
 2562 02fb 4858     		.2byte	0x5848
 2563 02fd 9F       		.byte	0x9f
 2564 02fe DC000000 		.4byte	.LVL33
 2565 0302 48050000 		.4byte	.LFE63
 2566 0306 0300     		.2byte	0x3
 2567 0308 91       		.byte	0x91
 2568 0309 AC7F     		.sleb128 -84
 2569 030b 00000000 		.4byte	0
 2570 030f 00000000 		.4byte	0
 2571              	.LLST11:
 2572 0313 06000000 		.4byte	.LVL0
 2573 0317 7A000000 		.4byte	.LVL18
 2574 031b 0600     		.2byte	0x6
 2575 031d 9E       		.byte	0x9e
 2576 031e 04       		.uleb128 0x4
 2577 031f 007EBB46 		.4byte	0x46bb7e00
 2578 0323 7A000000 		.4byte	.LVL18
 2579 0327 8E000000 		.4byte	.LVL23
 2580 032b 0100     		.2byte	0x1
 2581 032d 56       		.byte	0x56
 2582 032e 8E000000 		.4byte	.LVL23
 2583 0332 90000000 		.4byte	.LVL24
 2584 0336 0100     		.2byte	0x1
 2585 0338 50       		.byte	0x50
 2586 0339 90000000 		.4byte	.LVL24
 2587 033d C0000000 		.4byte	.LVL30
 2588 0341 0100     		.2byte	0x1
 2589 0343 56       		.byte	0x56
 2590 0344 C0000000 		.4byte	.LVL30
 2591 0348 C2000000 		.4byte	.LVL31
 2592 034c 0100     		.2byte	0x1
 2593 034e 50       		.byte	0x50
 2594 034f C2000000 		.4byte	.LVL31
 2595 0353 E6000000 		.4byte	.LVL34
 2596 0357 0100     		.2byte	0x1
 2597 0359 56       		.byte	0x56
 2598 035a E6000000 		.4byte	.LVL34
 2599 035e E8000000 		.4byte	.LVL35
 2600 0362 0200     		.2byte	0x2
 2601 0364 7D       		.byte	0x7d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 60


 2602 0365 00       		.sleb128 0
 2603 0366 E8000000 		.4byte	.LVL35
 2604 036a 22010000 		.4byte	.LVL46
 2605 036e 0100     		.2byte	0x1
 2606 0370 56       		.byte	0x56
 2607 0371 A2040000 		.4byte	.LVL194
 2608 0375 B6040000 		.4byte	.LVL198
 2609 0379 0200     		.2byte	0x2
 2610 037b 7D       		.byte	0x7d
 2611 037c 00       		.sleb128 0
 2612 037d B6040000 		.4byte	.LVL198
 2613 0381 48050000 		.4byte	.LFE63
 2614 0385 0100     		.2byte	0x1
 2615 0387 56       		.byte	0x56
 2616 0388 00000000 		.4byte	0
 2617 038c 00000000 		.4byte	0
 2618              	.LLST12:
 2619 0390 06000000 		.4byte	.LVL0
 2620 0394 7A000000 		.4byte	.LVL18
 2621 0398 0600     		.2byte	0x6
 2622 039a 9E       		.byte	0x9e
 2623 039b 04       		.uleb128 0x4
 2624 039c 007EBB46 		.4byte	0x46bb7e00
 2625 03a0 E6000000 		.4byte	.LVL34
 2626 03a4 E8000000 		.4byte	.LVL35
 2627 03a8 0200     		.2byte	0x2
 2628 03aa 7D       		.byte	0x7d
 2629 03ab 00       		.sleb128 0
 2630 03ac 08010000 		.4byte	.LVL40
 2631 03b0 0A010000 		.4byte	.LVL41
 2632 03b4 0100     		.2byte	0x1
 2633 03b6 50       		.byte	0x50
 2634 03b7 18010000 		.4byte	.LVL44
 2635 03bb B6040000 		.4byte	.LVL198
 2636 03bf 0200     		.2byte	0x2
 2637 03c1 7D       		.byte	0x7d
 2638 03c2 00       		.sleb128 0
 2639 03c3 00000000 		.4byte	0
 2640 03c7 00000000 		.4byte	0
 2641              	.LLST13:
 2642 03cb 06000000 		.4byte	.LVL0
 2643 03cf 7A000000 		.4byte	.LVL18
 2644 03d3 0600     		.2byte	0x6
 2645 03d5 9E       		.byte	0x9e
 2646 03d6 04       		.uleb128 0x4
 2647 03d7 00000000 		.4byte	0
 2648 03db 22010000 		.4byte	.LVL46
 2649 03df 27010000 		.4byte	.LVL47-1
 2650 03e3 0100     		.2byte	0x1
 2651 03e5 50       		.byte	0x50
 2652 03e6 27010000 		.4byte	.LVL47-1
 2653 03ea A4010000 		.4byte	.LVL63
 2654 03ee 0100     		.2byte	0x1
 2655 03f0 56       		.byte	0x56
 2656 03f1 C4010000 		.4byte	.LVL70
 2657 03f5 06020000 		.4byte	.LVL82
 2658 03f9 0100     		.2byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 61


 2659 03fb 56       		.byte	0x56
 2660 03fc 3C020000 		.4byte	.LVL91
 2661 0400 6E020000 		.4byte	.LVL101
 2662 0404 0100     		.2byte	0x1
 2663 0406 56       		.byte	0x56
 2664 0407 D0020000 		.4byte	.LVL110
 2665 040b 10030000 		.4byte	.LVL122
 2666 040f 0100     		.2byte	0x1
 2667 0411 56       		.byte	0x56
 2668 0412 44030000 		.4byte	.LVL131
 2669 0416 74030000 		.4byte	.LVL141
 2670 041a 0100     		.2byte	0x1
 2671 041c 56       		.byte	0x56
 2672 041d AA030000 		.4byte	.LVL150
 2673 0421 EA030000 		.4byte	.LVL162
 2674 0425 0100     		.2byte	0x1
 2675 0427 56       		.byte	0x56
 2676 0428 20040000 		.4byte	.LVL171
 2677 042c 50040000 		.4byte	.LVL181
 2678 0430 0100     		.2byte	0x1
 2679 0432 56       		.byte	0x56
 2680 0433 86040000 		.4byte	.LVL190
 2681 0437 88040000 		.4byte	.LVL191
 2682 043b 0100     		.2byte	0x1
 2683 043d 56       		.byte	0x56
 2684 043e 00000000 		.4byte	0
 2685 0442 00000000 		.4byte	0
 2686              	.LLST14:
 2687 0446 06000000 		.4byte	.LVL0
 2688 044a 7A000000 		.4byte	.LVL18
 2689 044e 0200     		.2byte	0x2
 2690 0450 30       		.byte	0x30
 2691 0451 9F       		.byte	0x9f
 2692 0452 7A000000 		.4byte	.LVL18
 2693 0456 94000000 		.4byte	.LVL25
 2694 045a 0300     		.2byte	0x3
 2695 045c 91       		.byte	0x91
 2696 045d B47F     		.sleb128 -76
 2697 045f 94000000 		.4byte	.LVL25
 2698 0463 AC000000 		.4byte	.LVL26
 2699 0467 0400     		.2byte	0x4
 2700 0469 0A       		.byte	0xa
 2701 046a 803E     		.2byte	0x3e80
 2702 046c 9F       		.byte	0x9f
 2703 046d AC000000 		.4byte	.LVL26
 2704 0471 C6000000 		.4byte	.LVL32
 2705 0475 0300     		.2byte	0x3
 2706 0477 91       		.byte	0x91
 2707 0478 B47F     		.sleb128 -76
 2708 047a C6000000 		.4byte	.LVL32
 2709 047e DC000000 		.4byte	.LVL33
 2710 0482 0400     		.2byte	0x4
 2711 0484 0A       		.byte	0xa
 2712 0485 004B     		.2byte	0x4b00
 2713 0487 9F       		.byte	0x9f
 2714 0488 DC000000 		.4byte	.LVL33
 2715 048c 48050000 		.4byte	.LFE63
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 62


 2716 0490 0300     		.2byte	0x3
 2717 0492 91       		.byte	0x91
 2718 0493 B47F     		.sleb128 -76
 2719 0495 00000000 		.4byte	0
 2720 0499 00000000 		.4byte	0
 2721              	.LLST15:
 2722 049d 52000000 		.4byte	.LVL12
 2723 04a1 56000000 		.4byte	.LVL14
 2724 04a5 0100     		.2byte	0x1
 2725 04a7 50       		.byte	0x50
 2726 04a8 00000000 		.4byte	0
 2727 04ac 00000000 		.4byte	0
 2728              	.LLST16:
 2729 04b0 00000000 		.4byte	.LVL208
 2730 04b4 0A000000 		.4byte	.LVL210
 2731 04b8 0100     		.2byte	0x1
 2732 04ba 50       		.byte	0x50
 2733 04bb 0A000000 		.4byte	.LVL210
 2734 04bf 2A000000 		.4byte	.LFE64
 2735 04c3 0400     		.2byte	0x4
 2736 04c5 F3       		.byte	0xf3
 2737 04c6 01       		.uleb128 0x1
 2738 04c7 50       		.byte	0x50
 2739 04c8 9F       		.byte	0x9f
 2740 04c9 00000000 		.4byte	0
 2741 04cd 00000000 		.4byte	0
 2742              	.LLST17:
 2743 04d1 00000000 		.4byte	.LVL208
 2744 04d5 0A000000 		.4byte	.LVL210
 2745 04d9 0100     		.2byte	0x1
 2746 04db 51       		.byte	0x51
 2747 04dc 0A000000 		.4byte	.LVL210
 2748 04e0 18000000 		.4byte	.LVL212
 2749 04e4 0100     		.2byte	0x1
 2750 04e6 54       		.byte	0x54
 2751 04e7 18000000 		.4byte	.LVL212
 2752 04eb 22000000 		.4byte	.LVL215
 2753 04ef 0100     		.2byte	0x1
 2754 04f1 56       		.byte	0x56
 2755 04f2 22000000 		.4byte	.LVL215
 2756 04f6 2A000000 		.4byte	.LFE64
 2757 04fa 0100     		.2byte	0x1
 2758 04fc 54       		.byte	0x54
 2759 04fd 00000000 		.4byte	0
 2760 0501 00000000 		.4byte	0
 2761              	.LLST18:
 2762 0505 00000000 		.4byte	.LVL208
 2763 0509 0A000000 		.4byte	.LVL210
 2764 050d 0100     		.2byte	0x1
 2765 050f 52       		.byte	0x52
 2766 0510 0A000000 		.4byte	.LVL210
 2767 0514 2A000000 		.4byte	.LFE64
 2768 0518 0100     		.2byte	0x1
 2769 051a 57       		.byte	0x57
 2770 051b 00000000 		.4byte	0
 2771 051f 00000000 		.4byte	0
 2772              	.LLST19:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 63


 2773 0523 06000000 		.4byte	.LVL209
 2774 0527 0A000000 		.4byte	.LVL210
 2775 052b 0200     		.2byte	0x2
 2776 052d 30       		.byte	0x30
 2777 052e 9F       		.byte	0x9f
 2778 052f 0A000000 		.4byte	.LVL210
 2779 0533 2A000000 		.4byte	.LFE64
 2780 0537 0100     		.2byte	0x1
 2781 0539 55       		.byte	0x55
 2782 053a 00000000 		.4byte	0
 2783 053e 00000000 		.4byte	0
 2784              	.LLST20:
 2785 0542 00000000 		.4byte	.LVL216
 2786 0546 0A000000 		.4byte	.LVL218
 2787 054a 0100     		.2byte	0x1
 2788 054c 50       		.byte	0x50
 2789 054d 0A000000 		.4byte	.LVL218
 2790 0551 38000000 		.4byte	.LFE65
 2791 0555 0400     		.2byte	0x4
 2792 0557 F3       		.byte	0xf3
 2793 0558 01       		.uleb128 0x1
 2794 0559 50       		.byte	0x50
 2795 055a 9F       		.byte	0x9f
 2796 055b 00000000 		.4byte	0
 2797 055f 00000000 		.4byte	0
 2798              	.LLST21:
 2799 0563 00000000 		.4byte	.LVL216
 2800 0567 0A000000 		.4byte	.LVL218
 2801 056b 0100     		.2byte	0x1
 2802 056d 51       		.byte	0x51
 2803 056e 0A000000 		.4byte	.LVL218
 2804 0572 26000000 		.4byte	.LVL225
 2805 0576 0100     		.2byte	0x1
 2806 0578 57       		.byte	0x57
 2807 0579 26000000 		.4byte	.LVL225
 2808 057d 30000000 		.4byte	.LVL227
 2809 0581 0100     		.2byte	0x1
 2810 0583 53       		.byte	0x53
 2811 0584 30000000 		.4byte	.LVL227
 2812 0588 34000000 		.4byte	.LVL228
 2813 058c 0100     		.2byte	0x1
 2814 058e 57       		.byte	0x57
 2815 058f 00000000 		.4byte	0
 2816 0593 00000000 		.4byte	0
 2817              	.LLST22:
 2818 0597 00000000 		.4byte	.LVL216
 2819 059b 0A000000 		.4byte	.LVL218
 2820 059f 0100     		.2byte	0x1
 2821 05a1 52       		.byte	0x52
 2822 05a2 0A000000 		.4byte	.LVL218
 2823 05a6 38000000 		.4byte	.LFE65
 2824 05aa 0100     		.2byte	0x1
 2825 05ac 54       		.byte	0x54
 2826 05ad 00000000 		.4byte	0
 2827 05b1 00000000 		.4byte	0
 2828              	.LLST23:
 2829 05b5 06000000 		.4byte	.LVL217
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 64


 2830 05b9 0A000000 		.4byte	.LVL218
 2831 05bd 0200     		.2byte	0x2
 2832 05bf 30       		.byte	0x30
 2833 05c0 9F       		.byte	0x9f
 2834 05c1 0A000000 		.4byte	.LVL218
 2835 05c5 38000000 		.4byte	.LFE65
 2836 05c9 0100     		.2byte	0x1
 2837 05cb 56       		.byte	0x56
 2838 05cc 00000000 		.4byte	0
 2839 05d0 00000000 		.4byte	0
 2840              	.LLST24:
 2841 05d4 0E000000 		.4byte	.LVL219
 2842 05d8 15000000 		.4byte	.LVL220-1
 2843 05dc 0100     		.2byte	0x1
 2844 05de 50       		.byte	0x50
 2845 05df 1C000000 		.4byte	.LVL222
 2846 05e3 24000000 		.4byte	.LVL224
 2847 05e7 0200     		.2byte	0x2
 2848 05e9 3A       		.byte	0x3a
 2849 05ea 9F       		.byte	0x9f
 2850 05eb 24000000 		.4byte	.LVL224
 2851 05ef 30000000 		.4byte	.LVL227
 2852 05f3 0100     		.2byte	0x1
 2853 05f5 55       		.byte	0x55
 2854 05f6 00000000 		.4byte	0
 2855 05fa 00000000 		.4byte	0
 2856              		.section	.debug_aranges,"",%progbits
 2857 0000 2C000000 		.4byte	0x2c
 2858 0004 0200     		.2byte	0x2
 2859 0006 00000000 		.4byte	.Ldebug_info0
 2860 000a 04       		.byte	0x4
 2861 000b 00       		.byte	0
 2862 000c 0000     		.2byte	0
 2863 000e 0000     		.2byte	0
 2864 0010 00000000 		.4byte	.LFB63
 2865 0014 48050000 		.4byte	.LFE63-.LFB63
 2866 0018 00000000 		.4byte	.LFB64
 2867 001c 2A000000 		.4byte	.LFE64-.LFB64
 2868 0020 00000000 		.4byte	.LFB65
 2869 0024 38000000 		.4byte	.LFE65-.LFB65
 2870 0028 00000000 		.4byte	0
 2871 002c 00000000 		.4byte	0
 2872              		.section	.debug_ranges,"",%progbits
 2873              	.Ldebug_ranges0:
 2874 0000 00000000 		.4byte	.LFB63
 2875 0004 48050000 		.4byte	.LFE63
 2876 0008 00000000 		.4byte	.LFB64
 2877 000c 2A000000 		.4byte	.LFE64
 2878 0010 00000000 		.4byte	.LFB65
 2879 0014 38000000 		.4byte	.LFE65
 2880 0018 00000000 		.4byte	0
 2881 001c 00000000 		.4byte	0
 2882              		.section	.debug_line,"",%progbits
 2883              	.Ldebug_line0:
 2884 0000 F6020000 		.section	.debug_str,"MS",%progbits,1
 2884      0200C301 
 2884      00000201 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 65


 2884      FB0E0D00 
 2884      01010101 
 2885              	.LASF71:
 2886 0000 55415254 		.ascii	"UART_1_GetChar\000"
 2886      5F315F47 
 2886      65744368 
 2886      617200
 2887              	.LASF2:
 2888 000f 73686F72 		.ascii	"short int\000"
 2888      7420696E 
 2888      7400
 2889              	.LASF19:
 2890 0019 73697A65 		.ascii	"sizetype\000"
 2890      74797065 
 2890      00
 2891              	.LASF24:
 2892 0022 64696666 		.ascii	"diff_Fast\000"
 2892      5F466173 
 2892      7400
 2893              	.LASF39:
 2894 002c 6D617844 		.ascii	"maxDiff_l1\000"
 2894      6966665F 
 2894      6C3100
 2895              	.LASF21:
 2896 0037 6379636C 		.ascii	"cycles\000"
 2896      657300
 2897              	.LASF76:
 2898 003e 6D61696E 		.ascii	"main\000"
 2898      00
 2899              	.LASF50:
 2900 0043 5F777269 		.ascii	"_write\000"
 2900      746500
 2901              	.LASF66:
 2902 004a 52696768 		.ascii	"Right_turn\000"
 2902      745F7475 
 2902      726E00
 2903              	.LASF4:
 2904 0055 5F5F7569 		.ascii	"__uint16_t\000"
 2904      6E743136 
 2904      5F7400
 2905              	.LASF49:
 2906 0060 66696C65 		.ascii	"file\000"
 2906      00
 2907              	.LASF75:
 2908 0065 73656E73 		.ascii	"sensors_\000"
 2908      6F72735F 
 2908      00
 2909              	.LASF32:
 2910 006e 626C6163 		.ascii	"black_threshold_l1\000"
 2910      6B5F7468 
 2910      72657368 
 2910      6F6C645F 
 2910      6C3100
 2911              	.LASF31:
 2912 0081 626C6163 		.ascii	"black_threshold_l3\000"
 2912      6B5F7468 
 2912      72657368 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 66


 2912      6F6C645F 
 2912      6C3300
 2913              	.LASF13:
 2914 0094 75696E74 		.ascii	"uint8\000"
 2914      3800
 2915              	.LASF55:
 2916 009a 4D656173 		.ascii	"Measure_Voltage\000"
 2916      7572655F 
 2916      566F6C74 
 2916      61676500 
 2917              	.LASF60:
 2918 00aa 7265666C 		.ascii	"reflectance_start\000"
 2918      65637461 
 2918      6E63655F 
 2918      73746172 
 2918      7400
 2919              	.LASF53:
 2920 00bc 55415254 		.ascii	"UART_1_Start\000"
 2920      5F315F53 
 2920      74617274 
 2920      00
 2921              	.LASF69:
 2922 00c9 55415254 		.ascii	"UART_1_PutChar\000"
 2922      5F315F50 
 2922      75744368 
 2922      617200
 2923              	.LASF15:
 2924 00d8 666C6F61 		.ascii	"float\000"
 2924      7400
 2925              	.LASF23:
 2926 00de 64696666 		.ascii	"diffCase\000"
 2926      43617365 
 2926      00
 2927              	.LASF8:
 2928 00e7 6C6F6E67 		.ascii	"long long int\000"
 2928      206C6F6E 
 2928      6720696E 
 2928      7400
 2929              	.LASF18:
 2930 00f5 63796973 		.ascii	"cyisraddress\000"
 2930      72616464 
 2930      72657373 
 2930      00
 2931              	.LASF65:
 2932 0102 7265666C 		.ascii	"reflectance_digital\000"
 2932      65637461 
 2932      6E63655F 
 2932      64696769 
 2932      74616C00 
 2933              	.LASF17:
 2934 0116 63686172 		.ascii	"char\000"
 2934      00
 2935              	.LASF43:
 2936 011b 626C6163 		.ascii	"black_threshold\000"
 2936      6B5F7468 
 2936      72657368 
 2936      6F6C6400 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 67


 2937              	.LASF28:
 2938 012b 65786974 		.ascii	"exitMainLoop\000"
 2938      4D61696E 
 2938      4C6F6F70 
 2938      00
 2939              	.LASF48:
 2940 0138 62757474 		.ascii	"button\000"
 2940      6F6E00
 2941              	.LASF68:
 2942 013f 43757374 		.ascii	"Custom_forward\000"
 2942      6F6D5F66 
 2942      6F727761 
 2942      726400
 2943              	.LASF1:
 2944 014e 756E7369 		.ascii	"unsigned char\000"
 2944      676E6564 
 2944      20636861 
 2944      7200
 2945              	.LASF22:
 2946 015c 65786974 		.ascii	"exit\000"
 2946      00
 2947              	.LASF44:
 2948 0161 626C6163 		.ascii	"blackness_1\000"
 2948      6B6E6573 
 2948      735F3100 
 2949              	.LASF20:
 2950 016d 6C6F6E67 		.ascii	"long double\000"
 2950      20646F75 
 2950      626C6500 
 2951              	.LASF45:
 2952 0179 626C6163 		.ascii	"blackness_2\000"
 2952      6B6E6573 
 2952      735F3200 
 2953              	.LASF54:
 2954 0185 4144435F 		.ascii	"ADC_Battery_Start\000"
 2954      42617474 
 2954      6572795F 
 2954      53746172 
 2954      7400
 2955              	.LASF67:
 2956 0197 4C656674 		.ascii	"Left_turn\000"
 2956      5F747572 
 2956      6E00
 2957              	.LASF27:
 2958 01a1 696E426C 		.ascii	"inBlack\000"
 2958      61636B00 
 2959              	.LASF59:
 2960 01a9 7265666C 		.ascii	"reflectance_set_threshold\000"
 2960      65637461 
 2960      6E63655F 
 2960      7365745F 
 2960      74687265 
 2961              	.LASF51:
 2962 01c3 5F726561 		.ascii	"_read\000"
 2962      6400
 2963              	.LASF37:
 2964 01c9 77686974 		.ascii	"white_threshold_r1\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 68


 2964      655F7468 
 2964      72657368 
 2964      6F6C645F 
 2964      723100
 2965              	.LASF0:
 2966 01dc 7369676E 		.ascii	"signed char\000"
 2966      65642063 
 2966      68617200 
 2967              	.LASF38:
 2968 01e8 77686974 		.ascii	"white_threshold_r3\000"
 2968      655F7468 
 2968      72657368 
 2968      6F6C645F 
 2968      723300
 2969              	.LASF9:
 2970 01fb 6C6F6E67 		.ascii	"long long unsigned int\000"
 2970      206C6F6E 
 2970      6720756E 
 2970      7369676E 
 2970      65642069 
 2971              	.LASF10:
 2972 0212 756E7369 		.ascii	"unsigned int\000"
 2972      676E6564 
 2972      20696E74 
 2972      00
 2973              	.LASF11:
 2974 021f 75696E74 		.ascii	"uint16_t\000"
 2974      31365F74 
 2974      00
 2975              	.LASF29:
 2976 0228 7475726E 		.ascii	"turn\000"
 2976      00
 2977              	.LASF30:
 2978 022d 73706565 		.ascii	"speed\000"
 2978      6400
 2979              	.LASF3:
 2980 0233 73686F72 		.ascii	"short unsigned int\000"
 2980      7420756E 
 2980      7369676E 
 2980      65642069 
 2980      6E7400
 2981              	.LASF57:
 2982 0246 6D6F746F 		.ascii	"motor_forward\000"
 2982      725F666F 
 2982      72776172 
 2982      6400
 2983              	.LASF26:
 2984 0254 636F756E 		.ascii	"countLines\000"
 2984      744C696E 
 2984      657300
 2985              	.LASF6:
 2986 025f 6C6F6E67 		.ascii	"long int\000"
 2986      20696E74 
 2986      00
 2987              	.LASF46:
 2988 0268 626C6163 		.ascii	"blackDiff\000"
 2988      6B446966 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 69


 2988      6600
 2989              	.LASF12:
 2990 0272 696E7433 		.ascii	"int32_t\000"
 2990      325F7400 
 2991              	.LASF74:
 2992 027a 433A5C55 		.ascii	"C:\\Users\\Ville L\\Desktop\\Zumo_Robotti\\Zumo_Rob"
 2992      73657273 
 2992      5C56696C 
 2992      6C65204C 
 2992      5C446573 
 2993 02a8 6F747469 		.ascii	"otti\\ZumoBot.cydsn\000"
 2993      5C5A756D 
 2993      6F426F74 
 2993      2E637964 
 2993      736E00
 2994              	.LASF47:
 2995 02bb 6E656172 		.ascii	"near_BlackThreshold\000"
 2995      5F426C61 
 2995      636B5468 
 2995      72657368 
 2995      6F6C6400 
 2996              	.LASF42:
 2997 02cf 6D617844 		.ascii	"maxDiff\000"
 2997      69666600 
 2998              	.LASF62:
 2999 02d7 42617474 		.ascii	"BatteryLed_Write\000"
 2999      6572794C 
 2999      65645F57 
 2999      72697465 
 2999      00
 3000              	.LASF70:
 3001 02e8 5357315F 		.ascii	"SW1_Read\000"
 3001      52656164 
 3001      00
 3002              	.LASF14:
 3003 02f1 75696E74 		.ascii	"uint32\000"
 3003      333200
 3004              	.LASF73:
 3005 02f8 6D61696E 		.ascii	"main.c\000"
 3005      2E6300
 3006              	.LASF40:
 3007 02ff 6D617844 		.ascii	"maxDiff_r1\000"
 3007      6966665F 
 3007      723100
 3008              	.LASF7:
 3009 030a 6C6F6E67 		.ascii	"long unsigned int\000"
 3009      20756E73 
 3009      69676E65 
 3009      6420696E 
 3009      7400
 3010              	.LASF58:
 3011 031c 73656E73 		.ascii	"sensor_isr_StartEx\000"
 3011      6F725F69 
 3011      73725F53 
 3011      74617274 
 3011      457800
 3012              	.LASF56:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 70


 3013 032f 6D6F746F 		.ascii	"motor_start\000"
 3013      725F7374 
 3013      61727400 
 3014              	.LASF41:
 3015 033b 64696769 		.ascii	"digital\000"
 3015      74616C00 
 3016              	.LASF25:
 3017 0343 6469725F 		.ascii	"dir_flag\000"
 3017      666C6167 
 3017      00
 3018              	.LASF52:
 3019 034c 636F756E 		.ascii	"count\000"
 3019      7400
 3020              	.LASF5:
 3021 0352 5F5F696E 		.ascii	"__int32_t\000"
 3021      7433325F 
 3021      7400
 3022              	.LASF33:
 3023 035c 626C6163 		.ascii	"black_threshold_r1\000"
 3023      6B5F7468 
 3023      72657368 
 3023      6F6C645F 
 3023      723100
 3024              	.LASF72:
 3025 036f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3025      4320342E 
 3025      392E3320 
 3025      32303135 
 3025      30333033 
 3026 03a2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3026      20726576 
 3026      6973696F 
 3026      6E203232 
 3026      31323230 
 3027 03d5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3027      66756E63 
 3027      74696F6E 
 3027      2D736563 
 3027      74696F6E 
 3028              	.LASF34:
 3029 03fd 626C6163 		.ascii	"black_threshold_r3\000"
 3029      6B5F7468 
 3029      72657368 
 3029      6F6C645F 
 3029      723300
 3030              	.LASF16:
 3031 0410 646F7562 		.ascii	"double\000"
 3031      6C6500
 3032              	.LASF36:
 3033 0417 77686974 		.ascii	"white_threshold_l1\000"
 3033      655F7468 
 3033      72657368 
 3033      6F6C645F 
 3033      6C3100
 3034              	.LASF35:
 3035 042a 77686974 		.ascii	"white_threshold_l3\000"
 3035      655F7468 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccmjZs4X.s 			page 71


 3035      72657368 
 3035      6F6C645F 
 3035      6C3300
 3036              	.LASF77:
 3037 043d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3037      52784275 
 3037      66666572 
 3037      00
 3038              	.LASF63:
 3039 044a 43794465 		.ascii	"CyDelay\000"
 3039      6C617900 
 3040              	.LASF64:
 3041 0452 7265666C 		.ascii	"reflectance_read\000"
 3041      65637461 
 3041      6E63655F 
 3041      72656164 
 3041      00
 3042              	.LASF61:
 3043 0463 49525F6C 		.ascii	"IR_led_Write\000"
 3043      65645F57 
 3043      72697465 
 3043      00
 3044              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
