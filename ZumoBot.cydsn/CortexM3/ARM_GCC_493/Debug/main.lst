ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fcmple
  21              		.global	__aeabi_fdiv
  22              		.global	__aeabi_f2d
  23              		.global	__aeabi_dmul
  24              		.global	__aeabi_d2uiz
  25              		.global	__aeabi_fmul
  26              		.global	__aeabi_i2d
  27              		.global	__aeabi_dadd
  28              		.global	__aeabi_i2f
  29              		.global	__aeabi_fadd
  30              		.global	__aeabi_f2uiz
  31              		.section	.text.main,"ax",%progbits
  32              		.align	2
  33              		.global	main
  34              		.thumb
  35              		.thumb_func
  36              		.type	main, %function
  37              	main:
  38              	.LFB63:
  39              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  17:main.c        **** */
  18:main.c        **** 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 2


  19:main.c        **** #include <project.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include "Motor.h"
  22:main.c        **** #include "Ultra.h"
  23:main.c        **** #include "Nunchuk.h"
  24:main.c        **** #include "Reflectance.h"
  25:main.c        **** #include "I2C_made.h"
  26:main.c        **** #include "Gyro.h"
  27:main.c        **** #include "Accel_magnet.h"
  28:main.c        **** #include "IR.h"
  29:main.c        **** #include "Ambient.h"
  30:main.c        **** #include "Beep.h"
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** // Declare used methods
  34:main.c        **** int rread(void);
  35:main.c        **** void motor_start();
  36:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  37:main.c        **** void Custom_forward(uint8 speed);
  38:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  39:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  40:main.c        **** void Measure_Voltage();
  41:main.c        **** void Right_turn(uint8 speed);
  42:main.c        **** void Left_turn(uint8 speed);
  43:main.c        **** void Corrective_twitch(uint8 dir, int flag, uint8 delay);
  44:main.c        **** 
  45:main.c        **** 
  46:main.c        **** int main()
  47:main.c        **** {
  40              		.loc 1 47 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 16
  43              		@ frame_needed = 0, uses_anonymous_args = 0
  44 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  45              		.cfi_def_cfa_offset 32
  46              		.cfi_offset 4, -32
  47              		.cfi_offset 5, -28
  48              		.cfi_offset 6, -24
  49              		.cfi_offset 7, -20
  50              		.cfi_offset 8, -16
  51              		.cfi_offset 9, -12
  52              		.cfi_offset 10, -8
  53              		.cfi_offset 14, -4
  54 0004 84B0     		sub	sp, sp, #16
  55              		.cfi_def_cfa_offset 48
  56              	.LVL0:
  48:main.c        ****     // 'Time counter' for the voltage measurement interval
  49:main.c        ****     int cycles = 0;
  50:main.c        ****     
  51:main.c        ****     // Needed for using the button to start the robot's movement routine
  52:main.c        ****     int exit = 0;
  53:main.c        ****     
  54:main.c        ****     // Needed for enabling correct looping behaviour in the movement routine
  55:main.c        ****     int loopCheck = 0;
  56:main.c        ****     
  57:main.c        ****     // Check for enabling 'corrective twitch' after main turn logic
  58:main.c        ****     int twitchFlag = 0;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 3


  59:main.c        ****     
  60:main.c        ****     // Turn value for the motors to use
  61:main.c        ****     uint8 turn = 0;
  62:main.c        ****     
  63:main.c        ****     // (maximum) movement speed of the robot
  64:main.c        ****     uint8 speed = 240;
  65:main.c        ****     
  66:main.c        ****     // reflectance thresholds (determined experimentally) for use in different movement behaviours
  67:main.c        ****     int black_threshold_l3 = 21000;
  68:main.c        ****     int black_threshold_l1 = 17500;
  69:main.c        ****     int black_threshold_r1 = 21000;
  70:main.c        ****     int black_threshold_r3 = 21500;
  71:main.c        ****         
  72:main.c        ****     int white_threshold_l3 = 5793;
  73:main.c        ****     int white_threshold_l1 = 4500;
  74:main.c        ****     int white_threshold_r1 = 4522;
  75:main.c        ****     int white_threshold_r3 = 6293;
  76:main.c        ****     
  77:main.c        ****     int maxDiff_l3 = black_threshold_l3 - white_threshold_l3;
  78:main.c        ****     int maxDiff_l1 = black_threshold_l1 - white_threshold_l1;
  79:main.c        ****     int maxDiff_r1 = black_threshold_r1 - white_threshold_r1;
  80:main.c        ****     int maxDiff_r3 = black_threshold_r3 - white_threshold_r3;
  81:main.c        ****     
  82:main.c        ****     float blackness1_left = 23999;
  83:main.c        ****     float blackness2_left = 23999;
  84:main.c        ****     float blackness1_right = 23999;
  85:main.c        ****     float blackness2_right = 23999;
  86:main.c        ****     
  87:main.c        ****     float diff_left = 0.0;
  88:main.c        ****     float diff_right = 0.0;
  89:main.c        ****     
  90:main.c        ****     // Initialize various starting thingies
  91:main.c        ****     struct sensors_ ref;
  92:main.c        ****     struct sensors_ dig;
  93:main.c        ****     CyGlobalIntEnable; 
  57              		.loc 1 93 0
  58              	@ 93 "main.c" 1
  59 0006 62B6     		CPSIE   i
  60              	@ 0 "" 2
  94:main.c        ****     UART_1_Start();
  61              		.loc 1 94 0
  62              		.thumb
  63 0008 FFF7FEFF 		bl	UART_1_Start
  64              	.LVL1:
  95:main.c        ****     ADC_Battery_Start();   
  65              		.loc 1 95 0
  66 000c FFF7FEFF 		bl	ADC_Battery_Start
  67              	.LVL2:
  96:main.c        ****     
  97:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
  68              		.loc 1 97 0
  69 0010 FFF7FEFF 		bl	Measure_Voltage
  70              	.LVL3:
  98:main.c        ****     
  99:main.c        ****     motor_start();
  71              		.loc 1 99 0
  72 0014 FFF7FEFF 		bl	motor_start
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 4


  73              	.LVL4:
 100:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  74              		.loc 1 100 0
  75 0018 0020     		movs	r0, #0
  76 001a 0146     		mov	r1, r0
  77 001c FFF7FEFF 		bl	motor_forward
  78              	.LVL5:
 101:main.c        ****     
 102:main.c        ****     // Initialize IR sensors
 103:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  79              		.loc 1 103 0
  80 0020 7C48     		ldr	r0, .L22
  81 0022 FFF7FEFF 		bl	sensor_isr_StartEx
  82              	.LVL6:
 104:main.c        ****     reflectance_set_threshold(black_threshold_l3, black_threshold_l1, black_threshold_r1, black_thr
  83              		.loc 1 104 0
  84 0026 45F20820 		movw	r0, #21000
  85 002a 44F25C41 		movw	r1, #17500
  86 002e 0246     		mov	r2, r0
  87 0030 45F2FC33 		movw	r3, #21500
  88 0034 FFF7FEFF 		bl	reflectance_set_threshold
  89              	.LVL7:
 105:main.c        ****     reflectance_start();
  90              		.loc 1 105 0
  91 0038 FFF7FEFF 		bl	reflectance_start
  92              	.LVL8:
 106:main.c        ****     IR_led_Write(1);
  93              		.loc 1 106 0
  94 003c 0120     		movs	r0, #1
  95 003e FFF7FEFF 		bl	IR_led_Write
  96              	.LVL9:
 107:main.c        **** 
 108:main.c        ****     BatteryLed_Write(0); // Switch led off 
  97              		.loc 1 108 0
  98 0042 0020     		movs	r0, #0
  99 0044 FFF7FEFF 		bl	BatteryLed_Write
 100              	.LVL10:
  52:main.c        ****     
 101              		.loc 1 52 0
 102 0048 0024     		movs	r4, #0
 109:main.c        ****     
 110:main.c        ****     uint8 button; // make button exist
 111:main.c        ****     
 112:main.c        ****     // To start the robot's movement routine, press the button
 113:main.c        ****     while (exit == 0) 
 103              		.loc 1 113 0
 104 004a 06E0     		b	.L3
 105              	.LVL11:
 106              	.L4:
 114:main.c        ****     {
 115:main.c        ****         button = SW1_Read();
 107              		.loc 1 115 0
 108 004c FFF7FEFF 		bl	SW1_Read
 109              	.LVL12:
 116:main.c        ****         
 117:main.c        ****         if (button == 0) 
 110              		.loc 1 117 0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 5


 111 0050 18B9     		cbnz	r0, .L3
 112              	.LVL13:
 118:main.c        ****         {
 119:main.c        ****             exit = 1;
 120:main.c        ****             CyDelay(10);
 113              		.loc 1 120 0
 114 0052 0A20     		movs	r0, #10
 115              	.LVL14:
 116 0054 FFF7FEFF 		bl	CyDelay
 117              	.LVL15:
 119:main.c        ****             CyDelay(10);
 118              		.loc 1 119 0
 119 0058 0124     		movs	r4, #1
 120              	.LVL16:
 121              	.L3:
 113:main.c        ****     {
 122              		.loc 1 113 0
 123 005a 002C     		cmp	r4, #0
 124 005c F6D0     		beq	.L4
 121:main.c        ****         }
 122:main.c        ****     }
 123:main.c        ****     
 124:main.c        ****     /*
 125:main.c        ****     
 126:main.c        ****     For testing the behaviour of Corrective_twitch():
 127:main.c        ****     
 128:main.c        ****         Custom_forward(speed);
 129:main.c        ****         CyDelay(10);
 130:main.c        ****     while (1){
 131:main.c        ****     Corrective_twitch(1, 1, 20);
 132:main.c        ****     Custom_forward(speed);
 133:main.c        ****     CyDelay(100);
 134:main.c        ****     //Corrective_twitch(1, 1, 10);
 135:main.c        ****     //Custom_forward(speed);
 136:main.c        ****     //CyDelay(10);
 137:main.c        ****     }
 138:main.c        ****     */
 139:main.c        ****     
 140:main.c        ****     Custom_forward(speed);
 125              		.loc 1 140 0
 126 005e F020     		movs	r0, #240
 127 0060 FFF7FEFF 		bl	Custom_forward
 128              	.LVL17:
  84:main.c        ****     float blackness2_right = 23999;
 129              		.loc 1 84 0
 130 0064 DFF8D081 		ldr	r8, .L22+36
  82:main.c        ****     float blackness2_left = 23999;
 131              		.loc 1 82 0
 132 0068 4446     		mov	r4, r8
 133              	.LVL18:
  49:main.c        ****     
 134              		.loc 1 49 0
 135 006a 4FF00009 		mov	r9, #0
 136              	.LVL19:
 137              	.L14:
 141:main.c        **** 
 142:main.c        ****     while(1)
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 6


 143:main.c        ****     {    
 144:main.c        ****         
 145:main.c        ****         reflectance_read(&ref); // raw reflectance value ('blackness') from the sensor; 0 - 23 999
 138              		.loc 1 145 0
 139 006e 02A8     		add	r0, sp, #8
 140 0070 FFF7FEFF 		bl	reflectance_read
 141              	.LVL20:
 146:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 147:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 142              		.loc 1 147 0
 143 0074 6846     		mov	r0, sp
 144 0076 FFF7FEFF 		bl	reflectance_digital
 145              	.LVL21:
 148:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 149:main.c        ****         //CyDelay(1000); // comment this delay out when doing movement tests / racing !!!
 150:main.c        ****         
 151:main.c        ****         
 152:main.c        ****         // Line-following logic.
 153:main.c        ****         // NOTE: due to the calibration of the motor speeds, 240 (255 - 15) is our current max spee
 154:main.c        ****         
 155:main.c        ****         // When the measured blackness value drops below the threshold, start the appropriate turni
 156:main.c        ****         if (dig.l1 == 1)
 146              		.loc 1 156 0
 147 007a BDF80230 		ldrh	r3, [sp, #2]
 148 007e 012B     		cmp	r3, #1
 149 0080 60D1     		bne	.L5
 150 0082 0025     		movs	r5, #0
 151              	.LVL22:
 152              	.L8:
 157:main.c        ****         { 
 158:main.c        ****             // When the robot starts to veer off to the left, do a correction towards the right, un
 159:main.c        ****             do {
 160:main.c        ****                 
 161:main.c        ****                 // Obtain an initial value for blackness1_left, then close access to the if stateme
 162:main.c        ****                 if (loopCheck == 0)
 153              		.loc 1 162 0
 154 0084 65B9     		cbnz	r5, .L15
 163:main.c        ****                 {
 164:main.c        ****                     reflectance_read(&ref);
 155              		.loc 1 164 0
 156 0086 02A8     		add	r0, sp, #8
 157 0088 FFF7FEFF 		bl	reflectance_read
 158              	.LVL23:
 165:main.c        ****                     blackness1_left = ref.l1;
 159              		.loc 1 165 0
 160 008c BDF80A00 		ldrh	r0, [sp, #10]
 161 0090 FFF7FEFF 		bl	__aeabi_ui2f
 162              	.LVL24:
 163 0094 0646     		mov	r6, r0
 164              	.LVL25:
 166:main.c        ****                     CyDelay(1);
 165              		.loc 1 166 0
 166 0096 0120     		movs	r0, #1
 167              	.LVL26:
 168 0098 FFF7FEFF 		bl	CyDelay
 169              	.LVL27:
 167:main.c        ****                     loopCheck = 1;                   
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 7


 170              		.loc 1 167 0
 171 009c 0125     		movs	r5, #1
 172 009e 00E0     		b	.L6
 173              	.LVL28:
 174              	.L15:
 175 00a0 2646     		mov	r6, r4
 176              	.LVL29:
 177              	.L6:
 168:main.c        ****                 }
 169:main.c        ****                 
 170:main.c        ****                 // Obtain a second value (1 millisecond later).
 171:main.c        ****                 reflectance_read(&ref);
 178              		.loc 1 171 0
 179 00a2 02A8     		add	r0, sp, #8
 180 00a4 FFF7FEFF 		bl	reflectance_read
 181              	.LVL30:
 172:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 182              		.loc 1 172 0
 183 00a8 6846     		mov	r0, sp
 184 00aa FFF7FEFF 		bl	reflectance_digital
 185              	.LVL31:
 173:main.c        ****                 blackness2_left = ref.l1;
 186              		.loc 1 173 0
 187 00ae BDF80A00 		ldrh	r0, [sp, #10]
 188 00b2 FFF7FEFF 		bl	__aeabi_ui2f
 189              	.LVL32:
 190 00b6 0446     		mov	r4, r0
 191              	.LVL33:
 174:main.c        ****                 
 175:main.c        ****                 // Calculate the difference between the two values.
 176:main.c        ****                 diff_left = blackness1_left - blackness2_left;
 192              		.loc 1 176 0
 193 00b8 3046     		mov	r0, r6
 194              	.LVL34:
 195 00ba 2146     		mov	r1, r4
 196 00bc FFF7FEFF 		bl	__aeabi_fsub
 197              	.LVL35:
 198 00c0 0646     		mov	r6, r0
 199              	.LVL36:
 177:main.c        ****                 
 178:main.c        ****                 // Two different turning behaviours, depending on the resulting value for diff_left
 179:main.c        ****                 if (diff_left <= -500)
 200              		.loc 1 179 0
 201 00c2 5549     		ldr	r1, .L22+4
 202 00c4 FFF7FEFF 		bl	__aeabi_fcmple
 203              	.LVL37:
 204 00c8 60BB     		cbnz	r0, .L16
 180:main.c        ****                 {
 181:main.c        ****                     turn = 0; // already moving back towards the center of the line, so no turn is 
 182:main.c        ****                          
 183:main.c        ****                 } else { // for diff values > -500 (i.e. moving away from the line), use the whole 
 184:main.c        ****                 
 185:main.c        ****                 // Determine the correct turn amount (240 is max turn, 0 is no turn).
 186:main.c        ****                 
 187:main.c        ****                 // Changed the behaviour of the base turn amount assignment (because the turn metho
 188:main.c        ****                 // The larger the measured blackness value, the smaller the base turn amount, and v
 189:main.c        ****                 // value equals the blackness threshold, base turn amount = 0 (i.e. the robot goes 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 8


 190:main.c        ****                 // The base turn amount is further modified by the rate of blackness change multipl
 191:main.c        ****                 // (now using square of diff).
 192:main.c        ****                 // The more rapid the change of values (i.e. the difference between two measurement
 193:main.c        ****                 // becomes, thus leading to a steeper turn. 
 194:main.c        ****                 // Finally, > 240 and < 0 checks were added to pre-empt any potential issues with i
 195:main.c        ****                 
 196:main.c        ****                 // Calibrated base turn amount with the black_threshold; when blackness2_left = 17 
 197:main.c        ****                 // With 10 000 blackness value, base turn amount = 144.
 198:main.c        ****                 // With 15 000 blackness, base turn amount = 48.
 199:main.c        ****                 // By adding a multiplying constant, the base turn amount can be raised and the tur
 200:main.c        ****                 turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_threshold_l1)
 205              		.loc 1 200 0
 206 00ca 5448     		ldr	r0, .L22+8
 207 00cc 2146     		mov	r1, r4
 208 00ce FFF7FEFF 		bl	__aeabi_fsub
 209              	.LVL38:
 210 00d2 5249     		ldr	r1, .L22+8
 211 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 212              	.LVL39:
 213 00d8 FFF7FEFF 		bl	__aeabi_f2d
 214              	.LVL40:
 215 00dc 0022     		movs	r2, #0
 216 00de 504B     		ldr	r3, .L22+12
 217 00e0 FFF7FEFF 		bl	__aeabi_dmul
 218              	.LVL41:
 219 00e4 FFF7FEFF 		bl	__aeabi_d2uiz
 220              	.LVL42:
 221 00e8 5FFA80FA 		uxtb	r10, r0
 222              	.LVL43:
 201:main.c        ****                 turn += 1.5 * ( (diff_left * diff_left / maxDiff_l1)); // modify turn; with a diff 
 223              		.loc 1 201 0
 224 00ec 3046     		mov	r0, r6
 225 00ee 3146     		mov	r1, r6
 226 00f0 FFF7FEFF 		bl	__aeabi_fmul
 227              	.LVL44:
 228 00f4 4B49     		ldr	r1, .L22+16
 229 00f6 FFF7FEFF 		bl	__aeabi_fdiv
 230              	.LVL45:
 231 00fa FFF7FEFF 		bl	__aeabi_f2d
 232              	.LVL46:
 233 00fe 0022     		movs	r2, #0
 234 0100 494B     		ldr	r3, .L22+20
 235 0102 FFF7FEFF 		bl	__aeabi_dmul
 236              	.LVL47:
 237 0106 0646     		mov	r6, r0
 238              	.LVL48:
 239 0108 0F46     		mov	r7, r1
 240 010a 5046     		mov	r0, r10
 241 010c FFF7FEFF 		bl	__aeabi_i2d
 242              	.LVL49:
 243 0110 3246     		mov	r2, r6
 244 0112 3B46     		mov	r3, r7
 245 0114 FFF7FEFF 		bl	__aeabi_dadd
 246              	.LVL50:
 247 0118 FFF7FEFF 		bl	__aeabi_d2uiz
 248              	.LVL51:
 249 011c C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 9


 250              	.LVL52:
 202:main.c        ****                 if (turn > 240)
 251              		.loc 1 202 0
 252 011e F028     		cmp	r0, #240
 253 0120 02D8     		bhi	.L17
 254 0122 02E0     		b	.L7
 255              	.LVL53:
 256              	.L16:
 181:main.c        ****                          
 257              		.loc 1 181 0
 258 0124 0020     		movs	r0, #0
 259 0126 00E0     		b	.L7
 260              	.LVL54:
 261              	.L17:
 203:main.c        ****                 {
 204:main.c        ****                     turn = 240;
 262              		.loc 1 204 0
 263 0128 F020     		movs	r0, #240
 264              	.LVL55:
 265              	.L7:
 205:main.c        ****                 } else if (turn < 0) {
 206:main.c        ****                     turn = 0;   
 207:main.c        ****                 }
 208:main.c        ****                 
 209:main.c        ****             }
 210:main.c        ****                 
 211:main.c        ****                 //printf("blackness1_left: %f \n", blackness1_left);
 212:main.c        ****                 //printf("blackness2_left: %f \n", blackness2_left);
 213:main.c        ****                 //printf("turn: %d \n", turn);
 214:main.c        ****                                 
 215:main.c        ****                 // Execute the turn.
 216:main.c        ****                 Right_turn(turn);
 266              		.loc 1 216 0
 267 012a FFF7FEFF 		bl	Right_turn
 268              	.LVL56:
 217:main.c        ****                              
 218:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 219:main.c        ****                 // As the loop continues, blackness2's value is stored in blackness1 and then black
 220:main.c        ****                 blackness1_left = blackness2_left;
 221:main.c        ****                 
 222:main.c        ****                 CyDelay(1);
 269              		.loc 1 222 0
 270 012e 0120     		movs	r0, #1
 271 0130 FFF7FEFF 		bl	CyDelay
 272              	.LVL57:
 223:main.c        ****                                
 224:main.c        ****                 //printf("%d\n", turn);
 225:main.c        ****                 
 226:main.c        ****                 twitchFlag = 1;
 227:main.c        ****                 
 228:main.c        ****             } while (dig.l1 == 1);
 273              		.loc 1 228 0
 274 0134 BDF80230 		ldrh	r3, [sp, #2]
 275 0138 012B     		cmp	r3, #1
 276 013a A3D0     		beq	.L8
 277              	.LVL58:
 229:main.c        ****             // Return 'check' to its initial value, so that we can get an initial measurement 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 10


 230:main.c        ****             // once the loop starts again (i.e. when the robot needs to turn again).
 231:main.c        ****             loopCheck = 0;
 232:main.c        ****             // For added safety, set turn to zero... May not be necessary.
 233:main.c        ****             turn = 0;
 234:main.c        ****             //Corrective_twitch(0, flag, 10); // experimental; value may need adjustment
 235:main.c        ****             twitchFlag = 0;
 236:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 237:main.c        ****             Custom_forward(speed);
 278              		.loc 1 237 0
 279 013c F020     		movs	r0, #240
 280 013e FFF7FEFF 		bl	Custom_forward
 281              	.LVL59:
 282 0142 5AE0     		b	.L9
 283              	.LVL60:
 284              	.L5:
 238:main.c        ****                     
 239:main.c        ****         } else if (dig.r1 == 1) {
 285              		.loc 1 239 0
 286 0144 BDF80430 		ldrh	r3, [sp, #4]
 287 0148 012B     		cmp	r3, #1
 288 014a 56D1     		bne	.L9
 289 014c 0026     		movs	r6, #0
 290              	.LVL61:
 291              	.L12:
 240:main.c        ****             
 241:main.c        ****             // When the robot starts to veer off to the right, do a correction towards the left, un
 242:main.c        ****             do {
 243:main.c        ****                 
 244:main.c        ****                 // Obtain an initial value for blackness1_right, then close access to the if statem
 245:main.c        ****                 if (loopCheck == 0)
 292              		.loc 1 245 0
 293 014e 66B9     		cbnz	r6, .L18
 246:main.c        ****                 {
 247:main.c        ****                     reflectance_read(&ref);
 294              		.loc 1 247 0
 295 0150 02A8     		add	r0, sp, #8
 296 0152 FFF7FEFF 		bl	reflectance_read
 297              	.LVL62:
 248:main.c        ****                     blackness1_right = ref.r1;
 298              		.loc 1 248 0
 299 0156 BDF80C00 		ldrh	r0, [sp, #12]
 300 015a FFF7FEFF 		bl	__aeabi_ui2f
 301              	.LVL63:
 302 015e 0546     		mov	r5, r0
 303              	.LVL64:
 249:main.c        ****                     CyDelay(1);
 304              		.loc 1 249 0
 305 0160 0120     		movs	r0, #1
 306              	.LVL65:
 307 0162 FFF7FEFF 		bl	CyDelay
 308              	.LVL66:
 250:main.c        ****                     loopCheck = 1;
 309              		.loc 1 250 0
 310 0166 0126     		movs	r6, #1
 311 0168 00E0     		b	.L10
 312              	.LVL67:
 313              	.L18:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 11


 314 016a 4546     		mov	r5, r8
 315              	.LVL68:
 316              	.L10:
 251:main.c        ****                 }
 252:main.c        ****                 
 253:main.c        ****                 // Obtain a second value (1 millisecond later).
 254:main.c        ****                 reflectance_read(&ref);
 317              		.loc 1 254 0
 318 016c 02A8     		add	r0, sp, #8
 319 016e FFF7FEFF 		bl	reflectance_read
 320              	.LVL69:
 255:main.c        ****                 reflectance_digital(&dig); 
 321              		.loc 1 255 0
 322 0172 6846     		mov	r0, sp
 323 0174 FFF7FEFF 		bl	reflectance_digital
 324              	.LVL70:
 256:main.c        ****                 blackness2_right = ref.r1;
 325              		.loc 1 256 0
 326 0178 BDF80C00 		ldrh	r0, [sp, #12]
 327 017c FFF7FEFF 		bl	__aeabi_ui2f
 328              	.LVL71:
 329 0180 8046     		mov	r8, r0
 330              	.LVL72:
 257:main.c        ****                 
 258:main.c        ****                 // Calculate the difference between the two values.
 259:main.c        ****                 diff_right = blackness1_right - blackness2_right;
 331              		.loc 1 259 0
 332 0182 2846     		mov	r0, r5
 333              	.LVL73:
 334 0184 4146     		mov	r1, r8
 335 0186 FFF7FEFF 		bl	__aeabi_fsub
 336              	.LVL74:
 337 018a 0546     		mov	r5, r0
 338              	.LVL75:
 260:main.c        ****                 
 261:main.c        ****                 // Two different turning behaviours, depending on the resulting value for diff_righ
 262:main.c        ****                 if (diff_right <= -500)
 339              		.loc 1 262 0
 340 018c 2249     		ldr	r1, .L22+4
 341 018e FFF7FEFF 		bl	__aeabi_fcmple
 342              	.LVL76:
 343 0192 18BB     		cbnz	r0, .L19
 263:main.c        ****                 {
 264:main.c        ****                     turn = 0; // already moving back towards the center of the line, so no turn is 
 265:main.c        ****                       
 266:main.c        ****                 } else { // for diff values > -500 (i.e. moving away from the line), use the whole 
 267:main.c        ****                 
 268:main.c        ****                     // Determine the correct turn amount (240 is max turn, 0 is no turn).
 269:main.c        ****                     
 270:main.c        ****                     // Changed the behaviour of the base turn amount assignment (because the turn m
 271:main.c        ****                     // The larger the measured blackness value, the smaller the base turn amount, a
 272:main.c        ****                     // value equals the blackness threshold, base turn amount = 0 (i.e. the robot g
 273:main.c        ****                     // The base turn amount is further modified by the rate of blackness change mul
 274:main.c        ****                     // (now using square of diff).
 275:main.c        ****                     // The more rapid the change of values (i.e. the difference between two measure
 276:main.c        ****                     // becomes, thus leading to a steeper turn. 
 277:main.c        ****                     // Finally, > 240 and < 0 checks were added to pre-empt any potential issues wi
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 12


 278:main.c        ****                     
 279:main.c        ****                     // Calibrated base turn amount with the black_threshold; when blackness2_right 
 280:main.c        ****                     // With 10 000 blackness value, base turn amount = 150.
 281:main.c        ****                     // With 15 000 blackness, base turn amount = 82.
 282:main.c        ****                     // By adding a multiplying constant, the base turn amount can be raised and the
 283:main.c        ****                     // NOTE: Due to the physical differences between the sensors, 'balancing' the v
 284:main.c        ****                     // the left and right sides may well be a 'false friend'!
 285:main.c        ****                     turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_threshol
 344              		.loc 1 285 0
 345 0194 2548     		ldr	r0, .L22+24
 346 0196 4146     		mov	r1, r8
 347 0198 FFF7FEFF 		bl	__aeabi_fsub
 348              	.LVL77:
 349 019c 2349     		ldr	r1, .L22+24
 350 019e FFF7FEFF 		bl	__aeabi_fdiv
 351              	.LVL78:
 352 01a2 FFF7FEFF 		bl	__aeabi_f2d
 353              	.LVL79:
 354 01a6 0022     		movs	r2, #0
 355 01a8 1D4B     		ldr	r3, .L22+12
 356 01aa FFF7FEFF 		bl	__aeabi_dmul
 357              	.LVL80:
 358 01ae FFF7FEFF 		bl	__aeabi_d2uiz
 359              	.LVL81:
 360 01b2 C7B2     		uxtb	r7, r0
 361              	.LVL82:
 286:main.c        ****                     turn += ( (diff_right * diff_right/ maxDiff_r1)); // modify turn
 362              		.loc 1 286 0
 363 01b4 2846     		mov	r0, r5
 364 01b6 2946     		mov	r1, r5
 365 01b8 FFF7FEFF 		bl	__aeabi_fmul
 366              	.LVL83:
 367 01bc 1C49     		ldr	r1, .L22+28
 368 01be FFF7FEFF 		bl	__aeabi_fdiv
 369              	.LVL84:
 370 01c2 0546     		mov	r5, r0
 371              	.LVL85:
 372 01c4 3846     		mov	r0, r7
 373 01c6 FFF7FEFF 		bl	__aeabi_i2f
 374              	.LVL86:
 375 01ca 2946     		mov	r1, r5
 376 01cc FFF7FEFF 		bl	__aeabi_fadd
 377              	.LVL87:
 378 01d0 FFF7FEFF 		bl	__aeabi_f2uiz
 379              	.LVL88:
 380 01d4 C0B2     		uxtb	r0, r0
 381              	.LVL89:
 287:main.c        ****                     if (turn > 240)
 382              		.loc 1 287 0
 383 01d6 F028     		cmp	r0, #240
 384 01d8 02D8     		bhi	.L20
 385 01da 02E0     		b	.L11
 386              	.LVL90:
 387              	.L19:
 264:main.c        ****                       
 388              		.loc 1 264 0
 389 01dc 0020     		movs	r0, #0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 13


 390 01de 00E0     		b	.L11
 391              	.LVL91:
 392              	.L20:
 288:main.c        ****                     {
 289:main.c        ****                         turn = 240;
 393              		.loc 1 289 0
 394 01e0 F020     		movs	r0, #240
 395              	.LVL92:
 396              	.L11:
 290:main.c        ****                     } else if (turn < 0) {
 291:main.c        ****                         turn = 0;   
 292:main.c        ****                     }  
 293:main.c        ****                     
 294:main.c        ****                     //printf("%d \n", ref.r1);
 295:main.c        ****                     //printf("%d \n", turn);
 296:main.c        ****                 
 297:main.c        ****                 }
 298:main.c        ****                 
 299:main.c        ****                 // Execute the turn.
 300:main.c        ****                 Left_turn(turn);
 397              		.loc 1 300 0
 398 01e2 FFF7FEFF 		bl	Left_turn
 399              	.LVL93:
 301:main.c        ****                 
 302:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 303:main.c        ****                 // As the loop continues, blackness2's value is stored in blackness1 and then black
 304:main.c        ****                 blackness1_right = blackness2_right;
 305:main.c        ****                                 
 306:main.c        ****                 CyDelay(1);
 400              		.loc 1 306 0
 401 01e6 0120     		movs	r0, #1
 402 01e8 FFF7FEFF 		bl	CyDelay
 403              	.LVL94:
 307:main.c        ****                                
 308:main.c        ****                 //printf("%d\n", turn);
 309:main.c        ****                 
 310:main.c        ****                 twitchFlag = 1;
 311:main.c        **** 
 312:main.c        ****                 
 313:main.c        ****             } while (dig.r1 == 1);
 404              		.loc 1 313 0
 405 01ec BDF80430 		ldrh	r3, [sp, #4]
 406 01f0 012B     		cmp	r3, #1
 407 01f2 ACD0     		beq	.L12
 408              	.LVL95:
 314:main.c        ****             // Return 'check' to its initial value, so that we can get an initial measurement 
 315:main.c        ****             // once the loop starts again (i.e. when the robot needs to turn again).
 316:main.c        ****             loopCheck = 0;
 317:main.c        ****             // For added safety, set turn to zero... May not be necessary.
 318:main.c        ****             turn = 0;
 319:main.c        ****             //Corrective_twitch(1, flag, 10); // experimental; value may need adjustment
 320:main.c        ****             twitchFlag = 0;
 321:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 322:main.c        ****             Custom_forward(speed);
 409              		.loc 1 322 0
 410 01f4 F020     		movs	r0, #240
 411 01f6 FFF7FEFF 		bl	Custom_forward
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 14


 412              	.LVL96:
 413              	.L9:
 323:main.c        ****         } 
 324:main.c        ****         
 325:main.c        ****         
 326:main.c        ****                                     
 327:main.c        ****         // For measuring the battery voltage at regular intervals. 
 328:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 329:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 330:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 331:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 332:main.c        ****         cycles++;
 414              		.loc 1 332 0
 415 01fa 09F10109 		add	r9, r9, #1
 416              	.LVL97:
 333:main.c        ****         if (cycles >= 80000)
 417              		.loc 1 333 0
 418 01fe 0D4B     		ldr	r3, .L22+32
 419 0200 9945     		cmp	r9, r3
 420 0202 03DD     		ble	.L13
 334:main.c        ****         {
 335:main.c        ****             Measure_Voltage();
 421              		.loc 1 335 0
 422 0204 FFF7FEFF 		bl	Measure_Voltage
 423              	.LVL98:
 336:main.c        ****             cycles = 0;
 424              		.loc 1 336 0
 425 0208 4FF00009 		mov	r9, #0
 426              	.LVL99:
 427              	.L13:
 337:main.c        ****         }
 338:main.c        ****         
 339:main.c        ****         CyDelay(1);
 428              		.loc 1 339 0
 429 020c 0120     		movs	r0, #1
 430 020e FFF7FEFF 		bl	CyDelay
 431              	.LVL100:
 340:main.c        ****         
 341:main.c        ****     }
 432              		.loc 1 341 0
 433 0212 2CE7     		b	.L14
 434              	.L23:
 435              		.align	2
 436              	.L22:
 437 0214 00000000 		.word	sensor_isr_handler
 438 0218 0000FAC3 		.word	-1007026176
 439 021c 00B88846 		.word	1183365120
 440 0220 00007240 		.word	1081212928
 441 0224 00204B46 		.word	1179328512
 442 0228 0000F83F 		.word	1073217536
 443 022c 0010A446 		.word	1185157120
 444 0230 00BC8046 		.word	1182841856
 445 0234 7F380100 		.word	79999
 446 0238 007EBB46 		.word	1186692608
 447              		.cfi_endproc
 448              	.LFE63:
 449              		.size	main, .-main
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 15


 450              		.section	.text._write,"ax",%progbits
 451              		.align	2
 452              		.global	_write
 453              		.thumb
 454              		.thumb_func
 455              		.type	_write, %function
 456              	_write:
 457              	.LFB64:
 342:main.c        ****      
 343:main.c        ****  }   
 344:main.c        **** 
 345:main.c        **** // ================================================================================================
 346:main.c        **** // ================================================================================================
 347:main.c        **** 
 348:main.c        **** 
 349:main.c        **** //*/
 350:main.c        **** 
 351:main.c        **** /*//ultra sonic sensor//
 352:main.c        **** int main()
 353:main.c        **** {
 354:main.c        ****     CyGlobalIntEnable; 
 355:main.c        ****     UART_1_Start();
 356:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 357:main.c        ****     while(1) {
 358:main.c        ****         //If you want to print out the value  
 359:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 360:main.c        ****         CyDelay(1000);
 361:main.c        ****     }
 362:main.c        **** }   
 363:main.c        **** //*/
 364:main.c        **** 
 365:main.c        **** 
 366:main.c        **** /*//nunchuk//
 367:main.c        **** int main()
 368:main.c        **** {
 369:main.c        ****     CyGlobalIntEnable; 
 370:main.c        ****     UART_1_Start();
 371:main.c        ****   
 372:main.c        ****     nunchuk_start();
 373:main.c        ****     nunchuk_init();
 374:main.c        ****     
 375:main.c        ****     for(;;)
 376:main.c        ****     {    
 377:main.c        ****         nunchuk_read();
 378:main.c        ****     }
 379:main.c        **** }   
 380:main.c        **** //*/
 381:main.c        **** 
 382:main.c        **** 
 383:main.c        **** /*//IR receiver//
 384:main.c        **** int main()
 385:main.c        **** {
 386:main.c        ****     CyGlobalIntEnable; 
 387:main.c        ****     UART_1_Start();
 388:main.c        ****     
 389:main.c        ****     unsigned int IR_val; 
 390:main.c        ****     
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 16


 391:main.c        ****     for(;;)
 392:main.c        ****     {
 393:main.c        ****        IR_val = get_IR();
 394:main.c        ****        printf("%x\r\n\n",IR_val);
 395:main.c        ****     }    
 396:main.c        ****  }   
 397:main.c        **** //*/
 398:main.c        **** 
 399:main.c        **** 
 400:main.c        **** /*//Ambient light sensor//
 401:main.c        **** int main()
 402:main.c        **** {
 403:main.c        ****     CyGlobalIntEnable; 
 404:main.c        ****     UART_1_Start();
 405:main.c        ****     
 406:main.c        ****     I2C_Start();
 407:main.c        ****     
 408:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 409:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 410:main.c        ****     
 411:main.c        ****     for(;;)
 412:main.c        ****     {    
 413:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 414:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 415:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 416:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 417:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 418:main.c        ****         
 419:main.c        ****         uint8 CH0, CH1;
 420:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 421:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 422:main.c        **** 
 423:main.c        ****         double Ch0 = CH0;
 424:main.c        ****         double Ch1 = CH1;
 425:main.c        ****         
 426:main.c        ****         double data = 0;
 427:main.c        ****         data = getLux(Ch0,Ch1);
 428:main.c        ****         
 429:main.c        ****         // If you want to print out data
 430:main.c        ****         //printf("%lf\r\n",data);    
 431:main.c        ****     }    
 432:main.c        ****  }   
 433:main.c        **** //*/
 434:main.c        **** 
 435:main.c        **** 
 436:main.c        **** /*//accelerometer//
 437:main.c        **** int main()
 438:main.c        **** {
 439:main.c        ****     CyGlobalIntEnable; 
 440:main.c        ****     UART_1_Start();
 441:main.c        ****   
 442:main.c        ****     I2C_Start();
 443:main.c        ****   
 444:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 445:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 446:main.c        ****     
 447:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 17


 448:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 449:main.c        ****     
 450:main.c        ****     
 451:main.c        ****     for(;;)
 452:main.c        ****     {
 453:main.c        ****         //print out accelerometer output
 454:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 455:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 456:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 457:main.c        ****         
 458:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 459:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 460:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 461:main.c        ****         
 462:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 463:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 464:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 465:main.c        ****         
 466:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 467:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 468:main.c        ****         printf("\n");
 469:main.c        ****         
 470:main.c        ****         CyDelay(50);
 471:main.c        ****     }
 472:main.c        **** }   
 473:main.c        **** //*/
 474:main.c        **** 
 475:main.c        **** 
 476:main.c        **** /*//reflectance//
 477:main.c        **** int main()
 478:main.c        **** {
 479:main.c        ****     struct sensors_ ref;
 480:main.c        ****     struct sensors_ dig;
 481:main.c        ****     CyGlobalIntEnable; 
 482:main.c        ****     UART_1_Start();
 483:main.c        ****   
 484:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 485:main.c        ****     
 486:main.c        ****     reflectance_start();
 487:main.c        **** 
 488:main.c        ****     IR_led_Write(1);
 489:main.c        ****     for(;;)
 490:main.c        ****     {
 491:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 492:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 493:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 494:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 495:main.c        ****         
 496:main.c        ****         CyDelay(500);
 497:main.c        ****     }
 498:main.c        **** }   
 499:main.c        **** //*/
 500:main.c        **** 
 501:main.c        ****  /* //motor//
 502:main.c        **** int main()
 503:main.c        **** {
 504:main.c        ****     CyGlobalIntEnable; 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 18


 505:main.c        ****     UART_1_Start();
 506:main.c        **** 
 507:main.c        ****     motor_start();              // motor start
 508:main.c        **** 
 509:main.c        ****     motor_forward(100,2000);     // moving forward
 510:main.c        ****     motor_turn(200,50,2000);     // turn
 511:main.c        ****     motor_turn(50,200,2000);     // turn
 512:main.c        ****     motor_backward(100,2000);    // movinb backward
 513:main.c        ****        
 514:main.c        ****     motor_stop();               // motor stop
 515:main.c        ****     
 516:main.c        ****     for(;;)
 517:main.c        ****     {
 518:main.c        **** 
 519:main.c        ****     }
 520:main.c        **** }
 521:main.c        **** //*/
 522:main.c        ****     
 523:main.c        **** 
 524:main.c        **** /*//gyroscope//
 525:main.c        **** int main()
 526:main.c        **** {
 527:main.c        ****     CyGlobalIntEnable; 
 528:main.c        ****     UART_1_Start();
 529:main.c        ****   
 530:main.c        ****     I2C_Start();
 531:main.c        ****   
 532:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 533:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 534:main.c        ****     
 535:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 536:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 537:main.c        ****     
 538:main.c        ****     for(;;)
 539:main.c        ****     {
 540:main.c        ****         //print out gyroscope output
 541:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 542:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 543:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 544:main.c        ****         
 545:main.c        ****         
 546:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 547:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 548:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 549:main.c        ****         
 550:main.c        ****         
 551:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 552:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 553:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 554:main.c        ****      
 555:main.c        ****         // If you want to print value
 556:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 557:main.c        ****         CyDelay(50);
 558:main.c        ****     }
 559:main.c        **** }   
 560:main.c        **** //*/
 561:main.c        **** 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 19


 562:main.c        **** 
 563:main.c        **** /*//magnetometer//
 564:main.c        **** int main()
 565:main.c        **** {
 566:main.c        ****     CyGlobalIntEnable; 
 567:main.c        ****     UART_1_Start();
 568:main.c        ****   
 569:main.c        ****     I2C_Start();
 570:main.c        ****    
 571:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 572:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 573:main.c        ****     
 574:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 575:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 576:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 577:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 578:main.c        ****     
 579:main.c        ****     
 580:main.c        ****     for(;;)
 581:main.c        ****     {
 582:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 583:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 584:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 585:main.c        ****         
 586:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 587:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 588:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 589:main.c        ****         
 590:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 591:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 592:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 593:main.c        ****         
 594:main.c        ****         heading(X_AXIS, Y_AXIS);
 595:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 596:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 597:main.c        ****         CyDelay(50);      
 598:main.c        ****     }
 599:main.c        **** }   
 600:main.c        **** //*/
 601:main.c        **** 
 602:main.c        **** 
 603:main.c        **** /*
 604:main.c        **** 
 605:main.c        **** 
 606:main.c        ****     <p>
 607:main.c        ****     <B>Sensors</B><br>
 608:main.c        ****     &nbsp;Included: <br>
 609:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 610:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 611:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 612:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 613:main.c        ****     &nbsp;Wii nunchuck<br>
 614:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 615:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 616:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 617:main.c        ****     &nbsp;IR LED <br><br><br>
 618:main.c        ****     </p>
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 20


 619:main.c        ****     
 620:main.c        ****     <p>
 621:main.c        ****     <B>Communication</B><br>
 622:main.c        ****     I2C, UART, Serial<br>
 623:main.c        ****     </p>
 624:main.c        **** 
 625:main.c        **** */
 626:main.c        **** 
 627:main.c        **** 
 628:main.c        **** #if 0
 629:main.c        **** int rread(void)
 630:main.c        **** {
 631:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 632:main.c        ****     SC0_Write(1);
 633:main.c        ****     CyDelayUs(10);
 634:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 635:main.c        ****     Timer_1_Start();
 636:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 637:main.c        ****     uint16_t end = 0;
 638:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 639:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 640:main.c        ****             end = Timer_1_ReadCounter();
 641:main.c        ****         }
 642:main.c        ****     }
 643:main.c        ****     Timer_1_Stop();
 644:main.c        ****     
 645:main.c        ****     return (start - end);
 646:main.c        **** }
 647:main.c        **** #endif
 648:main.c        **** 
 649:main.c        **** /* Don't remove the functions below */
 650:main.c        **** int _write(int file, char *ptr, int len)
 651:main.c        **** {
 458              		.loc 1 651 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              	.LVL101:
 463 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 464              		.cfi_def_cfa_offset 24
 465              		.cfi_offset 3, -24
 466              		.cfi_offset 4, -20
 467              		.cfi_offset 5, -16
 468              		.cfi_offset 6, -12
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 0C46     		mov	r4, r1
 472 0004 1746     		mov	r7, r2
 473              	.LVL102:
 652:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 653:main.c        **** 	int n;
 654:main.c        **** 	for(n = 0; n < len; n++) {
 474              		.loc 1 654 0
 475 0006 0025     		movs	r5, #0
 476 0008 0BE0     		b	.L25
 477              	.LVL103:
 478              	.L27:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 21


 655:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 479              		.loc 1 655 0
 480 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 481 000c 0A2B     		cmp	r3, #10
 482 000e 02D1     		bne	.L26
 483              		.loc 1 655 0 is_stmt 0 discriminator 1
 484 0010 0D20     		movs	r0, #13
 485 0012 FFF7FEFF 		bl	UART_1_PutChar
 486              	.LVL104:
 487              	.L26:
 656:main.c        **** 		UART_1_PutChar(*ptr++);
 488              		.loc 1 656 0 is_stmt 1 discriminator 2
 489 0016 661C     		adds	r6, r4, #1
 490              	.LVL105:
 491 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 492 001a FFF7FEFF 		bl	UART_1_PutChar
 493              	.LVL106:
 654:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 494              		.loc 1 654 0 discriminator 2
 495 001e 0135     		adds	r5, r5, #1
 496              	.LVL107:
 497              		.loc 1 656 0 discriminator 2
 498 0020 3446     		mov	r4, r6
 499              	.LVL108:
 500              	.L25:
 654:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 501              		.loc 1 654 0 discriminator 1
 502 0022 BD42     		cmp	r5, r7
 503 0024 F1DB     		blt	.L27
 657:main.c        **** 	}
 658:main.c        **** 	return len;
 659:main.c        **** }
 504              		.loc 1 659 0
 505 0026 3846     		mov	r0, r7
 506 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 507              		.cfi_endproc
 508              	.LFE64:
 509              		.size	_write, .-_write
 510 002a 00BF     		.section	.text._read,"ax",%progbits
 511              		.align	2
 512              		.global	_read
 513              		.thumb
 514              		.thumb_func
 515              		.type	_read, %function
 516              	_read:
 517              	.LFB65:
 660:main.c        **** 
 661:main.c        **** int _read (int file, char *ptr, int count)
 662:main.c        **** {
 518              		.loc 1 662 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL109:
 523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 524              		.cfi_def_cfa_offset 24
 525              		.cfi_offset 3, -24
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 22


 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 0F46     		mov	r7, r1
 532 0004 1446     		mov	r4, r2
 533              	.LVL110:
 663:main.c        ****     int chs = 0;
 534              		.loc 1 663 0
 535 0006 0026     		movs	r6, #0
 664:main.c        ****     char ch;
 665:main.c        ****  
 666:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 667:main.c        ****     while(count > 0) {
 536              		.loc 1 667 0
 537 0008 12E0     		b	.L31
 538              	.LVL111:
 539              	.L34:
 668:main.c        ****         ch = UART_1_GetChar();
 540              		.loc 1 668 0
 541 000a FFF7FEFF 		bl	UART_1_GetChar
 542              	.LVL112:
 669:main.c        ****         if(ch != 0) {
 543              		.loc 1 669 0
 544 000e 0546     		mov	r5, r0
 545 0010 70B1     		cbz	r0, .L31
 670:main.c        ****             UART_1_PutChar(ch);
 546              		.loc 1 670 0
 547 0012 FFF7FEFF 		bl	UART_1_PutChar
 548              	.LVL113:
 671:main.c        ****             chs++;
 549              		.loc 1 671 0
 550 0016 0136     		adds	r6, r6, #1
 551              	.LVL114:
 672:main.c        ****             if(ch == '\r') {
 552              		.loc 1 672 0
 553 0018 0D2D     		cmp	r5, #13
 554 001a 03D1     		bne	.L32
 555              	.LVL115:
 673:main.c        ****                 ch = '\n';
 674:main.c        ****                 UART_1_PutChar(ch);
 556              		.loc 1 674 0
 557 001c 0A20     		movs	r0, #10
 558 001e FFF7FEFF 		bl	UART_1_PutChar
 559              	.LVL116:
 673:main.c        ****                 ch = '\n';
 560              		.loc 1 673 0
 561 0022 0A25     		movs	r5, #10
 562              	.LVL117:
 563              	.L32:
 675:main.c        ****             }
 676:main.c        ****             *ptr++ = ch;
 564              		.loc 1 676 0
 565 0024 7B1C     		adds	r3, r7, #1
 566              	.LVL118:
 567 0026 3D70     		strb	r5, [r7]
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 23


 677:main.c        ****             count--;
 568              		.loc 1 677 0
 569 0028 013C     		subs	r4, r4, #1
 570              	.LVL119:
 678:main.c        ****             if(ch == '\n') break;
 571              		.loc 1 678 0
 572 002a 0A2D     		cmp	r5, #10
 573 002c 02D0     		beq	.L33
 676:main.c        ****             count--;
 574              		.loc 1 676 0
 575 002e 1F46     		mov	r7, r3
 576              	.LVL120:
 577              	.L31:
 667:main.c        ****         ch = UART_1_GetChar();
 578              		.loc 1 667 0
 579 0030 002C     		cmp	r4, #0
 580 0032 EADC     		bgt	.L34
 581              	.LVL121:
 582              	.L33:
 679:main.c        ****         }
 680:main.c        ****     }
 681:main.c        ****     return chs;
 682:main.c        **** }
 583              		.loc 1 682 0
 584 0034 3046     		mov	r0, r6
 585 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 586              		.cfi_endproc
 587              	.LFE65:
 588              		.size	_read, .-_read
 589              		.text
 590              	.Letext0:
 591              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 592              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 593              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 594              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 595              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 596              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 597              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 598              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 599              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 600              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 601              		.file 12 "Generated_Source\\PSoC5/SW1.h"
 602              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 603              		.section	.debug_info,"",%progbits
 604              	.Ldebug_info0:
 605 0000 06070000 		.4byte	0x706
 606 0004 0400     		.2byte	0x4
 607 0006 00000000 		.4byte	.Ldebug_abbrev0
 608 000a 04       		.byte	0x4
 609 000b 01       		.uleb128 0x1
 610 000c 66020000 		.4byte	.LASF69
 611 0010 01       		.byte	0x1
 612 0011 6B030000 		.4byte	.LASF70
 613 0015 09030000 		.4byte	.LASF71
 614 0019 00000000 		.4byte	.Ldebug_ranges0+0
 615 001d 00000000 		.4byte	0
 616 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 24


 617 0025 02       		.uleb128 0x2
 618 0026 01       		.byte	0x1
 619 0027 06       		.byte	0x6
 620 0028 F4010000 		.4byte	.LASF0
 621 002c 02       		.uleb128 0x2
 622 002d 01       		.byte	0x1
 623 002e 08       		.byte	0x8
 624 002f 86010000 		.4byte	.LASF1
 625 0033 02       		.uleb128 0x2
 626 0034 02       		.byte	0x2
 627 0035 05       		.byte	0x5
 628 0036 0F000000 		.4byte	.LASF2
 629 003a 03       		.uleb128 0x3
 630 003b 61000000 		.4byte	.LASF4
 631 003f 02       		.byte	0x2
 632 0040 2B       		.byte	0x2b
 633 0041 45000000 		.4byte	0x45
 634 0045 02       		.uleb128 0x2
 635 0046 02       		.byte	0x2
 636 0047 07       		.byte	0x7
 637 0048 40020000 		.4byte	.LASF3
 638 004c 03       		.uleb128 0x3
 639 004d BF030000 		.4byte	.LASF5
 640 0051 02       		.byte	0x2
 641 0052 3F       		.byte	0x3f
 642 0053 57000000 		.4byte	0x57
 643 0057 02       		.uleb128 0x2
 644 0058 04       		.byte	0x4
 645 0059 05       		.byte	0x5
 646 005a 4B010000 		.4byte	.LASF6
 647 005e 02       		.uleb128 0x2
 648 005f 04       		.byte	0x4
 649 0060 07       		.byte	0x7
 650 0061 7D030000 		.4byte	.LASF7
 651 0065 02       		.uleb128 0x2
 652 0066 08       		.byte	0x8
 653 0067 05       		.byte	0x5
 654 0068 FE000000 		.4byte	.LASF8
 655 006c 02       		.uleb128 0x2
 656 006d 08       		.byte	0x8
 657 006e 07       		.byte	0x7
 658 006f 08020000 		.4byte	.LASF9
 659 0073 04       		.uleb128 0x4
 660 0074 04       		.byte	0x4
 661 0075 05       		.byte	0x5
 662 0076 696E7400 		.ascii	"int\000"
 663 007a 02       		.uleb128 0x2
 664 007b 04       		.byte	0x4
 665 007c 07       		.byte	0x7
 666 007d 1F020000 		.4byte	.LASF10
 667 0081 03       		.uleb128 0x3
 668 0082 2C020000 		.4byte	.LASF11
 669 0086 03       		.byte	0x3
 670 0087 21       		.byte	0x21
 671 0088 3A000000 		.4byte	0x3a
 672 008c 03       		.uleb128 0x3
 673 008d 00020000 		.4byte	.LASF12
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 25


 674 0091 03       		.byte	0x3
 675 0092 2C       		.byte	0x2c
 676 0093 4C000000 		.4byte	0x4c
 677 0097 05       		.uleb128 0x5
 678 0098 B4000000 		.4byte	.LASF13
 679 009c 04       		.byte	0x4
 680 009d 9201     		.2byte	0x192
 681 009f 2C000000 		.4byte	0x2c
 682 00a3 05       		.uleb128 0x5
 683 00a4 64030000 		.4byte	.LASF14
 684 00a8 04       		.byte	0x4
 685 00a9 9401     		.2byte	0x194
 686 00ab 5E000000 		.4byte	0x5e
 687 00af 02       		.uleb128 0x2
 688 00b0 04       		.byte	0x4
 689 00b1 04       		.byte	0x4
 690 00b2 F8000000 		.4byte	.LASF15
 691 00b6 02       		.uleb128 0x2
 692 00b7 08       		.byte	0x8
 693 00b8 04       		.byte	0x4
 694 00b9 00040000 		.4byte	.LASF16
 695 00bd 02       		.uleb128 0x2
 696 00be 01       		.byte	0x1
 697 00bf 08       		.byte	0x8
 698 00c0 61020000 		.4byte	.LASF17
 699 00c4 05       		.uleb128 0x5
 700 00c5 0C010000 		.4byte	.LASF18
 701 00c9 04       		.byte	0x4
 702 00ca 4E02     		.2byte	0x24e
 703 00cc D0000000 		.4byte	0xd0
 704 00d0 06       		.uleb128 0x6
 705 00d1 04       		.byte	0x4
 706 00d2 D6000000 		.4byte	0xd6
 707 00d6 07       		.uleb128 0x7
 708 00d7 02       		.uleb128 0x2
 709 00d8 04       		.byte	0x4
 710 00d9 07       		.byte	0x7
 711 00da 19000000 		.4byte	.LASF19
 712 00de 06       		.uleb128 0x6
 713 00df 04       		.byte	0x4
 714 00e0 BD000000 		.4byte	0xbd
 715 00e4 08       		.uleb128 0x8
 716 00e5 7B000000 		.4byte	.LASF72
 717 00e9 08       		.byte	0x8
 718 00ea 05       		.byte	0x5
 719 00eb 11       		.byte	0x11
 720 00ec 1D010000 		.4byte	0x11d
 721 00f0 09       		.uleb128 0x9
 722 00f1 6C3300   		.ascii	"l3\000"
 723 00f4 05       		.byte	0x5
 724 00f5 12       		.byte	0x12
 725 00f6 81000000 		.4byte	0x81
 726 00fa 00       		.byte	0
 727 00fb 09       		.uleb128 0x9
 728 00fc 6C3100   		.ascii	"l1\000"
 729 00ff 05       		.byte	0x5
 730 0100 14       		.byte	0x14
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 26


 731 0101 81000000 		.4byte	0x81
 732 0105 02       		.byte	0x2
 733 0106 09       		.uleb128 0x9
 734 0107 723100   		.ascii	"r1\000"
 735 010a 05       		.byte	0x5
 736 010b 15       		.byte	0x15
 737 010c 81000000 		.4byte	0x81
 738 0110 04       		.byte	0x4
 739 0111 09       		.uleb128 0x9
 740 0112 723300   		.ascii	"r3\000"
 741 0115 05       		.byte	0x5
 742 0116 17       		.byte	0x17
 743 0117 81000000 		.4byte	0x81
 744 011b 06       		.byte	0x6
 745 011c 00       		.byte	0
 746 011d 02       		.uleb128 0x2
 747 011e 08       		.byte	0x8
 748 011f 04       		.byte	0x4
 749 0120 99010000 		.4byte	.LASF20
 750 0124 0A       		.uleb128 0xa
 751 0125 F4020000 		.4byte	.LASF73
 752 0129 01       		.byte	0x1
 753 012a 2E       		.byte	0x2e
 754 012b 73000000 		.4byte	0x73
 755 012f 00000000 		.4byte	.LFB63
 756 0133 3C020000 		.4byte	.LFE63-.LFB63
 757 0137 01       		.uleb128 0x1
 758 0138 9C       		.byte	0x9c
 759 0139 C2040000 		.4byte	0x4c2
 760 013d 0B       		.uleb128 0xb
 761 013e 2D000000 		.4byte	.LASF21
 762 0142 01       		.byte	0x1
 763 0143 31       		.byte	0x31
 764 0144 73000000 		.4byte	0x73
 765 0148 00000000 		.4byte	.LLST0
 766 014c 0B       		.uleb128 0xb
 767 014d 94010000 		.4byte	.LASF22
 768 0151 01       		.byte	0x1
 769 0152 34       		.byte	0x34
 770 0153 73000000 		.4byte	0x73
 771 0157 36000000 		.4byte	.LLST1
 772 015b 0B       		.uleb128 0xb
 773 015c 71000000 		.4byte	.LASF23
 774 0160 01       		.byte	0x1
 775 0161 37       		.byte	0x37
 776 0162 73000000 		.4byte	0x73
 777 0166 6C000000 		.4byte	.LLST2
 778 016a 0B       		.uleb128 0xb
 779 016b 40010000 		.4byte	.LASF24
 780 016f 01       		.byte	0x1
 781 0170 3A       		.byte	0x3a
 782 0171 73000000 		.4byte	0x73
 783 0175 DC000000 		.4byte	.LLST3
 784 0179 0B       		.uleb128 0xb
 785 017a 35020000 		.4byte	.LASF25
 786 017e 01       		.byte	0x1
 787 017f 3D       		.byte	0x3d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 27


 788 0180 97000000 		.4byte	0x97
 789 0184 20010000 		.4byte	.LLST4
 790 0188 0C       		.uleb128 0xc
 791 0189 3A020000 		.4byte	.LASF26
 792 018d 01       		.byte	0x1
 793 018e 40       		.byte	0x40
 794 018f 97000000 		.4byte	0x97
 795 0193 70       		.sleb128 -16
 796 0194 0D       		.uleb128 0xd
 797 0195 97000000 		.4byte	.LASF27
 798 0199 01       		.byte	0x1
 799 019a 43       		.byte	0x43
 800 019b 73000000 		.4byte	0x73
 801 019f 0852     		.2byte	0x5208
 802 01a1 0D       		.uleb128 0xd
 803 01a2 84000000 		.4byte	.LASF28
 804 01a6 01       		.byte	0x1
 805 01a7 44       		.byte	0x44
 806 01a8 73000000 		.4byte	0x73
 807 01ac 5C44     		.2byte	0x445c
 808 01ae 0D       		.uleb128 0xd
 809 01af C9030000 		.4byte	.LASF29
 810 01b3 01       		.byte	0x1
 811 01b4 45       		.byte	0x45
 812 01b5 73000000 		.4byte	0x73
 813 01b9 0852     		.2byte	0x5208
 814 01bb 0D       		.uleb128 0xd
 815 01bc ED030000 		.4byte	.LASF30
 816 01c0 01       		.byte	0x1
 817 01c1 46       		.byte	0x46
 818 01c2 73000000 		.4byte	0x73
 819 01c6 FC53     		.2byte	0x53fc
 820 01c8 0D       		.uleb128 0xd
 821 01c9 1A040000 		.4byte	.LASF31
 822 01cd 01       		.byte	0x1
 823 01ce 48       		.byte	0x48
 824 01cf 73000000 		.4byte	0x73
 825 01d3 A116     		.2byte	0x16a1
 826 01d5 0D       		.uleb128 0xd
 827 01d6 07040000 		.4byte	.LASF32
 828 01da 01       		.byte	0x1
 829 01db 49       		.byte	0x49
 830 01dc 73000000 		.4byte	0x73
 831 01e0 9411     		.2byte	0x1194
 832 01e2 0D       		.uleb128 0xd
 833 01e3 E1010000 		.4byte	.LASF33
 834 01e7 01       		.byte	0x1
 835 01e8 4A       		.byte	0x4a
 836 01e9 73000000 		.4byte	0x73
 837 01ed AA11     		.2byte	0x11aa
 838 01ef 0D       		.uleb128 0xd
 839 01f0 2D010000 		.4byte	.LASF34
 840 01f4 01       		.byte	0x1
 841 01f5 4B       		.byte	0x4b
 842 01f6 73000000 		.4byte	0x73
 843 01fa 9518     		.2byte	0x1895
 844 01fc 0D       		.uleb128 0xd
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 28


 845 01fd 34000000 		.4byte	.LASF35
 846 0201 01       		.byte	0x1
 847 0202 4D       		.byte	0x4d
 848 0203 73000000 		.4byte	0x73
 849 0207 673B     		.2byte	0x3b67
 850 0209 0D       		.uleb128 0xd
 851 020a 22000000 		.4byte	.LASF36
 852 020e 01       		.byte	0x1
 853 020f 4E       		.byte	0x4e
 854 0210 73000000 		.4byte	0x73
 855 0214 C832     		.2byte	0x32c8
 856 0216 0D       		.uleb128 0xd
 857 0217 72030000 		.4byte	.LASF37
 858 021b 01       		.byte	0x1
 859 021c 4F       		.byte	0x4f
 860 021d 73000000 		.4byte	0x73
 861 0221 5E40     		.2byte	0x405e
 862 0223 0D       		.uleb128 0xd
 863 0224 8F030000 		.4byte	.LASF38
 864 0228 01       		.byte	0x1
 865 0229 50       		.byte	0x50
 866 022a 73000000 		.4byte	0x73
 867 022e 673B     		.2byte	0x3b67
 868 0230 0B       		.uleb128 0xb
 869 0231 46000000 		.4byte	.LASF39
 870 0235 01       		.byte	0x1
 871 0236 52       		.byte	0x52
 872 0237 AF000000 		.4byte	0xaf
 873 023b 8E010000 		.4byte	.LLST5
 874 023f 0B       		.uleb128 0xb
 875 0240 F9020000 		.4byte	.LASF40
 876 0244 01       		.byte	0x1
 877 0245 53       		.byte	0x53
 878 0246 AF000000 		.4byte	0xaf
 879 024a E8010000 		.4byte	.LLST6
 880 024e 0B       		.uleb128 0xb
 881 024f 75010000 		.4byte	.LASF41
 882 0253 01       		.byte	0x1
 883 0254 54       		.byte	0x54
 884 0255 AF000000 		.4byte	0xaf
 885 0259 16020000 		.4byte	.LLST7
 886 025d 0B       		.uleb128 0xb
 887 025e 42040000 		.4byte	.LASF42
 888 0262 01       		.byte	0x1
 889 0263 55       		.byte	0x55
 890 0264 AF000000 		.4byte	0xaf
 891 0268 70020000 		.4byte	.LLST8
 892 026c 0B       		.uleb128 0xb
 893 026d AA000000 		.4byte	.LASF43
 894 0271 01       		.byte	0x1
 895 0272 57       		.byte	0x57
 896 0273 AF000000 		.4byte	0xaf
 897 0277 9E020000 		.4byte	.LLST9
 898 027b 0B       		.uleb128 0xb
 899 027c 5B010000 		.4byte	.LASF44
 900 0280 01       		.byte	0x1
 901 0281 58       		.byte	0x58
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 29


 902 0282 AF000000 		.4byte	0xaf
 903 0286 D7020000 		.4byte	.LLST10
 904 028a 0E       		.uleb128 0xe
 905 028b 72656600 		.ascii	"ref\000"
 906 028f 01       		.byte	0x1
 907 0290 5B       		.byte	0x5b
 908 0291 E4000000 		.4byte	0xe4
 909 0295 02       		.uleb128 0x2
 910 0296 91       		.byte	0x91
 911 0297 58       		.sleb128 -40
 912 0298 0E       		.uleb128 0xe
 913 0299 64696700 		.ascii	"dig\000"
 914 029d 01       		.byte	0x1
 915 029e 5C       		.byte	0x5c
 916 029f E4000000 		.4byte	0xe4
 917 02a3 02       		.uleb128 0x2
 918 02a4 91       		.byte	0x91
 919 02a5 50       		.sleb128 -48
 920 02a6 0B       		.uleb128 0xb
 921 02a7 54010000 		.4byte	.LASF45
 922 02ab 01       		.byte	0x1
 923 02ac 6E       		.byte	0x6e
 924 02ad 97000000 		.4byte	0x97
 925 02b1 10030000 		.4byte	.LLST11
 926 02b5 0F       		.uleb128 0xf
 927 02b6 0C000000 		.4byte	.LVL1
 928 02ba DE050000 		.4byte	0x5de
 929 02be 0F       		.uleb128 0xf
 930 02bf 10000000 		.4byte	.LVL2
 931 02c3 E5050000 		.4byte	0x5e5
 932 02c7 0F       		.uleb128 0xf
 933 02c8 14000000 		.4byte	.LVL3
 934 02cc EC050000 		.4byte	0x5ec
 935 02d0 0F       		.uleb128 0xf
 936 02d1 18000000 		.4byte	.LVL4
 937 02d5 F9050000 		.4byte	0x5f9
 938 02d9 10       		.uleb128 0x10
 939 02da 20000000 		.4byte	.LVL5
 940 02de 06060000 		.4byte	0x606
 941 02e2 F1020000 		.4byte	0x2f1
 942 02e6 11       		.uleb128 0x11
 943 02e7 01       		.uleb128 0x1
 944 02e8 51       		.byte	0x51
 945 02e9 01       		.uleb128 0x1
 946 02ea 30       		.byte	0x30
 947 02eb 11       		.uleb128 0x11
 948 02ec 01       		.uleb128 0x1
 949 02ed 50       		.byte	0x50
 950 02ee 01       		.uleb128 0x1
 951 02ef 30       		.byte	0x30
 952 02f0 00       		.byte	0
 953 02f1 0F       		.uleb128 0xf
 954 02f2 26000000 		.4byte	.LVL6
 955 02f6 1C060000 		.4byte	0x61c
 956 02fa 10       		.uleb128 0x10
 957 02fb 38000000 		.4byte	.LVL7
 958 02ff 2D060000 		.4byte	0x62d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 30


 959 0303 24030000 		.4byte	0x324
 960 0307 11       		.uleb128 0x11
 961 0308 01       		.uleb128 0x1
 962 0309 53       		.byte	0x53
 963 030a 03       		.uleb128 0x3
 964 030b 0A       		.byte	0xa
 965 030c FC53     		.2byte	0x53fc
 966 030e 11       		.uleb128 0x11
 967 030f 01       		.uleb128 0x1
 968 0310 52       		.byte	0x52
 969 0311 03       		.uleb128 0x3
 970 0312 0A       		.byte	0xa
 971 0313 0852     		.2byte	0x5208
 972 0315 11       		.uleb128 0x11
 973 0316 01       		.uleb128 0x1
 974 0317 51       		.byte	0x51
 975 0318 03       		.uleb128 0x3
 976 0319 0A       		.byte	0xa
 977 031a 5C44     		.2byte	0x445c
 978 031c 11       		.uleb128 0x11
 979 031d 01       		.uleb128 0x1
 980 031e 50       		.byte	0x50
 981 031f 03       		.uleb128 0x3
 982 0320 0A       		.byte	0xa
 983 0321 0852     		.2byte	0x5208
 984 0323 00       		.byte	0
 985 0324 0F       		.uleb128 0xf
 986 0325 3C000000 		.4byte	.LVL8
 987 0329 4D060000 		.4byte	0x64d
 988 032d 10       		.uleb128 0x10
 989 032e 42000000 		.4byte	.LVL9
 990 0332 54060000 		.4byte	0x654
 991 0336 40030000 		.4byte	0x340
 992 033a 11       		.uleb128 0x11
 993 033b 01       		.uleb128 0x1
 994 033c 50       		.byte	0x50
 995 033d 01       		.uleb128 0x1
 996 033e 31       		.byte	0x31
 997 033f 00       		.byte	0
 998 0340 10       		.uleb128 0x10
 999 0341 48000000 		.4byte	.LVL10
 1000 0345 65060000 		.4byte	0x665
 1001 0349 53030000 		.4byte	0x353
 1002 034d 11       		.uleb128 0x11
 1003 034e 01       		.uleb128 0x1
 1004 034f 50       		.byte	0x50
 1005 0350 01       		.uleb128 0x1
 1006 0351 30       		.byte	0x30
 1007 0352 00       		.byte	0
 1008 0353 0F       		.uleb128 0xf
 1009 0354 50000000 		.4byte	.LVL12
 1010 0358 76060000 		.4byte	0x676
 1011 035c 10       		.uleb128 0x10
 1012 035d 58000000 		.4byte	.LVL15
 1013 0361 81060000 		.4byte	0x681
 1014 0365 6F030000 		.4byte	0x36f
 1015 0369 11       		.uleb128 0x11
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 31


 1016 036a 01       		.uleb128 0x1
 1017 036b 50       		.byte	0x50
 1018 036c 01       		.uleb128 0x1
 1019 036d 3A       		.byte	0x3a
 1020 036e 00       		.byte	0
 1021 036f 10       		.uleb128 0x10
 1022 0370 64000000 		.4byte	.LVL17
 1023 0374 92060000 		.4byte	0x692
 1024 0378 83030000 		.4byte	0x383
 1025 037c 11       		.uleb128 0x11
 1026 037d 01       		.uleb128 0x1
 1027 037e 50       		.byte	0x50
 1028 037f 02       		.uleb128 0x2
 1029 0380 09       		.byte	0x9
 1030 0381 F0       		.byte	0xf0
 1031 0382 00       		.byte	0
 1032 0383 10       		.uleb128 0x10
 1033 0384 74000000 		.4byte	.LVL20
 1034 0388 A3060000 		.4byte	0x6a3
 1035 038c 97030000 		.4byte	0x397
 1036 0390 11       		.uleb128 0x11
 1037 0391 01       		.uleb128 0x1
 1038 0392 50       		.byte	0x50
 1039 0393 02       		.uleb128 0x2
 1040 0394 91       		.byte	0x91
 1041 0395 58       		.sleb128 -40
 1042 0396 00       		.byte	0
 1043 0397 10       		.uleb128 0x10
 1044 0398 7A000000 		.4byte	.LVL21
 1045 039c BA060000 		.4byte	0x6ba
 1046 03a0 AB030000 		.4byte	0x3ab
 1047 03a4 11       		.uleb128 0x11
 1048 03a5 01       		.uleb128 0x1
 1049 03a6 50       		.byte	0x50
 1050 03a7 02       		.uleb128 0x2
 1051 03a8 7D       		.byte	0x7d
 1052 03a9 00       		.sleb128 0
 1053 03aa 00       		.byte	0
 1054 03ab 10       		.uleb128 0x10
 1055 03ac 8C000000 		.4byte	.LVL23
 1056 03b0 A3060000 		.4byte	0x6a3
 1057 03b4 BF030000 		.4byte	0x3bf
 1058 03b8 11       		.uleb128 0x11
 1059 03b9 01       		.uleb128 0x1
 1060 03ba 50       		.byte	0x50
 1061 03bb 02       		.uleb128 0x2
 1062 03bc 91       		.byte	0x91
 1063 03bd 58       		.sleb128 -40
 1064 03be 00       		.byte	0
 1065 03bf 10       		.uleb128 0x10
 1066 03c0 9C000000 		.4byte	.LVL27
 1067 03c4 81060000 		.4byte	0x681
 1068 03c8 D2030000 		.4byte	0x3d2
 1069 03cc 11       		.uleb128 0x11
 1070 03cd 01       		.uleb128 0x1
 1071 03ce 50       		.byte	0x50
 1072 03cf 01       		.uleb128 0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 32


 1073 03d0 31       		.byte	0x31
 1074 03d1 00       		.byte	0
 1075 03d2 10       		.uleb128 0x10
 1076 03d3 A8000000 		.4byte	.LVL30
 1077 03d7 A3060000 		.4byte	0x6a3
 1078 03db E6030000 		.4byte	0x3e6
 1079 03df 11       		.uleb128 0x11
 1080 03e0 01       		.uleb128 0x1
 1081 03e1 50       		.byte	0x50
 1082 03e2 02       		.uleb128 0x2
 1083 03e3 91       		.byte	0x91
 1084 03e4 58       		.sleb128 -40
 1085 03e5 00       		.byte	0
 1086 03e6 10       		.uleb128 0x10
 1087 03e7 AE000000 		.4byte	.LVL31
 1088 03eb BA060000 		.4byte	0x6ba
 1089 03ef FA030000 		.4byte	0x3fa
 1090 03f3 11       		.uleb128 0x11
 1091 03f4 01       		.uleb128 0x1
 1092 03f5 50       		.byte	0x50
 1093 03f6 02       		.uleb128 0x2
 1094 03f7 7D       		.byte	0x7d
 1095 03f8 00       		.sleb128 0
 1096 03f9 00       		.byte	0
 1097 03fa 0F       		.uleb128 0xf
 1098 03fb 2E010000 		.4byte	.LVL56
 1099 03ff CB060000 		.4byte	0x6cb
 1100 0403 10       		.uleb128 0x10
 1101 0404 34010000 		.4byte	.LVL57
 1102 0408 81060000 		.4byte	0x681
 1103 040c 16040000 		.4byte	0x416
 1104 0410 11       		.uleb128 0x11
 1105 0411 01       		.uleb128 0x1
 1106 0412 50       		.byte	0x50
 1107 0413 01       		.uleb128 0x1
 1108 0414 31       		.byte	0x31
 1109 0415 00       		.byte	0
 1110 0416 10       		.uleb128 0x10
 1111 0417 42010000 		.4byte	.LVL59
 1112 041b 92060000 		.4byte	0x692
 1113 041f 2A040000 		.4byte	0x42a
 1114 0423 11       		.uleb128 0x11
 1115 0424 01       		.uleb128 0x1
 1116 0425 50       		.byte	0x50
 1117 0426 02       		.uleb128 0x2
 1118 0427 09       		.byte	0x9
 1119 0428 F0       		.byte	0xf0
 1120 0429 00       		.byte	0
 1121 042a 10       		.uleb128 0x10
 1122 042b 56010000 		.4byte	.LVL62
 1123 042f A3060000 		.4byte	0x6a3
 1124 0433 3E040000 		.4byte	0x43e
 1125 0437 11       		.uleb128 0x11
 1126 0438 01       		.uleb128 0x1
 1127 0439 50       		.byte	0x50
 1128 043a 02       		.uleb128 0x2
 1129 043b 91       		.byte	0x91
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 33


 1130 043c 58       		.sleb128 -40
 1131 043d 00       		.byte	0
 1132 043e 10       		.uleb128 0x10
 1133 043f 66010000 		.4byte	.LVL66
 1134 0443 81060000 		.4byte	0x681
 1135 0447 51040000 		.4byte	0x451
 1136 044b 11       		.uleb128 0x11
 1137 044c 01       		.uleb128 0x1
 1138 044d 50       		.byte	0x50
 1139 044e 01       		.uleb128 0x1
 1140 044f 31       		.byte	0x31
 1141 0450 00       		.byte	0
 1142 0451 10       		.uleb128 0x10
 1143 0452 72010000 		.4byte	.LVL69
 1144 0456 A3060000 		.4byte	0x6a3
 1145 045a 65040000 		.4byte	0x465
 1146 045e 11       		.uleb128 0x11
 1147 045f 01       		.uleb128 0x1
 1148 0460 50       		.byte	0x50
 1149 0461 02       		.uleb128 0x2
 1150 0462 91       		.byte	0x91
 1151 0463 58       		.sleb128 -40
 1152 0464 00       		.byte	0
 1153 0465 10       		.uleb128 0x10
 1154 0466 78010000 		.4byte	.LVL70
 1155 046a BA060000 		.4byte	0x6ba
 1156 046e 79040000 		.4byte	0x479
 1157 0472 11       		.uleb128 0x11
 1158 0473 01       		.uleb128 0x1
 1159 0474 50       		.byte	0x50
 1160 0475 02       		.uleb128 0x2
 1161 0476 7D       		.byte	0x7d
 1162 0477 00       		.sleb128 0
 1163 0478 00       		.byte	0
 1164 0479 0F       		.uleb128 0xf
 1165 047a E6010000 		.4byte	.LVL93
 1166 047e DC060000 		.4byte	0x6dc
 1167 0482 10       		.uleb128 0x10
 1168 0483 EC010000 		.4byte	.LVL94
 1169 0487 81060000 		.4byte	0x681
 1170 048b 95040000 		.4byte	0x495
 1171 048f 11       		.uleb128 0x11
 1172 0490 01       		.uleb128 0x1
 1173 0491 50       		.byte	0x50
 1174 0492 01       		.uleb128 0x1
 1175 0493 31       		.byte	0x31
 1176 0494 00       		.byte	0
 1177 0495 10       		.uleb128 0x10
 1178 0496 FA010000 		.4byte	.LVL96
 1179 049a 92060000 		.4byte	0x692
 1180 049e A9040000 		.4byte	0x4a9
 1181 04a2 11       		.uleb128 0x11
 1182 04a3 01       		.uleb128 0x1
 1183 04a4 50       		.byte	0x50
 1184 04a5 02       		.uleb128 0x2
 1185 04a6 09       		.byte	0x9
 1186 04a7 F0       		.byte	0xf0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 34


 1187 04a8 00       		.byte	0
 1188 04a9 0F       		.uleb128 0xf
 1189 04aa 08020000 		.4byte	.LVL98
 1190 04ae EC050000 		.4byte	0x5ec
 1191 04b2 12       		.uleb128 0x12
 1192 04b3 12020000 		.4byte	.LVL100
 1193 04b7 81060000 		.4byte	0x681
 1194 04bb 11       		.uleb128 0x11
 1195 04bc 01       		.uleb128 0x1
 1196 04bd 50       		.byte	0x50
 1197 04be 01       		.uleb128 0x1
 1198 04bf 31       		.byte	0x31
 1199 04c0 00       		.byte	0
 1200 04c1 00       		.byte	0
 1201 04c2 13       		.uleb128 0x13
 1202 04c3 3F000000 		.4byte	.LASF47
 1203 04c7 01       		.byte	0x1
 1204 04c8 8A02     		.2byte	0x28a
 1205 04ca 73000000 		.4byte	0x73
 1206 04ce 00000000 		.4byte	.LFB64
 1207 04d2 2A000000 		.4byte	.LFE64-.LFB64
 1208 04d6 01       		.uleb128 0x1
 1209 04d7 9C       		.byte	0x9c
 1210 04d8 37050000 		.4byte	0x537
 1211 04dc 14       		.uleb128 0x14
 1212 04dd 6C000000 		.4byte	.LASF46
 1213 04e1 01       		.byte	0x1
 1214 04e2 8A02     		.2byte	0x28a
 1215 04e4 73000000 		.4byte	0x73
 1216 04e8 23030000 		.4byte	.LLST12
 1217 04ec 15       		.uleb128 0x15
 1218 04ed 70747200 		.ascii	"ptr\000"
 1219 04f1 01       		.byte	0x1
 1220 04f2 8A02     		.2byte	0x28a
 1221 04f4 DE000000 		.4byte	0xde
 1222 04f8 44030000 		.4byte	.LLST13
 1223 04fc 15       		.uleb128 0x15
 1224 04fd 6C656E00 		.ascii	"len\000"
 1225 0501 01       		.byte	0x1
 1226 0502 8A02     		.2byte	0x28a
 1227 0504 73000000 		.4byte	0x73
 1228 0508 78030000 		.4byte	.LLST14
 1229 050c 16       		.uleb128 0x16
 1230 050d 6E00     		.ascii	"n\000"
 1231 050f 01       		.byte	0x1
 1232 0510 8D02     		.2byte	0x28d
 1233 0512 73000000 		.4byte	0x73
 1234 0516 96030000 		.4byte	.LLST15
 1235 051a 10       		.uleb128 0x10
 1236 051b 16000000 		.4byte	.LVL104
 1237 051f ED060000 		.4byte	0x6ed
 1238 0523 2D050000 		.4byte	0x52d
 1239 0527 11       		.uleb128 0x11
 1240 0528 01       		.uleb128 0x1
 1241 0529 50       		.byte	0x50
 1242 052a 01       		.uleb128 0x1
 1243 052b 3D       		.byte	0x3d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 35


 1244 052c 00       		.byte	0
 1245 052d 0F       		.uleb128 0xf
 1246 052e 1E000000 		.4byte	.LVL106
 1247 0532 ED060000 		.4byte	0x6ed
 1248 0536 00       		.byte	0
 1249 0537 13       		.uleb128 0x13
 1250 0538 DB010000 		.4byte	.LASF48
 1251 053c 01       		.byte	0x1
 1252 053d 9502     		.2byte	0x295
 1253 053f 73000000 		.4byte	0x73
 1254 0543 00000000 		.4byte	.LFB65
 1255 0547 38000000 		.4byte	.LFE65-.LFB65
 1256 054b 01       		.uleb128 0x1
 1257 054c 9C       		.byte	0x9c
 1258 054d CD050000 		.4byte	0x5cd
 1259 0551 14       		.uleb128 0x14
 1260 0552 6C000000 		.4byte	.LASF46
 1261 0556 01       		.byte	0x1
 1262 0557 9502     		.2byte	0x295
 1263 0559 73000000 		.4byte	0x73
 1264 055d B5030000 		.4byte	.LLST16
 1265 0561 15       		.uleb128 0x15
 1266 0562 70747200 		.ascii	"ptr\000"
 1267 0566 01       		.byte	0x1
 1268 0567 9502     		.2byte	0x295
 1269 0569 DE000000 		.4byte	0xde
 1270 056d D6030000 		.4byte	.LLST17
 1271 0571 14       		.uleb128 0x14
 1272 0572 B9030000 		.4byte	.LASF49
 1273 0576 01       		.byte	0x1
 1274 0577 9502     		.2byte	0x295
 1275 0579 73000000 		.4byte	0x73
 1276 057d 0A040000 		.4byte	.LLST18
 1277 0581 16       		.uleb128 0x16
 1278 0582 63687300 		.ascii	"chs\000"
 1279 0586 01       		.byte	0x1
 1280 0587 9702     		.2byte	0x297
 1281 0589 73000000 		.4byte	0x73
 1282 058d 28040000 		.4byte	.LLST19
 1283 0591 16       		.uleb128 0x16
 1284 0592 636800   		.ascii	"ch\000"
 1285 0595 01       		.byte	0x1
 1286 0596 9802     		.2byte	0x298
 1287 0598 BD000000 		.4byte	0xbd
 1288 059c 47040000 		.4byte	.LLST20
 1289 05a0 0F       		.uleb128 0xf
 1290 05a1 0E000000 		.4byte	.LVL112
 1291 05a5 FE060000 		.4byte	0x6fe
 1292 05a9 10       		.uleb128 0x10
 1293 05aa 16000000 		.4byte	.LVL113
 1294 05ae ED060000 		.4byte	0x6ed
 1295 05b2 BD050000 		.4byte	0x5bd
 1296 05b6 11       		.uleb128 0x11
 1297 05b7 01       		.uleb128 0x1
 1298 05b8 50       		.byte	0x50
 1299 05b9 02       		.uleb128 0x2
 1300 05ba 75       		.byte	0x75
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 36


 1301 05bb 00       		.sleb128 0
 1302 05bc 00       		.byte	0
 1303 05bd 12       		.uleb128 0x12
 1304 05be 22000000 		.4byte	.LVL116
 1305 05c2 ED060000 		.4byte	0x6ed
 1306 05c6 11       		.uleb128 0x11
 1307 05c7 01       		.uleb128 0x1
 1308 05c8 50       		.byte	0x50
 1309 05c9 01       		.uleb128 0x1
 1310 05ca 3A       		.byte	0x3a
 1311 05cb 00       		.byte	0
 1312 05cc 00       		.byte	0
 1313 05cd 17       		.uleb128 0x17
 1314 05ce 2D040000 		.4byte	.LASF74
 1315 05d2 0D       		.byte	0xd
 1316 05d3 9606     		.2byte	0x696
 1317 05d5 D9050000 		.4byte	0x5d9
 1318 05d9 18       		.uleb128 0x18
 1319 05da 8C000000 		.4byte	0x8c
 1320 05de 19       		.uleb128 0x19
 1321 05df DC000000 		.4byte	.LASF50
 1322 05e3 06       		.byte	0x6
 1323 05e4 54       		.byte	0x54
 1324 05e5 19       		.uleb128 0x19
 1325 05e6 A5010000 		.4byte	.LASF51
 1326 05ea 07       		.byte	0x7
 1327 05eb 34       		.byte	0x34
 1328 05ec 1A       		.uleb128 0x1a
 1329 05ed BA000000 		.4byte	.LASF52
 1330 05f1 01       		.byte	0x1
 1331 05f2 28       		.byte	0x28
 1332 05f3 F9050000 		.4byte	0x5f9
 1333 05f7 1B       		.uleb128 0x1b
 1334 05f8 00       		.byte	0
 1335 05f9 1A       		.uleb128 0x1a
 1336 05fa AD030000 		.4byte	.LASF53
 1337 05fe 01       		.byte	0x1
 1338 05ff 23       		.byte	0x23
 1339 0600 06060000 		.4byte	0x606
 1340 0604 1B       		.uleb128 0x1b
 1341 0605 00       		.byte	0
 1342 0606 1C       		.uleb128 0x1c
 1343 0607 53020000 		.4byte	.LASF54
 1344 060b 01       		.byte	0x1
 1345 060c 24       		.byte	0x24
 1346 060d 1C060000 		.4byte	0x61c
 1347 0611 1D       		.uleb128 0x1d
 1348 0612 97000000 		.4byte	0x97
 1349 0616 1D       		.uleb128 0x1d
 1350 0617 A3000000 		.4byte	0xa3
 1351 061b 00       		.byte	0
 1352 061c 1C       		.uleb128 0x1c
 1353 061d 9A030000 		.4byte	.LASF55
 1354 0621 08       		.byte	0x8
 1355 0622 18       		.byte	0x18
 1356 0623 2D060000 		.4byte	0x62d
 1357 0627 1D       		.uleb128 0x1d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 37


 1358 0628 C4000000 		.4byte	0xc4
 1359 062c 00       		.byte	0
 1360 062d 1C       		.uleb128 0x1c
 1361 062e C1010000 		.4byte	.LASF56
 1362 0632 01       		.byte	0x1
 1363 0633 27       		.byte	0x27
 1364 0634 4D060000 		.4byte	0x64d
 1365 0638 1D       		.uleb128 0x1d
 1366 0639 81000000 		.4byte	0x81
 1367 063d 1D       		.uleb128 0x1d
 1368 063e 81000000 		.4byte	0x81
 1369 0642 1D       		.uleb128 0x1d
 1370 0643 81000000 		.4byte	0x81
 1371 0647 1D       		.uleb128 0x1d
 1372 0648 81000000 		.4byte	0x81
 1373 064c 00       		.byte	0
 1374 064d 19       		.uleb128 0x19
 1375 064e CA000000 		.4byte	.LASF57
 1376 0652 05       		.byte	0x5
 1377 0653 1A       		.byte	0x1a
 1378 0654 1C       		.uleb128 0x1c
 1379 0655 53040000 		.4byte	.LASF58
 1380 0659 09       		.byte	0x9
 1381 065a 26       		.byte	0x26
 1382 065b 65060000 		.4byte	0x665
 1383 065f 1D       		.uleb128 0x1d
 1384 0660 97000000 		.4byte	0x97
 1385 0664 00       		.byte	0
 1386 0665 1C       		.uleb128 0x1c
 1387 0666 4A030000 		.4byte	.LASF59
 1388 066a 0A       		.byte	0xa
 1389 066b 26       		.byte	0x26
 1390 066c 76060000 		.4byte	0x676
 1391 0670 1D       		.uleb128 0x1d
 1392 0671 97000000 		.4byte	0x97
 1393 0675 00       		.byte	0
 1394 0676 1E       		.uleb128 0x1e
 1395 0677 5B030000 		.4byte	.LASF67
 1396 067b 0C       		.byte	0xc
 1397 067c 29       		.byte	0x29
 1398 067d 97000000 		.4byte	0x97
 1399 0681 1C       		.uleb128 0x1c
 1400 0682 3A040000 		.4byte	.LASF60
 1401 0686 0B       		.byte	0xb
 1402 0687 76       		.byte	0x76
 1403 0688 92060000 		.4byte	0x692
 1404 068c 1D       		.uleb128 0x1d
 1405 068d A3000000 		.4byte	0xa3
 1406 0691 00       		.byte	0
 1407 0692 1C       		.uleb128 0x1c
 1408 0693 66010000 		.4byte	.LASF61
 1409 0697 01       		.byte	0x1
 1410 0698 25       		.byte	0x25
 1411 0699 A3060000 		.4byte	0x6a3
 1412 069d 1D       		.uleb128 0x1d
 1413 069e 97000000 		.4byte	0x97
 1414 06a2 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 38


 1415 06a3 1C       		.uleb128 0x1c
 1416 06a4 DC030000 		.4byte	.LASF62
 1417 06a8 05       		.byte	0x5
 1418 06a9 1B       		.byte	0x1b
 1419 06aa B4060000 		.4byte	0x6b4
 1420 06ae 1D       		.uleb128 0x1d
 1421 06af B4060000 		.4byte	0x6b4
 1422 06b3 00       		.byte	0
 1423 06b4 06       		.uleb128 0x6
 1424 06b5 04       		.byte	0x4
 1425 06b6 E4000000 		.4byte	0xe4
 1426 06ba 1C       		.uleb128 0x1c
 1427 06bb 19010000 		.4byte	.LASF63
 1428 06bf 05       		.byte	0x5
 1429 06c0 1C       		.byte	0x1c
 1430 06c1 CB060000 		.4byte	0x6cb
 1431 06c5 1D       		.uleb128 0x1d
 1432 06c6 B4060000 		.4byte	0x6b4
 1433 06ca 00       		.byte	0
 1434 06cb 1C       		.uleb128 0x1c
 1435 06cc 56000000 		.4byte	.LASF64
 1436 06d0 01       		.byte	0x1
 1437 06d1 29       		.byte	0x29
 1438 06d2 DC060000 		.4byte	0x6dc
 1439 06d6 1D       		.uleb128 0x1d
 1440 06d7 97000000 		.4byte	0x97
 1441 06db 00       		.byte	0
 1442 06dc 1C       		.uleb128 0x1c
 1443 06dd B7010000 		.4byte	.LASF65
 1444 06e1 01       		.byte	0x1
 1445 06e2 2A       		.byte	0x2a
 1446 06e3 ED060000 		.4byte	0x6ed
 1447 06e7 1D       		.uleb128 0x1d
 1448 06e8 97000000 		.4byte	0x97
 1449 06ec 00       		.byte	0
 1450 06ed 1C       		.uleb128 0x1c
 1451 06ee E9000000 		.4byte	.LASF66
 1452 06f2 06       		.byte	0x6
 1453 06f3 8A       		.byte	0x8a
 1454 06f4 FE060000 		.4byte	0x6fe
 1455 06f8 1D       		.uleb128 0x1d
 1456 06f9 97000000 		.4byte	0x97
 1457 06fd 00       		.byte	0
 1458 06fe 1E       		.uleb128 0x1e
 1459 06ff 00000000 		.4byte	.LASF68
 1460 0703 06       		.byte	0x6
 1461 0704 71       		.byte	0x71
 1462 0705 97000000 		.4byte	0x97
 1463 0709 00       		.byte	0
 1464              		.section	.debug_abbrev,"",%progbits
 1465              	.Ldebug_abbrev0:
 1466 0000 01       		.uleb128 0x1
 1467 0001 11       		.uleb128 0x11
 1468 0002 01       		.byte	0x1
 1469 0003 25       		.uleb128 0x25
 1470 0004 0E       		.uleb128 0xe
 1471 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 39


 1472 0006 0B       		.uleb128 0xb
 1473 0007 03       		.uleb128 0x3
 1474 0008 0E       		.uleb128 0xe
 1475 0009 1B       		.uleb128 0x1b
 1476 000a 0E       		.uleb128 0xe
 1477 000b 55       		.uleb128 0x55
 1478 000c 17       		.uleb128 0x17
 1479 000d 11       		.uleb128 0x11
 1480 000e 01       		.uleb128 0x1
 1481 000f 10       		.uleb128 0x10
 1482 0010 17       		.uleb128 0x17
 1483 0011 00       		.byte	0
 1484 0012 00       		.byte	0
 1485 0013 02       		.uleb128 0x2
 1486 0014 24       		.uleb128 0x24
 1487 0015 00       		.byte	0
 1488 0016 0B       		.uleb128 0xb
 1489 0017 0B       		.uleb128 0xb
 1490 0018 3E       		.uleb128 0x3e
 1491 0019 0B       		.uleb128 0xb
 1492 001a 03       		.uleb128 0x3
 1493 001b 0E       		.uleb128 0xe
 1494 001c 00       		.byte	0
 1495 001d 00       		.byte	0
 1496 001e 03       		.uleb128 0x3
 1497 001f 16       		.uleb128 0x16
 1498 0020 00       		.byte	0
 1499 0021 03       		.uleb128 0x3
 1500 0022 0E       		.uleb128 0xe
 1501 0023 3A       		.uleb128 0x3a
 1502 0024 0B       		.uleb128 0xb
 1503 0025 3B       		.uleb128 0x3b
 1504 0026 0B       		.uleb128 0xb
 1505 0027 49       		.uleb128 0x49
 1506 0028 13       		.uleb128 0x13
 1507 0029 00       		.byte	0
 1508 002a 00       		.byte	0
 1509 002b 04       		.uleb128 0x4
 1510 002c 24       		.uleb128 0x24
 1511 002d 00       		.byte	0
 1512 002e 0B       		.uleb128 0xb
 1513 002f 0B       		.uleb128 0xb
 1514 0030 3E       		.uleb128 0x3e
 1515 0031 0B       		.uleb128 0xb
 1516 0032 03       		.uleb128 0x3
 1517 0033 08       		.uleb128 0x8
 1518 0034 00       		.byte	0
 1519 0035 00       		.byte	0
 1520 0036 05       		.uleb128 0x5
 1521 0037 16       		.uleb128 0x16
 1522 0038 00       		.byte	0
 1523 0039 03       		.uleb128 0x3
 1524 003a 0E       		.uleb128 0xe
 1525 003b 3A       		.uleb128 0x3a
 1526 003c 0B       		.uleb128 0xb
 1527 003d 3B       		.uleb128 0x3b
 1528 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 40


 1529 003f 49       		.uleb128 0x49
 1530 0040 13       		.uleb128 0x13
 1531 0041 00       		.byte	0
 1532 0042 00       		.byte	0
 1533 0043 06       		.uleb128 0x6
 1534 0044 0F       		.uleb128 0xf
 1535 0045 00       		.byte	0
 1536 0046 0B       		.uleb128 0xb
 1537 0047 0B       		.uleb128 0xb
 1538 0048 49       		.uleb128 0x49
 1539 0049 13       		.uleb128 0x13
 1540 004a 00       		.byte	0
 1541 004b 00       		.byte	0
 1542 004c 07       		.uleb128 0x7
 1543 004d 15       		.uleb128 0x15
 1544 004e 00       		.byte	0
 1545 004f 27       		.uleb128 0x27
 1546 0050 19       		.uleb128 0x19
 1547 0051 00       		.byte	0
 1548 0052 00       		.byte	0
 1549 0053 08       		.uleb128 0x8
 1550 0054 13       		.uleb128 0x13
 1551 0055 01       		.byte	0x1
 1552 0056 03       		.uleb128 0x3
 1553 0057 0E       		.uleb128 0xe
 1554 0058 0B       		.uleb128 0xb
 1555 0059 0B       		.uleb128 0xb
 1556 005a 3A       		.uleb128 0x3a
 1557 005b 0B       		.uleb128 0xb
 1558 005c 3B       		.uleb128 0x3b
 1559 005d 0B       		.uleb128 0xb
 1560 005e 01       		.uleb128 0x1
 1561 005f 13       		.uleb128 0x13
 1562 0060 00       		.byte	0
 1563 0061 00       		.byte	0
 1564 0062 09       		.uleb128 0x9
 1565 0063 0D       		.uleb128 0xd
 1566 0064 00       		.byte	0
 1567 0065 03       		.uleb128 0x3
 1568 0066 08       		.uleb128 0x8
 1569 0067 3A       		.uleb128 0x3a
 1570 0068 0B       		.uleb128 0xb
 1571 0069 3B       		.uleb128 0x3b
 1572 006a 0B       		.uleb128 0xb
 1573 006b 49       		.uleb128 0x49
 1574 006c 13       		.uleb128 0x13
 1575 006d 38       		.uleb128 0x38
 1576 006e 0B       		.uleb128 0xb
 1577 006f 00       		.byte	0
 1578 0070 00       		.byte	0
 1579 0071 0A       		.uleb128 0xa
 1580 0072 2E       		.uleb128 0x2e
 1581 0073 01       		.byte	0x1
 1582 0074 3F       		.uleb128 0x3f
 1583 0075 19       		.uleb128 0x19
 1584 0076 03       		.uleb128 0x3
 1585 0077 0E       		.uleb128 0xe
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 41


 1586 0078 3A       		.uleb128 0x3a
 1587 0079 0B       		.uleb128 0xb
 1588 007a 3B       		.uleb128 0x3b
 1589 007b 0B       		.uleb128 0xb
 1590 007c 49       		.uleb128 0x49
 1591 007d 13       		.uleb128 0x13
 1592 007e 11       		.uleb128 0x11
 1593 007f 01       		.uleb128 0x1
 1594 0080 12       		.uleb128 0x12
 1595 0081 06       		.uleb128 0x6
 1596 0082 40       		.uleb128 0x40
 1597 0083 18       		.uleb128 0x18
 1598 0084 9642     		.uleb128 0x2116
 1599 0086 19       		.uleb128 0x19
 1600 0087 01       		.uleb128 0x1
 1601 0088 13       		.uleb128 0x13
 1602 0089 00       		.byte	0
 1603 008a 00       		.byte	0
 1604 008b 0B       		.uleb128 0xb
 1605 008c 34       		.uleb128 0x34
 1606 008d 00       		.byte	0
 1607 008e 03       		.uleb128 0x3
 1608 008f 0E       		.uleb128 0xe
 1609 0090 3A       		.uleb128 0x3a
 1610 0091 0B       		.uleb128 0xb
 1611 0092 3B       		.uleb128 0x3b
 1612 0093 0B       		.uleb128 0xb
 1613 0094 49       		.uleb128 0x49
 1614 0095 13       		.uleb128 0x13
 1615 0096 02       		.uleb128 0x2
 1616 0097 17       		.uleb128 0x17
 1617 0098 00       		.byte	0
 1618 0099 00       		.byte	0
 1619 009a 0C       		.uleb128 0xc
 1620 009b 34       		.uleb128 0x34
 1621 009c 00       		.byte	0
 1622 009d 03       		.uleb128 0x3
 1623 009e 0E       		.uleb128 0xe
 1624 009f 3A       		.uleb128 0x3a
 1625 00a0 0B       		.uleb128 0xb
 1626 00a1 3B       		.uleb128 0x3b
 1627 00a2 0B       		.uleb128 0xb
 1628 00a3 49       		.uleb128 0x49
 1629 00a4 13       		.uleb128 0x13
 1630 00a5 1C       		.uleb128 0x1c
 1631 00a6 0D       		.uleb128 0xd
 1632 00a7 00       		.byte	0
 1633 00a8 00       		.byte	0
 1634 00a9 0D       		.uleb128 0xd
 1635 00aa 34       		.uleb128 0x34
 1636 00ab 00       		.byte	0
 1637 00ac 03       		.uleb128 0x3
 1638 00ad 0E       		.uleb128 0xe
 1639 00ae 3A       		.uleb128 0x3a
 1640 00af 0B       		.uleb128 0xb
 1641 00b0 3B       		.uleb128 0x3b
 1642 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 42


 1643 00b2 49       		.uleb128 0x49
 1644 00b3 13       		.uleb128 0x13
 1645 00b4 1C       		.uleb128 0x1c
 1646 00b5 05       		.uleb128 0x5
 1647 00b6 00       		.byte	0
 1648 00b7 00       		.byte	0
 1649 00b8 0E       		.uleb128 0xe
 1650 00b9 34       		.uleb128 0x34
 1651 00ba 00       		.byte	0
 1652 00bb 03       		.uleb128 0x3
 1653 00bc 08       		.uleb128 0x8
 1654 00bd 3A       		.uleb128 0x3a
 1655 00be 0B       		.uleb128 0xb
 1656 00bf 3B       		.uleb128 0x3b
 1657 00c0 0B       		.uleb128 0xb
 1658 00c1 49       		.uleb128 0x49
 1659 00c2 13       		.uleb128 0x13
 1660 00c3 02       		.uleb128 0x2
 1661 00c4 18       		.uleb128 0x18
 1662 00c5 00       		.byte	0
 1663 00c6 00       		.byte	0
 1664 00c7 0F       		.uleb128 0xf
 1665 00c8 898201   		.uleb128 0x4109
 1666 00cb 00       		.byte	0
 1667 00cc 11       		.uleb128 0x11
 1668 00cd 01       		.uleb128 0x1
 1669 00ce 31       		.uleb128 0x31
 1670 00cf 13       		.uleb128 0x13
 1671 00d0 00       		.byte	0
 1672 00d1 00       		.byte	0
 1673 00d2 10       		.uleb128 0x10
 1674 00d3 898201   		.uleb128 0x4109
 1675 00d6 01       		.byte	0x1
 1676 00d7 11       		.uleb128 0x11
 1677 00d8 01       		.uleb128 0x1
 1678 00d9 31       		.uleb128 0x31
 1679 00da 13       		.uleb128 0x13
 1680 00db 01       		.uleb128 0x1
 1681 00dc 13       		.uleb128 0x13
 1682 00dd 00       		.byte	0
 1683 00de 00       		.byte	0
 1684 00df 11       		.uleb128 0x11
 1685 00e0 8A8201   		.uleb128 0x410a
 1686 00e3 00       		.byte	0
 1687 00e4 02       		.uleb128 0x2
 1688 00e5 18       		.uleb128 0x18
 1689 00e6 9142     		.uleb128 0x2111
 1690 00e8 18       		.uleb128 0x18
 1691 00e9 00       		.byte	0
 1692 00ea 00       		.byte	0
 1693 00eb 12       		.uleb128 0x12
 1694 00ec 898201   		.uleb128 0x4109
 1695 00ef 01       		.byte	0x1
 1696 00f0 11       		.uleb128 0x11
 1697 00f1 01       		.uleb128 0x1
 1698 00f2 31       		.uleb128 0x31
 1699 00f3 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 43


 1700 00f4 00       		.byte	0
 1701 00f5 00       		.byte	0
 1702 00f6 13       		.uleb128 0x13
 1703 00f7 2E       		.uleb128 0x2e
 1704 00f8 01       		.byte	0x1
 1705 00f9 3F       		.uleb128 0x3f
 1706 00fa 19       		.uleb128 0x19
 1707 00fb 03       		.uleb128 0x3
 1708 00fc 0E       		.uleb128 0xe
 1709 00fd 3A       		.uleb128 0x3a
 1710 00fe 0B       		.uleb128 0xb
 1711 00ff 3B       		.uleb128 0x3b
 1712 0100 05       		.uleb128 0x5
 1713 0101 27       		.uleb128 0x27
 1714 0102 19       		.uleb128 0x19
 1715 0103 49       		.uleb128 0x49
 1716 0104 13       		.uleb128 0x13
 1717 0105 11       		.uleb128 0x11
 1718 0106 01       		.uleb128 0x1
 1719 0107 12       		.uleb128 0x12
 1720 0108 06       		.uleb128 0x6
 1721 0109 40       		.uleb128 0x40
 1722 010a 18       		.uleb128 0x18
 1723 010b 9742     		.uleb128 0x2117
 1724 010d 19       		.uleb128 0x19
 1725 010e 01       		.uleb128 0x1
 1726 010f 13       		.uleb128 0x13
 1727 0110 00       		.byte	0
 1728 0111 00       		.byte	0
 1729 0112 14       		.uleb128 0x14
 1730 0113 05       		.uleb128 0x5
 1731 0114 00       		.byte	0
 1732 0115 03       		.uleb128 0x3
 1733 0116 0E       		.uleb128 0xe
 1734 0117 3A       		.uleb128 0x3a
 1735 0118 0B       		.uleb128 0xb
 1736 0119 3B       		.uleb128 0x3b
 1737 011a 05       		.uleb128 0x5
 1738 011b 49       		.uleb128 0x49
 1739 011c 13       		.uleb128 0x13
 1740 011d 02       		.uleb128 0x2
 1741 011e 17       		.uleb128 0x17
 1742 011f 00       		.byte	0
 1743 0120 00       		.byte	0
 1744 0121 15       		.uleb128 0x15
 1745 0122 05       		.uleb128 0x5
 1746 0123 00       		.byte	0
 1747 0124 03       		.uleb128 0x3
 1748 0125 08       		.uleb128 0x8
 1749 0126 3A       		.uleb128 0x3a
 1750 0127 0B       		.uleb128 0xb
 1751 0128 3B       		.uleb128 0x3b
 1752 0129 05       		.uleb128 0x5
 1753 012a 49       		.uleb128 0x49
 1754 012b 13       		.uleb128 0x13
 1755 012c 02       		.uleb128 0x2
 1756 012d 17       		.uleb128 0x17
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 44


 1757 012e 00       		.byte	0
 1758 012f 00       		.byte	0
 1759 0130 16       		.uleb128 0x16
 1760 0131 34       		.uleb128 0x34
 1761 0132 00       		.byte	0
 1762 0133 03       		.uleb128 0x3
 1763 0134 08       		.uleb128 0x8
 1764 0135 3A       		.uleb128 0x3a
 1765 0136 0B       		.uleb128 0xb
 1766 0137 3B       		.uleb128 0x3b
 1767 0138 05       		.uleb128 0x5
 1768 0139 49       		.uleb128 0x49
 1769 013a 13       		.uleb128 0x13
 1770 013b 02       		.uleb128 0x2
 1771 013c 17       		.uleb128 0x17
 1772 013d 00       		.byte	0
 1773 013e 00       		.byte	0
 1774 013f 17       		.uleb128 0x17
 1775 0140 34       		.uleb128 0x34
 1776 0141 00       		.byte	0
 1777 0142 03       		.uleb128 0x3
 1778 0143 0E       		.uleb128 0xe
 1779 0144 3A       		.uleb128 0x3a
 1780 0145 0B       		.uleb128 0xb
 1781 0146 3B       		.uleb128 0x3b
 1782 0147 05       		.uleb128 0x5
 1783 0148 49       		.uleb128 0x49
 1784 0149 13       		.uleb128 0x13
 1785 014a 3F       		.uleb128 0x3f
 1786 014b 19       		.uleb128 0x19
 1787 014c 3C       		.uleb128 0x3c
 1788 014d 19       		.uleb128 0x19
 1789 014e 00       		.byte	0
 1790 014f 00       		.byte	0
 1791 0150 18       		.uleb128 0x18
 1792 0151 35       		.uleb128 0x35
 1793 0152 00       		.byte	0
 1794 0153 49       		.uleb128 0x49
 1795 0154 13       		.uleb128 0x13
 1796 0155 00       		.byte	0
 1797 0156 00       		.byte	0
 1798 0157 19       		.uleb128 0x19
 1799 0158 2E       		.uleb128 0x2e
 1800 0159 00       		.byte	0
 1801 015a 3F       		.uleb128 0x3f
 1802 015b 19       		.uleb128 0x19
 1803 015c 03       		.uleb128 0x3
 1804 015d 0E       		.uleb128 0xe
 1805 015e 3A       		.uleb128 0x3a
 1806 015f 0B       		.uleb128 0xb
 1807 0160 3B       		.uleb128 0x3b
 1808 0161 0B       		.uleb128 0xb
 1809 0162 27       		.uleb128 0x27
 1810 0163 19       		.uleb128 0x19
 1811 0164 3C       		.uleb128 0x3c
 1812 0165 19       		.uleb128 0x19
 1813 0166 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 45


 1814 0167 00       		.byte	0
 1815 0168 1A       		.uleb128 0x1a
 1816 0169 2E       		.uleb128 0x2e
 1817 016a 01       		.byte	0x1
 1818 016b 3F       		.uleb128 0x3f
 1819 016c 19       		.uleb128 0x19
 1820 016d 03       		.uleb128 0x3
 1821 016e 0E       		.uleb128 0xe
 1822 016f 3A       		.uleb128 0x3a
 1823 0170 0B       		.uleb128 0xb
 1824 0171 3B       		.uleb128 0x3b
 1825 0172 0B       		.uleb128 0xb
 1826 0173 3C       		.uleb128 0x3c
 1827 0174 19       		.uleb128 0x19
 1828 0175 01       		.uleb128 0x1
 1829 0176 13       		.uleb128 0x13
 1830 0177 00       		.byte	0
 1831 0178 00       		.byte	0
 1832 0179 1B       		.uleb128 0x1b
 1833 017a 18       		.uleb128 0x18
 1834 017b 00       		.byte	0
 1835 017c 00       		.byte	0
 1836 017d 00       		.byte	0
 1837 017e 1C       		.uleb128 0x1c
 1838 017f 2E       		.uleb128 0x2e
 1839 0180 01       		.byte	0x1
 1840 0181 3F       		.uleb128 0x3f
 1841 0182 19       		.uleb128 0x19
 1842 0183 03       		.uleb128 0x3
 1843 0184 0E       		.uleb128 0xe
 1844 0185 3A       		.uleb128 0x3a
 1845 0186 0B       		.uleb128 0xb
 1846 0187 3B       		.uleb128 0x3b
 1847 0188 0B       		.uleb128 0xb
 1848 0189 27       		.uleb128 0x27
 1849 018a 19       		.uleb128 0x19
 1850 018b 3C       		.uleb128 0x3c
 1851 018c 19       		.uleb128 0x19
 1852 018d 01       		.uleb128 0x1
 1853 018e 13       		.uleb128 0x13
 1854 018f 00       		.byte	0
 1855 0190 00       		.byte	0
 1856 0191 1D       		.uleb128 0x1d
 1857 0192 05       		.uleb128 0x5
 1858 0193 00       		.byte	0
 1859 0194 49       		.uleb128 0x49
 1860 0195 13       		.uleb128 0x13
 1861 0196 00       		.byte	0
 1862 0197 00       		.byte	0
 1863 0198 1E       		.uleb128 0x1e
 1864 0199 2E       		.uleb128 0x2e
 1865 019a 00       		.byte	0
 1866 019b 3F       		.uleb128 0x3f
 1867 019c 19       		.uleb128 0x19
 1868 019d 03       		.uleb128 0x3
 1869 019e 0E       		.uleb128 0xe
 1870 019f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 46


 1871 01a0 0B       		.uleb128 0xb
 1872 01a1 3B       		.uleb128 0x3b
 1873 01a2 0B       		.uleb128 0xb
 1874 01a3 27       		.uleb128 0x27
 1875 01a4 19       		.uleb128 0x19
 1876 01a5 49       		.uleb128 0x49
 1877 01a6 13       		.uleb128 0x13
 1878 01a7 3C       		.uleb128 0x3c
 1879 01a8 19       		.uleb128 0x19
 1880 01a9 00       		.byte	0
 1881 01aa 00       		.byte	0
 1882 01ab 00       		.byte	0
 1883              		.section	.debug_loc,"",%progbits
 1884              	.Ldebug_loc0:
 1885              	.LLST0:
 1886 0000 06000000 		.4byte	.LVL0
 1887 0004 6E000000 		.4byte	.LVL19
 1888 0008 0200     		.2byte	0x2
 1889 000a 30       		.byte	0x30
 1890 000b 9F       		.byte	0x9f
 1891 000c 6E000000 		.4byte	.LVL19
 1892 0010 08020000 		.4byte	.LVL98
 1893 0014 0100     		.2byte	0x1
 1894 0016 59       		.byte	0x59
 1895 0017 08020000 		.4byte	.LVL98
 1896 001b 0C020000 		.4byte	.LVL99
 1897 001f 0200     		.2byte	0x2
 1898 0021 30       		.byte	0x30
 1899 0022 9F       		.byte	0x9f
 1900 0023 0C020000 		.4byte	.LVL99
 1901 0027 3C020000 		.4byte	.LFE63
 1902 002b 0100     		.2byte	0x1
 1903 002d 59       		.byte	0x59
 1904 002e 00000000 		.4byte	0
 1905 0032 00000000 		.4byte	0
 1906              	.LLST1:
 1907 0036 06000000 		.4byte	.LVL0
 1908 003a 4C000000 		.4byte	.LVL11
 1909 003e 0200     		.2byte	0x2
 1910 0040 30       		.byte	0x30
 1911 0041 9F       		.byte	0x9f
 1912 0042 4C000000 		.4byte	.LVL11
 1913 0046 52000000 		.4byte	.LVL13
 1914 004a 0100     		.2byte	0x1
 1915 004c 54       		.byte	0x54
 1916 004d 52000000 		.4byte	.LVL13
 1917 0051 5A000000 		.4byte	.LVL16
 1918 0055 0200     		.2byte	0x2
 1919 0057 31       		.byte	0x31
 1920 0058 9F       		.byte	0x9f
 1921 0059 5A000000 		.4byte	.LVL16
 1922 005d 6A000000 		.4byte	.LVL18
 1923 0061 0100     		.2byte	0x1
 1924 0063 54       		.byte	0x54
 1925 0064 00000000 		.4byte	0
 1926 0068 00000000 		.4byte	0
 1927              	.LLST2:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 47


 1928 006c 06000000 		.4byte	.LVL0
 1929 0070 84000000 		.4byte	.LVL22
 1930 0074 0200     		.2byte	0x2
 1931 0076 30       		.byte	0x30
 1932 0077 9F       		.byte	0x9f
 1933 0078 84000000 		.4byte	.LVL22
 1934 007c 9C000000 		.4byte	.LVL27
 1935 0080 0100     		.2byte	0x1
 1936 0082 55       		.byte	0x55
 1937 0083 9C000000 		.4byte	.LVL27
 1938 0087 A0000000 		.4byte	.LVL28
 1939 008b 0200     		.2byte	0x2
 1940 008d 31       		.byte	0x31
 1941 008e 9F       		.byte	0x9f
 1942 008f A0000000 		.4byte	.LVL28
 1943 0093 3C010000 		.4byte	.LVL58
 1944 0097 0100     		.2byte	0x1
 1945 0099 55       		.byte	0x55
 1946 009a 3C010000 		.4byte	.LVL58
 1947 009e 4E010000 		.4byte	.LVL61
 1948 00a2 0200     		.2byte	0x2
 1949 00a4 30       		.byte	0x30
 1950 00a5 9F       		.byte	0x9f
 1951 00a6 4E010000 		.4byte	.LVL61
 1952 00aa 66010000 		.4byte	.LVL66
 1953 00ae 0100     		.2byte	0x1
 1954 00b0 56       		.byte	0x56
 1955 00b1 66010000 		.4byte	.LVL66
 1956 00b5 6A010000 		.4byte	.LVL67
 1957 00b9 0200     		.2byte	0x2
 1958 00bb 31       		.byte	0x31
 1959 00bc 9F       		.byte	0x9f
 1960 00bd 6A010000 		.4byte	.LVL67
 1961 00c1 F4010000 		.4byte	.LVL95
 1962 00c5 0100     		.2byte	0x1
 1963 00c7 56       		.byte	0x56
 1964 00c8 F4010000 		.4byte	.LVL95
 1965 00cc 3C020000 		.4byte	.LFE63
 1966 00d0 0200     		.2byte	0x2
 1967 00d2 30       		.byte	0x30
 1968 00d3 9F       		.byte	0x9f
 1969 00d4 00000000 		.4byte	0
 1970 00d8 00000000 		.4byte	0
 1971              	.LLST3:
 1972 00dc 06000000 		.4byte	.LVL0
 1973 00e0 84000000 		.4byte	.LVL22
 1974 00e4 0200     		.2byte	0x2
 1975 00e6 30       		.byte	0x30
 1976 00e7 9F       		.byte	0x9f
 1977 00e8 34010000 		.4byte	.LVL57
 1978 00ec 3C010000 		.4byte	.LVL58
 1979 00f0 0200     		.2byte	0x2
 1980 00f2 31       		.byte	0x31
 1981 00f3 9F       		.byte	0x9f
 1982 00f4 3C010000 		.4byte	.LVL58
 1983 00f8 4E010000 		.4byte	.LVL61
 1984 00fc 0200     		.2byte	0x2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 48


 1985 00fe 30       		.byte	0x30
 1986 00ff 9F       		.byte	0x9f
 1987 0100 EC010000 		.4byte	.LVL94
 1988 0104 F4010000 		.4byte	.LVL95
 1989 0108 0200     		.2byte	0x2
 1990 010a 31       		.byte	0x31
 1991 010b 9F       		.byte	0x9f
 1992 010c F4010000 		.4byte	.LVL95
 1993 0110 3C020000 		.4byte	.LFE63
 1994 0114 0200     		.2byte	0x2
 1995 0116 30       		.byte	0x30
 1996 0117 9F       		.byte	0x9f
 1997 0118 00000000 		.4byte	0
 1998 011c 00000000 		.4byte	0
 1999              	.LLST4:
 2000 0120 06000000 		.4byte	.LVL0
 2001 0124 84000000 		.4byte	.LVL22
 2002 0128 0200     		.2byte	0x2
 2003 012a 30       		.byte	0x30
 2004 012b 9F       		.byte	0x9f
 2005 012c EC000000 		.4byte	.LVL43
 2006 0130 1E010000 		.4byte	.LVL52
 2007 0134 0100     		.2byte	0x1
 2008 0136 5A       		.byte	0x5a
 2009 0137 1E010000 		.4byte	.LVL52
 2010 013b 24010000 		.4byte	.LVL53
 2011 013f 0100     		.2byte	0x1
 2012 0141 50       		.byte	0x50
 2013 0142 28010000 		.4byte	.LVL54
 2014 0146 2D010000 		.4byte	.LVL56-1
 2015 014a 0100     		.2byte	0x1
 2016 014c 50       		.byte	0x50
 2017 014d 3C010000 		.4byte	.LVL58
 2018 0151 4E010000 		.4byte	.LVL61
 2019 0155 0200     		.2byte	0x2
 2020 0157 30       		.byte	0x30
 2021 0158 9F       		.byte	0x9f
 2022 0159 B4010000 		.4byte	.LVL82
 2023 015d D6010000 		.4byte	.LVL89
 2024 0161 0100     		.2byte	0x1
 2025 0163 57       		.byte	0x57
 2026 0164 D6010000 		.4byte	.LVL89
 2027 0168 DC010000 		.4byte	.LVL90
 2028 016c 0100     		.2byte	0x1
 2029 016e 50       		.byte	0x50
 2030 016f E0010000 		.4byte	.LVL91
 2031 0173 E5010000 		.4byte	.LVL93-1
 2032 0177 0100     		.2byte	0x1
 2033 0179 50       		.byte	0x50
 2034 017a F4010000 		.4byte	.LVL95
 2035 017e 3C020000 		.4byte	.LFE63
 2036 0182 0200     		.2byte	0x2
 2037 0184 30       		.byte	0x30
 2038 0185 9F       		.byte	0x9f
 2039 0186 00000000 		.4byte	0
 2040 018a 00000000 		.4byte	0
 2041              	.LLST5:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 49


 2042 018e 06000000 		.4byte	.LVL0
 2043 0192 6E000000 		.4byte	.LVL19
 2044 0196 0600     		.2byte	0x6
 2045 0198 9E       		.byte	0x9e
 2046 0199 04       		.uleb128 0x4
 2047 019a 007EBB46 		.4byte	0x46bb7e00
 2048 019e 6E000000 		.4byte	.LVL19
 2049 01a2 96000000 		.4byte	.LVL25
 2050 01a6 0100     		.2byte	0x1
 2051 01a8 54       		.byte	0x54
 2052 01a9 96000000 		.4byte	.LVL25
 2053 01ad 98000000 		.4byte	.LVL26
 2054 01b1 0100     		.2byte	0x1
 2055 01b3 50       		.byte	0x50
 2056 01b4 98000000 		.4byte	.LVL26
 2057 01b8 A0000000 		.4byte	.LVL28
 2058 01bc 0100     		.2byte	0x1
 2059 01be 56       		.byte	0x56
 2060 01bf A0000000 		.4byte	.LVL28
 2061 01c3 A2000000 		.4byte	.LVL29
 2062 01c7 0100     		.2byte	0x1
 2063 01c9 54       		.byte	0x54
 2064 01ca A2000000 		.4byte	.LVL29
 2065 01ce C2000000 		.4byte	.LVL36
 2066 01d2 0100     		.2byte	0x1
 2067 01d4 56       		.byte	0x56
 2068 01d5 2E010000 		.4byte	.LVL56
 2069 01d9 3C020000 		.4byte	.LFE63
 2070 01dd 0100     		.2byte	0x1
 2071 01df 54       		.byte	0x54
 2072 01e0 00000000 		.4byte	0
 2073 01e4 00000000 		.4byte	0
 2074              	.LLST6:
 2075 01e8 06000000 		.4byte	.LVL0
 2076 01ec 6E000000 		.4byte	.LVL19
 2077 01f0 0600     		.2byte	0x6
 2078 01f2 9E       		.byte	0x9e
 2079 01f3 04       		.uleb128 0x4
 2080 01f4 007EBB46 		.4byte	0x46bb7e00
 2081 01f8 B8000000 		.4byte	.LVL33
 2082 01fc BA000000 		.4byte	.LVL34
 2083 0200 0100     		.2byte	0x1
 2084 0202 50       		.byte	0x50
 2085 0203 BA000000 		.4byte	.LVL34
 2086 0207 44010000 		.4byte	.LVL60
 2087 020b 0100     		.2byte	0x1
 2088 020d 54       		.byte	0x54
 2089 020e 00000000 		.4byte	0
 2090 0212 00000000 		.4byte	0
 2091              	.LLST7:
 2092 0216 06000000 		.4byte	.LVL0
 2093 021a 6E000000 		.4byte	.LVL19
 2094 021e 0600     		.2byte	0x6
 2095 0220 9E       		.byte	0x9e
 2096 0221 04       		.uleb128 0x4
 2097 0222 007EBB46 		.4byte	0x46bb7e00
 2098 0226 6E000000 		.4byte	.LVL19
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 50


 2099 022a 60010000 		.4byte	.LVL64
 2100 022e 0100     		.2byte	0x1
 2101 0230 58       		.byte	0x58
 2102 0231 60010000 		.4byte	.LVL64
 2103 0235 62010000 		.4byte	.LVL65
 2104 0239 0100     		.2byte	0x1
 2105 023b 50       		.byte	0x50
 2106 023c 62010000 		.4byte	.LVL65
 2107 0240 6A010000 		.4byte	.LVL67
 2108 0244 0100     		.2byte	0x1
 2109 0246 55       		.byte	0x55
 2110 0247 6A010000 		.4byte	.LVL67
 2111 024b 6C010000 		.4byte	.LVL68
 2112 024f 0100     		.2byte	0x1
 2113 0251 58       		.byte	0x58
 2114 0252 6C010000 		.4byte	.LVL68
 2115 0256 8C010000 		.4byte	.LVL75
 2116 025a 0100     		.2byte	0x1
 2117 025c 55       		.byte	0x55
 2118 025d E6010000 		.4byte	.LVL93
 2119 0261 3C020000 		.4byte	.LFE63
 2120 0265 0100     		.2byte	0x1
 2121 0267 58       		.byte	0x58
 2122 0268 00000000 		.4byte	0
 2123 026c 00000000 		.4byte	0
 2124              	.LLST8:
 2125 0270 06000000 		.4byte	.LVL0
 2126 0274 6E000000 		.4byte	.LVL19
 2127 0278 0600     		.2byte	0x6
 2128 027a 9E       		.byte	0x9e
 2129 027b 04       		.uleb128 0x4
 2130 027c 007EBB46 		.4byte	0x46bb7e00
 2131 0280 82010000 		.4byte	.LVL72
 2132 0284 84010000 		.4byte	.LVL73
 2133 0288 0100     		.2byte	0x1
 2134 028a 50       		.byte	0x50
 2135 028b 84010000 		.4byte	.LVL73
 2136 028f FA010000 		.4byte	.LVL96
 2137 0293 0100     		.2byte	0x1
 2138 0295 58       		.byte	0x58
 2139 0296 00000000 		.4byte	0
 2140 029a 00000000 		.4byte	0
 2141              	.LLST9:
 2142 029e 06000000 		.4byte	.LVL0
 2143 02a2 6E000000 		.4byte	.LVL19
 2144 02a6 0600     		.2byte	0x6
 2145 02a8 9E       		.byte	0x9e
 2146 02a9 04       		.uleb128 0x4
 2147 02aa 00000000 		.4byte	0
 2148 02ae C2000000 		.4byte	.LVL36
 2149 02b2 C7000000 		.4byte	.LVL37-1
 2150 02b6 0100     		.2byte	0x1
 2151 02b8 50       		.byte	0x50
 2152 02b9 C7000000 		.4byte	.LVL37-1
 2153 02bd 08010000 		.4byte	.LVL48
 2154 02c1 0100     		.2byte	0x1
 2155 02c3 56       		.byte	0x56
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 51


 2156 02c4 24010000 		.4byte	.LVL53
 2157 02c8 28010000 		.4byte	.LVL54
 2158 02cc 0100     		.2byte	0x1
 2159 02ce 56       		.byte	0x56
 2160 02cf 00000000 		.4byte	0
 2161 02d3 00000000 		.4byte	0
 2162              	.LLST10:
 2163 02d7 06000000 		.4byte	.LVL0
 2164 02db 6E000000 		.4byte	.LVL19
 2165 02df 0600     		.2byte	0x6
 2166 02e1 9E       		.byte	0x9e
 2167 02e2 04       		.uleb128 0x4
 2168 02e3 00000000 		.4byte	0
 2169 02e7 8C010000 		.4byte	.LVL75
 2170 02eb 91010000 		.4byte	.LVL76-1
 2171 02ef 0100     		.2byte	0x1
 2172 02f1 50       		.byte	0x50
 2173 02f2 91010000 		.4byte	.LVL76-1
 2174 02f6 C4010000 		.4byte	.LVL85
 2175 02fa 0100     		.2byte	0x1
 2176 02fc 55       		.byte	0x55
 2177 02fd DC010000 		.4byte	.LVL90
 2178 0301 E0010000 		.4byte	.LVL91
 2179 0305 0100     		.2byte	0x1
 2180 0307 55       		.byte	0x55
 2181 0308 00000000 		.4byte	0
 2182 030c 00000000 		.4byte	0
 2183              	.LLST11:
 2184 0310 50000000 		.4byte	.LVL12
 2185 0314 54000000 		.4byte	.LVL14
 2186 0318 0100     		.2byte	0x1
 2187 031a 50       		.byte	0x50
 2188 031b 00000000 		.4byte	0
 2189 031f 00000000 		.4byte	0
 2190              	.LLST12:
 2191 0323 00000000 		.4byte	.LVL101
 2192 0327 0A000000 		.4byte	.LVL103
 2193 032b 0100     		.2byte	0x1
 2194 032d 50       		.byte	0x50
 2195 032e 0A000000 		.4byte	.LVL103
 2196 0332 2A000000 		.4byte	.LFE64
 2197 0336 0400     		.2byte	0x4
 2198 0338 F3       		.byte	0xf3
 2199 0339 01       		.uleb128 0x1
 2200 033a 50       		.byte	0x50
 2201 033b 9F       		.byte	0x9f
 2202 033c 00000000 		.4byte	0
 2203 0340 00000000 		.4byte	0
 2204              	.LLST13:
 2205 0344 00000000 		.4byte	.LVL101
 2206 0348 0A000000 		.4byte	.LVL103
 2207 034c 0100     		.2byte	0x1
 2208 034e 51       		.byte	0x51
 2209 034f 0A000000 		.4byte	.LVL103
 2210 0353 18000000 		.4byte	.LVL105
 2211 0357 0100     		.2byte	0x1
 2212 0359 54       		.byte	0x54
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 52


 2213 035a 18000000 		.4byte	.LVL105
 2214 035e 22000000 		.4byte	.LVL108
 2215 0362 0100     		.2byte	0x1
 2216 0364 56       		.byte	0x56
 2217 0365 22000000 		.4byte	.LVL108
 2218 0369 2A000000 		.4byte	.LFE64
 2219 036d 0100     		.2byte	0x1
 2220 036f 54       		.byte	0x54
 2221 0370 00000000 		.4byte	0
 2222 0374 00000000 		.4byte	0
 2223              	.LLST14:
 2224 0378 00000000 		.4byte	.LVL101
 2225 037c 0A000000 		.4byte	.LVL103
 2226 0380 0100     		.2byte	0x1
 2227 0382 52       		.byte	0x52
 2228 0383 0A000000 		.4byte	.LVL103
 2229 0387 2A000000 		.4byte	.LFE64
 2230 038b 0100     		.2byte	0x1
 2231 038d 57       		.byte	0x57
 2232 038e 00000000 		.4byte	0
 2233 0392 00000000 		.4byte	0
 2234              	.LLST15:
 2235 0396 06000000 		.4byte	.LVL102
 2236 039a 0A000000 		.4byte	.LVL103
 2237 039e 0200     		.2byte	0x2
 2238 03a0 30       		.byte	0x30
 2239 03a1 9F       		.byte	0x9f
 2240 03a2 0A000000 		.4byte	.LVL103
 2241 03a6 2A000000 		.4byte	.LFE64
 2242 03aa 0100     		.2byte	0x1
 2243 03ac 55       		.byte	0x55
 2244 03ad 00000000 		.4byte	0
 2245 03b1 00000000 		.4byte	0
 2246              	.LLST16:
 2247 03b5 00000000 		.4byte	.LVL109
 2248 03b9 0A000000 		.4byte	.LVL111
 2249 03bd 0100     		.2byte	0x1
 2250 03bf 50       		.byte	0x50
 2251 03c0 0A000000 		.4byte	.LVL111
 2252 03c4 38000000 		.4byte	.LFE65
 2253 03c8 0400     		.2byte	0x4
 2254 03ca F3       		.byte	0xf3
 2255 03cb 01       		.uleb128 0x1
 2256 03cc 50       		.byte	0x50
 2257 03cd 9F       		.byte	0x9f
 2258 03ce 00000000 		.4byte	0
 2259 03d2 00000000 		.4byte	0
 2260              	.LLST17:
 2261 03d6 00000000 		.4byte	.LVL109
 2262 03da 0A000000 		.4byte	.LVL111
 2263 03de 0100     		.2byte	0x1
 2264 03e0 51       		.byte	0x51
 2265 03e1 0A000000 		.4byte	.LVL111
 2266 03e5 26000000 		.4byte	.LVL118
 2267 03e9 0100     		.2byte	0x1
 2268 03eb 57       		.byte	0x57
 2269 03ec 26000000 		.4byte	.LVL118
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 53


 2270 03f0 30000000 		.4byte	.LVL120
 2271 03f4 0100     		.2byte	0x1
 2272 03f6 53       		.byte	0x53
 2273 03f7 30000000 		.4byte	.LVL120
 2274 03fb 34000000 		.4byte	.LVL121
 2275 03ff 0100     		.2byte	0x1
 2276 0401 57       		.byte	0x57
 2277 0402 00000000 		.4byte	0
 2278 0406 00000000 		.4byte	0
 2279              	.LLST18:
 2280 040a 00000000 		.4byte	.LVL109
 2281 040e 0A000000 		.4byte	.LVL111
 2282 0412 0100     		.2byte	0x1
 2283 0414 52       		.byte	0x52
 2284 0415 0A000000 		.4byte	.LVL111
 2285 0419 38000000 		.4byte	.LFE65
 2286 041d 0100     		.2byte	0x1
 2287 041f 54       		.byte	0x54
 2288 0420 00000000 		.4byte	0
 2289 0424 00000000 		.4byte	0
 2290              	.LLST19:
 2291 0428 06000000 		.4byte	.LVL110
 2292 042c 0A000000 		.4byte	.LVL111
 2293 0430 0200     		.2byte	0x2
 2294 0432 30       		.byte	0x30
 2295 0433 9F       		.byte	0x9f
 2296 0434 0A000000 		.4byte	.LVL111
 2297 0438 38000000 		.4byte	.LFE65
 2298 043c 0100     		.2byte	0x1
 2299 043e 56       		.byte	0x56
 2300 043f 00000000 		.4byte	0
 2301 0443 00000000 		.4byte	0
 2302              	.LLST20:
 2303 0447 0E000000 		.4byte	.LVL112
 2304 044b 15000000 		.4byte	.LVL113-1
 2305 044f 0100     		.2byte	0x1
 2306 0451 50       		.byte	0x50
 2307 0452 1C000000 		.4byte	.LVL115
 2308 0456 24000000 		.4byte	.LVL117
 2309 045a 0200     		.2byte	0x2
 2310 045c 3A       		.byte	0x3a
 2311 045d 9F       		.byte	0x9f
 2312 045e 24000000 		.4byte	.LVL117
 2313 0462 30000000 		.4byte	.LVL120
 2314 0466 0100     		.2byte	0x1
 2315 0468 55       		.byte	0x55
 2316 0469 00000000 		.4byte	0
 2317 046d 00000000 		.4byte	0
 2318              		.section	.debug_aranges,"",%progbits
 2319 0000 2C000000 		.4byte	0x2c
 2320 0004 0200     		.2byte	0x2
 2321 0006 00000000 		.4byte	.Ldebug_info0
 2322 000a 04       		.byte	0x4
 2323 000b 00       		.byte	0
 2324 000c 0000     		.2byte	0
 2325 000e 0000     		.2byte	0
 2326 0010 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 54


 2327 0014 3C020000 		.4byte	.LFE63-.LFB63
 2328 0018 00000000 		.4byte	.LFB64
 2329 001c 2A000000 		.4byte	.LFE64-.LFB64
 2330 0020 00000000 		.4byte	.LFB65
 2331 0024 38000000 		.4byte	.LFE65-.LFB65
 2332 0028 00000000 		.4byte	0
 2333 002c 00000000 		.4byte	0
 2334              		.section	.debug_ranges,"",%progbits
 2335              	.Ldebug_ranges0:
 2336 0000 00000000 		.4byte	.LFB63
 2337 0004 3C020000 		.4byte	.LFE63
 2338 0008 00000000 		.4byte	.LFB64
 2339 000c 2A000000 		.4byte	.LFE64
 2340 0010 00000000 		.4byte	.LFB65
 2341 0014 38000000 		.4byte	.LFE65
 2342 0018 00000000 		.4byte	0
 2343 001c 00000000 		.4byte	0
 2344              		.section	.debug_line,"",%progbits
 2345              	.Ldebug_line0:
 2346 0000 9B020000 		.section	.debug_str,"MS",%progbits,1
 2346      0200C301 
 2346      00000201 
 2346      FB0E0D00 
 2346      01010101 
 2347              	.LASF68:
 2348 0000 55415254 		.ascii	"UART_1_GetChar\000"
 2348      5F315F47 
 2348      65744368 
 2348      617200
 2349              	.LASF2:
 2350 000f 73686F72 		.ascii	"short int\000"
 2350      7420696E 
 2350      7400
 2351              	.LASF19:
 2352 0019 73697A65 		.ascii	"sizetype\000"
 2352      74797065 
 2352      00
 2353              	.LASF36:
 2354 0022 6D617844 		.ascii	"maxDiff_l1\000"
 2354      6966665F 
 2354      6C3100
 2355              	.LASF21:
 2356 002d 6379636C 		.ascii	"cycles\000"
 2356      657300
 2357              	.LASF35:
 2358 0034 6D617844 		.ascii	"maxDiff_l3\000"
 2358      6966665F 
 2358      6C3300
 2359              	.LASF47:
 2360 003f 5F777269 		.ascii	"_write\000"
 2360      746500
 2361              	.LASF39:
 2362 0046 626C6163 		.ascii	"blackness1_left\000"
 2362      6B6E6573 
 2362      73315F6C 
 2362      65667400 
 2363              	.LASF64:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 55


 2364 0056 52696768 		.ascii	"Right_turn\000"
 2364      745F7475 
 2364      726E00
 2365              	.LASF4:
 2366 0061 5F5F7569 		.ascii	"__uint16_t\000"
 2366      6E743136 
 2366      5F7400
 2367              	.LASF46:
 2368 006c 66696C65 		.ascii	"file\000"
 2368      00
 2369              	.LASF23:
 2370 0071 6C6F6F70 		.ascii	"loopCheck\000"
 2370      43686563 
 2370      6B00
 2371              	.LASF72:
 2372 007b 73656E73 		.ascii	"sensors_\000"
 2372      6F72735F 
 2372      00
 2373              	.LASF28:
 2374 0084 626C6163 		.ascii	"black_threshold_l1\000"
 2374      6B5F7468 
 2374      72657368 
 2374      6F6C645F 
 2374      6C3100
 2375              	.LASF27:
 2376 0097 626C6163 		.ascii	"black_threshold_l3\000"
 2376      6B5F7468 
 2376      72657368 
 2376      6F6C645F 
 2376      6C3300
 2377              	.LASF43:
 2378 00aa 64696666 		.ascii	"diff_left\000"
 2378      5F6C6566 
 2378      7400
 2379              	.LASF13:
 2380 00b4 75696E74 		.ascii	"uint8\000"
 2380      3800
 2381              	.LASF52:
 2382 00ba 4D656173 		.ascii	"Measure_Voltage\000"
 2382      7572655F 
 2382      566F6C74 
 2382      61676500 
 2383              	.LASF57:
 2384 00ca 7265666C 		.ascii	"reflectance_start\000"
 2384      65637461 
 2384      6E63655F 
 2384      73746172 
 2384      7400
 2385              	.LASF50:
 2386 00dc 55415254 		.ascii	"UART_1_Start\000"
 2386      5F315F53 
 2386      74617274 
 2386      00
 2387              	.LASF66:
 2388 00e9 55415254 		.ascii	"UART_1_PutChar\000"
 2388      5F315F50 
 2388      75744368 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 56


 2388      617200
 2389              	.LASF15:
 2390 00f8 666C6F61 		.ascii	"float\000"
 2390      7400
 2391              	.LASF8:
 2392 00fe 6C6F6E67 		.ascii	"long long int\000"
 2392      206C6F6E 
 2392      6720696E 
 2392      7400
 2393              	.LASF18:
 2394 010c 63796973 		.ascii	"cyisraddress\000"
 2394      72616464 
 2394      72657373 
 2394      00
 2395              	.LASF63:
 2396 0119 7265666C 		.ascii	"reflectance_digital\000"
 2396      65637461 
 2396      6E63655F 
 2396      64696769 
 2396      74616C00 
 2397              	.LASF34:
 2398 012d 77686974 		.ascii	"white_threshold_r3\000"
 2398      655F7468 
 2398      72657368 
 2398      6F6C645F 
 2398      723300
 2399              	.LASF24:
 2400 0140 74776974 		.ascii	"twitchFlag\000"
 2400      6368466C 
 2400      616700
 2401              	.LASF6:
 2402 014b 6C6F6E67 		.ascii	"long int\000"
 2402      20696E74 
 2402      00
 2403              	.LASF45:
 2404 0154 62757474 		.ascii	"button\000"
 2404      6F6E00
 2405              	.LASF44:
 2406 015b 64696666 		.ascii	"diff_right\000"
 2406      5F726967 
 2406      687400
 2407              	.LASF61:
 2408 0166 43757374 		.ascii	"Custom_forward\000"
 2408      6F6D5F66 
 2408      6F727761 
 2408      726400
 2409              	.LASF41:
 2410 0175 626C6163 		.ascii	"blackness1_right\000"
 2410      6B6E6573 
 2410      73315F72 
 2410      69676874 
 2410      00
 2411              	.LASF1:
 2412 0186 756E7369 		.ascii	"unsigned char\000"
 2412      676E6564 
 2412      20636861 
 2412      7200
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 57


 2413              	.LASF22:
 2414 0194 65786974 		.ascii	"exit\000"
 2414      00
 2415              	.LASF20:
 2416 0199 6C6F6E67 		.ascii	"long double\000"
 2416      20646F75 
 2416      626C6500 
 2417              	.LASF51:
 2418 01a5 4144435F 		.ascii	"ADC_Battery_Start\000"
 2418      42617474 
 2418      6572795F 
 2418      53746172 
 2418      7400
 2419              	.LASF65:
 2420 01b7 4C656674 		.ascii	"Left_turn\000"
 2420      5F747572 
 2420      6E00
 2421              	.LASF56:
 2422 01c1 7265666C 		.ascii	"reflectance_set_threshold\000"
 2422      65637461 
 2422      6E63655F 
 2422      7365745F 
 2422      74687265 
 2423              	.LASF48:
 2424 01db 5F726561 		.ascii	"_read\000"
 2424      6400
 2425              	.LASF33:
 2426 01e1 77686974 		.ascii	"white_threshold_r1\000"
 2426      655F7468 
 2426      72657368 
 2426      6F6C645F 
 2426      723100
 2427              	.LASF0:
 2428 01f4 7369676E 		.ascii	"signed char\000"
 2428      65642063 
 2428      68617200 
 2429              	.LASF12:
 2430 0200 696E7433 		.ascii	"int32_t\000"
 2430      325F7400 
 2431              	.LASF9:
 2432 0208 6C6F6E67 		.ascii	"long long unsigned int\000"
 2432      206C6F6E 
 2432      6720756E 
 2432      7369676E 
 2432      65642069 
 2433              	.LASF10:
 2434 021f 756E7369 		.ascii	"unsigned int\000"
 2434      676E6564 
 2434      20696E74 
 2434      00
 2435              	.LASF11:
 2436 022c 75696E74 		.ascii	"uint16_t\000"
 2436      31365F74 
 2436      00
 2437              	.LASF25:
 2438 0235 7475726E 		.ascii	"turn\000"
 2438      00
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 58


 2439              	.LASF26:
 2440 023a 73706565 		.ascii	"speed\000"
 2440      6400
 2441              	.LASF3:
 2442 0240 73686F72 		.ascii	"short unsigned int\000"
 2442      7420756E 
 2442      7369676E 
 2442      65642069 
 2442      6E7400
 2443              	.LASF54:
 2444 0253 6D6F746F 		.ascii	"motor_forward\000"
 2444      725F666F 
 2444      72776172 
 2444      6400
 2445              	.LASF17:
 2446 0261 63686172 		.ascii	"char\000"
 2446      00
 2447              	.LASF69:
 2448 0266 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2448      4320342E 
 2448      392E3320 
 2448      32303135 
 2448      30333033 
 2449 0299 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2449      20726576 
 2449      6973696F 
 2449      6E203232 
 2449      31323230 
 2450 02cc 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2450      66756E63 
 2450      74696F6E 
 2450      2D736563 
 2450      74696F6E 
 2451              	.LASF73:
 2452 02f4 6D61696E 		.ascii	"main\000"
 2452      00
 2453              	.LASF40:
 2454 02f9 626C6163 		.ascii	"blackness2_left\000"
 2454      6B6E6573 
 2454      73325F6C 
 2454      65667400 
 2455              	.LASF71:
 2456 0309 433A5C55 		.ascii	"C:\\Users\\Ville L\\Desktop\\Zumo_Robotti\\Zumo_Rob"
 2456      73657273 
 2456      5C56696C 
 2456      6C65204C 
 2456      5C446573 
 2457 0337 6F747469 		.ascii	"otti\\ZumoBot.cydsn\000"
 2457      5C5A756D 
 2457      6F426F74 
 2457      2E637964 
 2457      736E00
 2458              	.LASF59:
 2459 034a 42617474 		.ascii	"BatteryLed_Write\000"
 2459      6572794C 
 2459      65645F57 
 2459      72697465 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 59


 2459      00
 2460              	.LASF67:
 2461 035b 5357315F 		.ascii	"SW1_Read\000"
 2461      52656164 
 2461      00
 2462              	.LASF14:
 2463 0364 75696E74 		.ascii	"uint32\000"
 2463      333200
 2464              	.LASF70:
 2465 036b 6D61696E 		.ascii	"main.c\000"
 2465      2E6300
 2466              	.LASF37:
 2467 0372 6D617844 		.ascii	"maxDiff_r1\000"
 2467      6966665F 
 2467      723100
 2468              	.LASF7:
 2469 037d 6C6F6E67 		.ascii	"long unsigned int\000"
 2469      20756E73 
 2469      69676E65 
 2469      6420696E 
 2469      7400
 2470              	.LASF38:
 2471 038f 6D617844 		.ascii	"maxDiff_r3\000"
 2471      6966665F 
 2471      723300
 2472              	.LASF55:
 2473 039a 73656E73 		.ascii	"sensor_isr_StartEx\000"
 2473      6F725F69 
 2473      73725F53 
 2473      74617274 
 2473      457800
 2474              	.LASF53:
 2475 03ad 6D6F746F 		.ascii	"motor_start\000"
 2475      725F7374 
 2475      61727400 
 2476              	.LASF49:
 2477 03b9 636F756E 		.ascii	"count\000"
 2477      7400
 2478              	.LASF5:
 2479 03bf 5F5F696E 		.ascii	"__int32_t\000"
 2479      7433325F 
 2479      7400
 2480              	.LASF29:
 2481 03c9 626C6163 		.ascii	"black_threshold_r1\000"
 2481      6B5F7468 
 2481      72657368 
 2481      6F6C645F 
 2481      723100
 2482              	.LASF62:
 2483 03dc 7265666C 		.ascii	"reflectance_read\000"
 2483      65637461 
 2483      6E63655F 
 2483      72656164 
 2483      00
 2484              	.LASF30:
 2485 03ed 626C6163 		.ascii	"black_threshold_r3\000"
 2485      6B5F7468 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\cceSNGmZ.s 			page 60


 2485      72657368 
 2485      6F6C645F 
 2485      723300
 2486              	.LASF16:
 2487 0400 646F7562 		.ascii	"double\000"
 2487      6C6500
 2488              	.LASF32:
 2489 0407 77686974 		.ascii	"white_threshold_l1\000"
 2489      655F7468 
 2489      72657368 
 2489      6F6C645F 
 2489      6C3100
 2490              	.LASF31:
 2491 041a 77686974 		.ascii	"white_threshold_l3\000"
 2491      655F7468 
 2491      72657368 
 2491      6F6C645F 
 2491      6C3300
 2492              	.LASF74:
 2493 042d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2493      52784275 
 2493      66666572 
 2493      00
 2494              	.LASF60:
 2495 043a 43794465 		.ascii	"CyDelay\000"
 2495      6C617900 
 2496              	.LASF42:
 2497 0442 626C6163 		.ascii	"blackness2_right\000"
 2497      6B6E6573 
 2497      73325F72 
 2497      69676874 
 2497      00
 2498              	.LASF58:
 2499 0453 49525F6C 		.ascii	"IR_led_Write\000"
 2499      65645F57 
 2499      72697465 
 2499      00
 2500              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
