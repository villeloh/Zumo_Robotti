ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fcmple
  21              		.global	__aeabi_fcmpgt
  22              		.global	__aeabi_fcmplt
  23              		.global	__aeabi_fcmpge
  24              		.global	__aeabi_fdiv
  25              		.global	__aeabi_f2d
  26              		.global	__aeabi_dmul
  27              		.global	__aeabi_d2uiz
  28              		.global	__aeabi_fmul
  29              		.global	__aeabi_i2d
  30              		.global	__aeabi_dadd
  31              		.global	__aeabi_dsub
  32              		.section	.text.main,"ax",%progbits
  33              		.align	2
  34              		.global	main
  35              		.thumb
  36              		.thumb_func
  37              		.type	main, %function
  38              	main:
  39              	.LFB63:
  40              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  17:main.c        **** */
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 2


  18:main.c        **** 
  19:main.c        **** #include <project.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include "Motor.h"
  22:main.c        **** #include "Ultra.h"
  23:main.c        **** #include "Nunchuk.h"
  24:main.c        **** #include "Reflectance.h"
  25:main.c        **** #include "I2C_made.h"
  26:main.c        **** #include "Gyro.h"
  27:main.c        **** #include "Accel_magnet.h"
  28:main.c        **** #include "IR.h"
  29:main.c        **** #include "Ambient.h"
  30:main.c        **** #include "Beep.h"
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** // Declare used methods
  34:main.c        **** int rread(void);
  35:main.c        **** void motor_start();
  36:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  37:main.c        **** void Custom_forward(uint8 speed);
  38:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  39:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  40:main.c        **** void Measure_Voltage();
  41:main.c        **** void Right_turn(uint8 speed);
  42:main.c        **** void Left_turn(uint8 speed);
  43:main.c        **** 
  44:main.c        **** 
  45:main.c        **** int main()
  46:main.c        **** {
  41              		.loc 1 46 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 32
  44              		@ frame_needed = 0, uses_anonymous_args = 0
  45 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  46              		.cfi_def_cfa_offset 36
  47              		.cfi_offset 4, -36
  48              		.cfi_offset 5, -32
  49              		.cfi_offset 6, -28
  50              		.cfi_offset 7, -24
  51              		.cfi_offset 8, -20
  52              		.cfi_offset 9, -16
  53              		.cfi_offset 10, -12
  54              		.cfi_offset 11, -8
  55              		.cfi_offset 14, -4
  56 0004 89B0     		sub	sp, sp, #36
  57              		.cfi_def_cfa_offset 72
  58              	.LVL0:
  47:main.c        ****     // 'Time counter' for the voltage measurement interval
  48:main.c        ****     int cycles = 0;
  49:main.c        ****     
  50:main.c        ****     // Needed for using the button to start the robot's movement routine
  51:main.c        ****     int exit = 0;
  52:main.c        ****     
  53:main.c        ****     // Needed for stopping movement
  54:main.c        ****     int exitMainLoop = 0;
  55:main.c        ****     
  56:main.c        ****     // Needed for enabling correct looping behaviour in the movement routine
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 3


  57:main.c        ****     int loopCheck = 0;
  58:main.c        ****     
  59:main.c        ****     // Check for enabling some procedures after the main turn logic has executed
  60:main.c        ****     int turnFlag = 0;
  61:main.c        ****     
  62:main.c        ****     //For counting blackLines
  63:main.c        ****     int countLines = 0;
  64:main.c        ****     int inBlack = 0;
  65:main.c        ****     
  66:main.c        ****     // For determining behaviour with various values of 'diff'
  67:main.c        ****     int diffCase = 0;
  68:main.c        ****     
  69:main.c        ****     // The diff value which acts as a threshold for 'fast' movement away from / towards the center 
  70:main.c        ****     int diff_Fast = 500;
  71:main.c        ****     
  72:main.c        ****     // Turn value for the motors to use
  73:main.c        ****     uint8 turn = 0;
  74:main.c        ****     
  75:main.c        ****     // (maximum) movement speed of the robot
  76:main.c        ****     uint8 speed = 240;
  77:main.c        ****     
  78:main.c        ****     // reflectance thresholds (determined experimentally) for use in different movement behaviours
  79:main.c        ****     int black_threshold_l3 = 21000;
  80:main.c        ****     int black_threshold_l1 = 18000; // working value: 17 500
  81:main.c        ****     int black_threshold_r1 = 22600; // working value: 22 000
  82:main.c        ****     int black_threshold_r3 = 21500;
  83:main.c        ****         
  84:main.c        ****     int white_threshold_l3 = 5793;
  85:main.c        ****     int white_threshold_l1 = 4500;
  86:main.c        ****     int white_threshold_r1 = 4522;
  87:main.c        ****     int white_threshold_r3 = 6293;
  88:main.c        ****     
  89:main.c        ****     int maxDiff_l3 = black_threshold_l3 - white_threshold_l3;
  90:main.c        ****     int maxDiff_l1 = black_threshold_l1 - white_threshold_l1;
  91:main.c        ****     int maxDiff_r1 = black_threshold_r1 - white_threshold_r1;
  92:main.c        ****     int maxDiff_r3 = black_threshold_r3 - white_threshold_r3;
  93:main.c        ****     
  94:main.c        ****     float blackness1_left = 23999;
  95:main.c        ****     float blackness2_left = 23999;
  96:main.c        ****     float blackness1_right = 23999;
  97:main.c        ****     float blackness2_right = 23999;
  98:main.c        ****     
  99:main.c        ****     float diff_left = 0.0;
 100:main.c        ****     float diff_right = 0.0;
 101:main.c        ****     
 102:main.c        ****     // Initialize various starting thingies
 103:main.c        ****     struct sensors_ ref;
 104:main.c        ****     struct sensors_ dig;
 105:main.c        ****     CyGlobalIntEnable; 
  59              		.loc 1 105 0
  60              	@ 105 "main.c" 1
  61 0006 62B6     		CPSIE   i
  62              	@ 0 "" 2
 106:main.c        ****     UART_1_Start();
  63              		.loc 1 106 0
  64              		.thumb
  65 0008 FFF7FEFF 		bl	UART_1_Start
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 4


  66              	.LVL1:
 107:main.c        ****     ADC_Battery_Start();   
  67              		.loc 1 107 0
  68 000c FFF7FEFF 		bl	ADC_Battery_Start
  69              	.LVL2:
 108:main.c        ****     
 109:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
  70              		.loc 1 109 0
  71 0010 FFF7FEFF 		bl	Measure_Voltage
  72              	.LVL3:
 110:main.c        ****     
 111:main.c        ****     motor_start();
  73              		.loc 1 111 0
  74 0014 FFF7FEFF 		bl	motor_start
  75              	.LVL4:
 112:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  76              		.loc 1 112 0
  77 0018 0020     		movs	r0, #0
  78 001a 0146     		mov	r1, r0
  79 001c FFF7FEFF 		bl	motor_forward
  80              	.LVL5:
 113:main.c        ****     
 114:main.c        ****     // Initialize IR sensors
 115:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  81              		.loc 1 115 0
  82 0020 B348     		ldr	r0, .L92+16
  83 0022 FFF7FEFF 		bl	sensor_isr_StartEx
  84              	.LVL6:
 116:main.c        ****     reflectance_set_threshold(black_threshold_l3, black_threshold_l1, black_threshold_r1, black_thr
  85              		.loc 1 116 0
  86 0026 45F20820 		movw	r0, #21000
  87 002a 44F25061 		movw	r1, #18000
  88 002e 45F64802 		movw	r2, #22600
  89 0032 45F2FC33 		movw	r3, #21500
  90 0036 FFF7FEFF 		bl	reflectance_set_threshold
  91              	.LVL7:
 117:main.c        ****     reflectance_start();
  92              		.loc 1 117 0
  93 003a FFF7FEFF 		bl	reflectance_start
  94              	.LVL8:
 118:main.c        ****     IR_led_Write(1);
  95              		.loc 1 118 0
  96 003e 0120     		movs	r0, #1
  97 0040 FFF7FEFF 		bl	IR_led_Write
  98              	.LVL9:
 119:main.c        **** 
 120:main.c        ****     BatteryLed_Write(0); // Switch led off 
  99              		.loc 1 120 0
 100 0044 0020     		movs	r0, #0
 101 0046 FFF7FEFF 		bl	BatteryLed_Write
 102              	.LVL10:
  51:main.c        ****     
 103              		.loc 1 51 0
 104 004a 0024     		movs	r4, #0
 121:main.c        ****     
 122:main.c        ****     uint8 button; // make button exist
 123:main.c        ****     
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 5


 124:main.c        ****     // To start the robot's movement routine, press the button
 125:main.c        ****     while (exit == 0) 
 105              		.loc 1 125 0
 106 004c 06E0     		b	.L3
 107              	.LVL11:
 108              	.L4:
 126:main.c        ****     {
 127:main.c        ****         button = SW1_Read();
 109              		.loc 1 127 0
 110 004e FFF7FEFF 		bl	SW1_Read
 111              	.LVL12:
 128:main.c        ****         
 129:main.c        ****         if (button == 0) 
 112              		.loc 1 129 0
 113 0052 18B9     		cbnz	r0, .L3
 114              	.LVL13:
 130:main.c        ****         {
 131:main.c        ****             exit = 1;
 132:main.c        ****             CyDelay(10);
 115              		.loc 1 132 0
 116 0054 0A20     		movs	r0, #10
 117              	.LVL14:
 118 0056 FFF7FEFF 		bl	CyDelay
 119              	.LVL15:
 131:main.c        ****             CyDelay(10);
 120              		.loc 1 131 0
 121 005a 0124     		movs	r4, #1
 122              	.LVL16:
 123              	.L3:
 125:main.c        ****     {
 124              		.loc 1 125 0
 125 005c 002C     		cmp	r4, #0
 126 005e F6D0     		beq	.L4
 133:main.c        ****         }
 134:main.c        ****     }
 135:main.c        ****     
 136:main.c        ****     // Start going forward.
 137:main.c        ****     Custom_forward(speed);
 127              		.loc 1 137 0
 128 0060 F020     		movs	r0, #240
 129 0062 FFF7FEFF 		bl	Custom_forward
 130              	.LVL17:
  96:main.c        ****     float blackness2_right = 23999;
 131              		.loc 1 96 0
 132 0066 A34F     		ldr	r7, .L92+20
  94:main.c        ****     float blackness2_left = 23999;
 133              		.loc 1 94 0
 134 0068 0097     		str	r7, [sp]	@ float
  67:main.c        ****     
 135              		.loc 1 67 0
 136 006a 0026     		movs	r6, #0
  64:main.c        ****     
 137              		.loc 1 64 0
 138 006c 3446     		mov	r4, r6
 139              	.LVL18:
  63:main.c        ****     int inBlack = 0;
 140              		.loc 1 63 0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 6


 141 006e B246     		mov	r10, r6
  54:main.c        ****     
 142              		.loc 1 54 0
 143 0070 0196     		str	r6, [sp, #4]
  48:main.c        ****     
 144              		.loc 1 48 0
 145 0072 B146     		mov	r9, r6
 138:main.c        ****     
 139:main.c        ****     // Giant loop to run the movement logic in.
 140:main.c        ****     while(exitMainLoop == 0)
 146              		.loc 1 140 0
 147 0074 BCE3     		b	.L5
 148              	.LVL19:
 149              	.L54:
 141:main.c        ****     {    
 142:main.c        ****         
 143:main.c        ****         reflectance_read(&ref); // raw reflectance value ('blackness') from the sensor; 0 - 23 999
 150              		.loc 1 143 0
 151 0076 06A8     		add	r0, sp, #24
 152 0078 FFF7FEFF 		bl	reflectance_read
 153              	.LVL20:
 144:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 145:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 154              		.loc 1 145 0
 155 007c 04A8     		add	r0, sp, #16
 156 007e FFF7FEFF 		bl	reflectance_digital
 157              	.LVL21:
 146:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 147:main.c        ****         //CyDelay(1000); // comment this delay out when doing movement tests / racing !!!
 148:main.c        ****         
 149:main.c        ****        
 150:main.c        ****         
 151:main.c        ****         // Line-following logic.
 152:main.c        ****         // NOTE: due to the calibration of the motor speeds, 240 (255 - 15) is our current max spee
 153:main.c        ****                
 154:main.c        ****         // When the measured blackness value drops below the threshold, start the appropriate turni
 155:main.c        ****         if (dig.l1 == 1)
 158              		.loc 1 155 0
 159 0082 BDF81230 		ldrh	r3, [sp, #18]
 160 0086 012B     		cmp	r3, #1
 161 0088 40F0BD81 		bne	.L6
 162 008c 4FF00008 		mov	r8, #0
 163 0090 C346     		mov	fp, r8
 164              	.LVL22:
 165              	.L27:
 156:main.c        ****         { 
 157:main.c        ****             // When the robot starts to veer off to the left, do a correction towards the right, un
 158:main.c        ****             do {
 159:main.c        ****                 
 160:main.c        ****                 // Obtain an initial value for blackness1_left, then close access to the if stateme
 161:main.c        ****                 if (loopCheck == 0)
 166              		.loc 1 161 0
 167 0092 BBF1000F 		cmp	fp, #0
 168 0096 0DD1     		bne	.L56
 162:main.c        ****                 {
 163:main.c        ****                     reflectance_read(&ref);
 169              		.loc 1 163 0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 7


 170 0098 06A8     		add	r0, sp, #24
 171 009a FFF7FEFF 		bl	reflectance_read
 172              	.LVL23:
 164:main.c        ****                     blackness1_left = ref.l1;
 173              		.loc 1 164 0
 174 009e BDF81A00 		ldrh	r0, [sp, #26]
 175 00a2 FFF7FEFF 		bl	__aeabi_ui2f
 176              	.LVL24:
 177 00a6 0546     		mov	r5, r0
 178              	.LVL25:
 165:main.c        ****                     CyDelay(1);
 179              		.loc 1 165 0
 180 00a8 0120     		movs	r0, #1
 181              	.LVL26:
 182 00aa FFF7FEFF 		bl	CyDelay
 183              	.LVL27:
 166:main.c        ****                     loopCheck = 1;                   
 184              		.loc 1 166 0
 185 00ae 4FF0010B 		mov	fp, #1
 186 00b2 00E0     		b	.L7
 187              	.LVL28:
 188              	.L56:
 189 00b4 009D     		ldr	r5, [sp]	@ float
 190              	.LVL29:
 191              	.L7:
 167:main.c        ****                 }
 168:main.c        ****                 
 169:main.c        ****                 // Obtain a second value (1 millisecond later).
 170:main.c        ****                 reflectance_read(&ref);
 192              		.loc 1 170 0
 193 00b6 06A8     		add	r0, sp, #24
 194 00b8 FFF7FEFF 		bl	reflectance_read
 195              	.LVL30:
 171:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 196              		.loc 1 171 0
 197 00bc 04A8     		add	r0, sp, #16
 198 00be FFF7FEFF 		bl	reflectance_digital
 199              	.LVL31:
 172:main.c        ****                 blackness2_left = ref.l1;
 200              		.loc 1 172 0
 201 00c2 BDF81A00 		ldrh	r0, [sp, #26]
 202 00c6 FFF7FEFF 		bl	__aeabi_ui2f
 203              	.LVL32:
 204 00ca 0146     		mov	r1, r0
 205 00cc 0090     		str	r0, [sp]	@ float
 206              	.LVL33:
 173:main.c        ****                 
 174:main.c        ****                 // Calculate the difference between the two values.
 175:main.c        ****                 diff_left = blackness1_left - blackness2_left;
 207              		.loc 1 175 0
 208 00ce 2846     		mov	r0, r5
 209              	.LVL34:
 210 00d0 FFF7FEFF 		bl	__aeabi_fsub
 211              	.LVL35:
 212 00d4 0546     		mov	r5, r0
 213              	.LVL36:
 176:main.c        ****        
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 8


 177:main.c        ****                 // Make a switch statement based on the determined values of blackness2_left and di
 178:main.c        ****                 // NOTE: diff_Fast = 500 atm (for both sides, left and right).
 179:main.c        ****                 if (diff_left <= -diff_Fast) { diffCase = 1; }
 214              		.loc 1 179 0
 215 00d6 8849     		ldr	r1, .L92+24
 216 00d8 FFF7FEFF 		bl	__aeabi_fcmple
 217              	.LVL37:
 218 00dc C8B9     		cbnz	r0, .L57
 180:main.c        ****                 else if (diff_left > -diff_Fast && diff_left < 0) { diffCase = 2; }            
 219              		.loc 1 180 0
 220 00de 2846     		mov	r0, r5
 221 00e0 8549     		ldr	r1, .L92+24
 222 00e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 223              	.LVL38:
 224 00e6 20B1     		cbz	r0, .L9
 225              		.loc 1 180 0 is_stmt 0 discriminator 1
 226 00e8 2846     		mov	r0, r5
 227 00ea 0021     		movs	r1, #0
 228 00ec FFF7FEFF 		bl	__aeabi_fcmplt
 229              	.LVL39:
 230 00f0 88B9     		cbnz	r0, .L58
 231              	.L9:
 181:main.c        ****                 else if (diff_left >= 0 && diff_left < diff_Fast) { diffCase = 3; }
 232              		.loc 1 181 0 is_stmt 1
 233 00f2 2846     		mov	r0, r5
 234 00f4 0021     		movs	r1, #0
 235 00f6 FFF7FEFF 		bl	__aeabi_fcmpge
 236              	.LVL40:
 237 00fa 20B1     		cbz	r0, .L11
 238              		.loc 1 181 0 is_stmt 0 discriminator 1
 239 00fc 2846     		mov	r0, r5
 240 00fe 7F49     		ldr	r1, .L92+28
 241 0100 FFF7FEFF 		bl	__aeabi_fcmplt
 242              	.LVL41:
 243 0104 48B9     		cbnz	r0, .L59
 244              	.L11:
 182:main.c        ****                 else if (diff_left >= diff_Fast) { diffCase = 4; }
 245              		.loc 1 182 0 is_stmt 1
 246 0106 2846     		mov	r0, r5
 247 0108 7C49     		ldr	r1, .L92+28
 248 010a FFF7FEFF 		bl	__aeabi_fcmpge
 249              	.LVL42:
 250 010e 30B9     		cbnz	r0, .L60
 251 0110 06E0     		b	.L8
 252              	.L57:
 179:main.c        ****                 else if (diff_left > -diff_Fast && diff_left < 0) { diffCase = 2; }            
 253              		.loc 1 179 0
 254 0112 0126     		movs	r6, #1
 255              	.LVL43:
 256 0114 04E0     		b	.L8
 257              	.LVL44:
 258              	.L58:
 180:main.c        ****                 else if (diff_left >= 0 && diff_left < diff_Fast) { diffCase = 3; }
 259              		.loc 1 180 0
 260 0116 0226     		movs	r6, #2
 261              	.LVL45:
 262 0118 02E0     		b	.L8
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 9


 263              	.LVL46:
 264              	.L59:
 181:main.c        ****                 else if (diff_left >= diff_Fast) { diffCase = 4; }
 265              		.loc 1 181 0
 266 011a 0326     		movs	r6, #3
 267              	.LVL47:
 268 011c 00E0     		b	.L8
 269              	.LVL48:
 270              	.L60:
 271              		.loc 1 182 0
 272 011e 0426     		movs	r6, #4
 273              	.LVL49:
 274              	.L8:
 183:main.c        ****                 
 184:main.c        ****                 switch (diffCase)
 275              		.loc 1 184 0
 276 0120 731E     		subs	r3, r6, #1
 277 0122 032B     		cmp	r3, #3
 278 0124 00F25B81 		bhi	.L13
 279 0128 DFE813F0 		tbh	[pc, r3, lsl #1]
 280              	.L15:
 281 012c 0400     		.2byte	(.L14-.L15)/2
 282 012e 1D00     		.2byte	(.L16-.L15)/2
 283 0130 7C00     		.2byte	(.L17-.L15)/2
 284 0132 F800     		.2byte	(.L18-.L15)/2
 285              		.p2align 1
 286              	.L14:
 185:main.c        ****                 {
 186:main.c        ****                     case 1: // diff_left <= -diff_Fast
 187:main.c        ****                     
 188:main.c        ****                         // moving fast towards center of line
 189:main.c        ****                         
 190:main.c        ****                         if (blackness2_left < 16000) 
 287              		.loc 1 190 0
 288 0134 0098     		ldr	r0, [sp]	@ float
 289 0136 7249     		ldr	r1, .L92+32
 290 0138 FFF7FEFF 		bl	__aeabi_fcmplt
 291              	.LVL50:
 292 013c 0028     		cmp	r0, #0
 293 013e 00F04C81 		beq	.L83
 191:main.c        ****                         {
 192:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 294              		.loc 1 192 0
 295 0142 7048     		ldr	r0, .L92+36
 296 0144 0099     		ldr	r1, [sp]	@ float
 297 0146 FFF7FEFF 		bl	__aeabi_fsub
 298              	.LVL51:
 299 014a 6E49     		ldr	r1, .L92+36
 300 014c FFF7FEFF 		bl	__aeabi_fdiv
 301              	.LVL52:
 302 0150 FFF7FEFF 		bl	__aeabi_f2d
 303              	.LVL53:
 304 0154 0022     		movs	r2, #0
 305 0156 6C4B     		ldr	r3, .L92+40
 306 0158 FFF7FEFF 		bl	__aeabi_dmul
 307              	.LVL54:
 308 015c FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 10


 309              	.LVL55:
 310 0160 5FFA80F8 		uxtb	r8, r0
 311              	.LVL56:
 312 0164 3BE1     		b	.L13
 313              	.L16:
 193:main.c        ****                             
 194:main.c        ****                         } else {
 195:main.c        ****                         
 196:main.c        ****                             turn = 0;
 197:main.c        ****                         }
 198:main.c        ****                               
 199:main.c        ****                     break;
 200:main.c        ****                     
 201:main.c        ****                     case 2: // -diff_Fast < diff_left < 0
 202:main.c        ****                     
 203:main.c        ****                         // moving at a moderate speed towards center of line
 204:main.c        ****                     
 205:main.c        ****                         if (blackness2_left < 16000) 
 314              		.loc 1 205 0
 315 0166 0098     		ldr	r0, [sp]	@ float
 316 0168 6549     		ldr	r1, .L92+32
 317 016a FFF7FEFF 		bl	__aeabi_fcmplt
 318              	.LVL57:
 319 016e 60B3     		cbz	r0, .L84
 206:main.c        ****                         {
 207:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 320              		.loc 1 207 0
 321 0170 6448     		ldr	r0, .L92+36
 322 0172 0099     		ldr	r1, [sp]	@ float
 323 0174 FFF7FEFF 		bl	__aeabi_fsub
 324              	.LVL58:
 325 0178 6249     		ldr	r1, .L92+36
 326 017a FFF7FEFF 		bl	__aeabi_fdiv
 327              	.LVL59:
 328 017e FFF7FEFF 		bl	__aeabi_f2d
 329              	.LVL60:
 330 0182 0022     		movs	r2, #0
 331 0184 604B     		ldr	r3, .L92+40
 332 0186 FFF7FEFF 		bl	__aeabi_dmul
 333              	.LVL61:
 334 018a FFF7FEFF 		bl	__aeabi_d2uiz
 335              	.LVL62:
 336 018e 5FFA80F8 		uxtb	r8, r0
 337              	.LVL63:
 208:main.c        ****                             turn += 1.4 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 338              		.loc 1 208 0
 339 0192 2846     		mov	r0, r5
 340 0194 2946     		mov	r1, r5
 341 0196 FFF7FEFF 		bl	__aeabi_fmul
 342              	.LVL64:
 343 019a 5C49     		ldr	r1, .L92+44
 344 019c FFF7FEFF 		bl	__aeabi_fdiv
 345              	.LVL65:
 346 01a0 FFF7FEFF 		bl	__aeabi_f2d
 347              	.LVL66:
 348 01a4 4EA3     		adr	r3, .L92
 349 01a6 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 11


 350 01aa FFF7FEFF 		bl	__aeabi_dmul
 351              	.LVL67:
 352 01ae CDE90201 		strd	r0, [sp, #8]
 353 01b2 4046     		mov	r0, r8
 354 01b4 FFF7FEFF 		bl	__aeabi_i2d
 355              	.LVL68:
 356 01b8 DDE90223 		ldrd	r2, [sp, #8]
 357 01bc FFF7FEFF 		bl	__aeabi_dadd
 358              	.LVL69:
 359 01c0 FFF7FEFF 		bl	__aeabi_d2uiz
 360              	.LVL70:
 361 01c4 5FFA80F8 		uxtb	r8, r0
 362              	.LVL71:
 363 01c8 09E1     		b	.L13
 364              	.L84:
 209:main.c        ****                             
 210:main.c        ****                         } else {
 211:main.c        ****                         
 212:main.c        ****                             turn = 1.1 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 365              		.loc 1 212 0
 366 01ca 4E48     		ldr	r0, .L92+36
 367 01cc 0099     		ldr	r1, [sp]	@ float
 368 01ce FFF7FEFF 		bl	__aeabi_fsub
 369              	.LVL72:
 370 01d2 4C49     		ldr	r1, .L92+36
 371 01d4 FFF7FEFF 		bl	__aeabi_fdiv
 372              	.LVL73:
 373 01d8 FFF7FEFF 		bl	__aeabi_f2d
 374              	.LVL74:
 375 01dc 0022     		movs	r2, #0
 376 01de 4C4B     		ldr	r3, .L92+48
 377 01e0 FFF7FEFF 		bl	__aeabi_dmul
 378              	.LVL75:
 379 01e4 FFF7FEFF 		bl	__aeabi_d2uiz
 380              	.LVL76:
 381 01e8 5FFA80F8 		uxtb	r8, r0
 382              	.LVL77:
 213:main.c        ****                             turn -= 1.1 * ( (diff_left * diff_left / maxDiff_l1)); //subtracts from
 383              		.loc 1 213 0
 384 01ec 2846     		mov	r0, r5
 385 01ee 2946     		mov	r1, r5
 386 01f0 FFF7FEFF 		bl	__aeabi_fmul
 387              	.LVL78:
 388 01f4 4549     		ldr	r1, .L92+44
 389 01f6 FFF7FEFF 		bl	__aeabi_fdiv
 390              	.LVL79:
 391 01fa FFF7FEFF 		bl	__aeabi_f2d
 392              	.LVL80:
 393 01fe 3AA3     		adr	r3, .L92+8
 394 0200 D3E90023 		ldrd	r2, [r3]
 395 0204 FFF7FEFF 		bl	__aeabi_dmul
 396              	.LVL81:
 397 0208 CDE90201 		strd	r0, [sp, #8]
 398 020c 4046     		mov	r0, r8
 399 020e FFF7FEFF 		bl	__aeabi_i2d
 400              	.LVL82:
 401 0212 DDE90223 		ldrd	r2, [sp, #8]
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 12


 402 0216 FFF7FEFF 		bl	__aeabi_dsub
 403              	.LVL83:
 404 021a FFF7FEFF 		bl	__aeabi_d2uiz
 405              	.LVL84:
 406 021e 5FFA80F8 		uxtb	r8, r0
 407              	.LVL85:
 408 0222 DCE0     		b	.L13
 409              	.L17:
 214:main.c        ****                         }
 215:main.c        ****                                                          
 216:main.c        ****                     break;
 217:main.c        ****                         
 218:main.c        ****                     case 3: // 0 <= diff_left < diff_Fast
 219:main.c        ****                         
 220:main.c        ****                         // moving at a moderate speed away from center of line
 221:main.c        ****                         
 222:main.c        ****                         if (blackness2_left < 16000) 
 410              		.loc 1 222 0
 411 0224 0098     		ldr	r0, [sp]	@ float
 412 0226 3649     		ldr	r1, .L92+32
 413 0228 FFF7FEFF 		bl	__aeabi_fcmplt
 414              	.LVL86:
 415 022c 58B3     		cbz	r0, .L85
 223:main.c        ****                         {
 224:main.c        ****                             turn = 1.3 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 416              		.loc 1 224 0
 417 022e 3548     		ldr	r0, .L92+36
 418 0230 0099     		ldr	r1, [sp]	@ float
 419 0232 FFF7FEFF 		bl	__aeabi_fsub
 420              	.LVL87:
 421 0236 3349     		ldr	r1, .L92+36
 422 0238 FFF7FEFF 		bl	__aeabi_fdiv
 423              	.LVL88:
 424 023c FFF7FEFF 		bl	__aeabi_f2d
 425              	.LVL89:
 426 0240 0022     		movs	r2, #0
 427 0242 344B     		ldr	r3, .L92+52
 428 0244 FFF7FEFF 		bl	__aeabi_dmul
 429              	.LVL90:
 430 0248 FFF7FEFF 		bl	__aeabi_d2uiz
 431              	.LVL91:
 432 024c 5FFA80F8 		uxtb	r8, r0
 433              	.LVL92:
 225:main.c        ****                             turn += 1.5 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 434              		.loc 1 225 0
 435 0250 2846     		mov	r0, r5
 436 0252 2946     		mov	r1, r5
 437 0254 FFF7FEFF 		bl	__aeabi_fmul
 438              	.LVL93:
 439 0258 2C49     		ldr	r1, .L92+44
 440 025a FFF7FEFF 		bl	__aeabi_fdiv
 441              	.LVL94:
 442 025e FFF7FEFF 		bl	__aeabi_f2d
 443              	.LVL95:
 444 0262 0022     		movs	r2, #0
 445 0264 2C4B     		ldr	r3, .L92+56
 446 0266 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 13


 447              	.LVL96:
 448 026a CDE90201 		strd	r0, [sp, #8]
 449 026e 4046     		mov	r0, r8
 450 0270 FFF7FEFF 		bl	__aeabi_i2d
 451              	.LVL97:
 452 0274 DDE90223 		ldrd	r2, [sp, #8]
 453 0278 FFF7FEFF 		bl	__aeabi_dadd
 454              	.LVL98:
 455 027c FFF7FEFF 		bl	__aeabi_d2uiz
 456              	.LVL99:
 457 0280 5FFA80F8 		uxtb	r8, r0
 458              	.LVL100:
 459 0284 ABE0     		b	.L13
 460              	.L85:
 226:main.c        ****                             
 227:main.c        ****                         } else {
 228:main.c        ****                         
 229:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 461              		.loc 1 229 0
 462 0286 1F48     		ldr	r0, .L92+36
 463 0288 0099     		ldr	r1, [sp]	@ float
 464 028a FFF7FEFF 		bl	__aeabi_fsub
 465              	.LVL101:
 466 028e 1D49     		ldr	r1, .L92+36
 467 0290 FFF7FEFF 		bl	__aeabi_fdiv
 468              	.LVL102:
 469 0294 FFF7FEFF 		bl	__aeabi_f2d
 470              	.LVL103:
 471 0298 0022     		movs	r2, #0
 472 029a 1B4B     		ldr	r3, .L92+40
 473 029c FFF7FEFF 		bl	__aeabi_dmul
 474              	.LVL104:
 475 02a0 FFF7FEFF 		bl	__aeabi_d2uiz
 476              	.LVL105:
 477 02a4 5FFA80F8 		uxtb	r8, r0
 478              	.LVL106:
 230:main.c        ****                             turn += 1.4 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 479              		.loc 1 230 0
 480 02a8 2846     		mov	r0, r5
 481 02aa 2946     		mov	r1, r5
 482 02ac FFF7FEFF 		bl	__aeabi_fmul
 483              	.LVL107:
 484 02b0 1649     		ldr	r1, .L92+44
 485 02b2 FFF7FEFF 		bl	__aeabi_fdiv
 486              	.LVL108:
 487 02b6 FFF7FEFF 		bl	__aeabi_f2d
 488              	.LVL109:
 489 02ba 09A3     		adr	r3, .L92
 490 02bc D3E90023 		ldrd	r2, [r3]
 491 02c0 FFF7FEFF 		bl	__aeabi_dmul
 492              	.LVL110:
 493 02c4 CDE90201 		strd	r0, [sp, #8]
 494 02c8 4046     		mov	r0, r8
 495 02ca FFF7FEFF 		bl	__aeabi_i2d
 496              	.LVL111:
 497 02ce DDE90223 		ldrd	r2, [sp, #8]
 498 02d2 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 14


 499              	.LVL112:
 500 02d6 FFF7FEFF 		bl	__aeabi_d2uiz
 501              	.LVL113:
 502 02da 5FFA80F8 		uxtb	r8, r0
 503              	.LVL114:
 504 02de 7EE0     		b	.L13
 505              	.L93:
 506              		.align	3
 507              	.L92:
 508 02e0 66666666 		.word	1717986918
 509 02e4 6666F63F 		.word	1073112678
 510 02e8 9A999999 		.word	-1717986918
 511 02ec 9999F13F 		.word	1072798105
 512 02f0 00000000 		.word	sensor_isr_handler
 513 02f4 007EBB46 		.word	1186692608
 514 02f8 0000FAC3 		.word	-1007026176
 515 02fc 0000FA43 		.word	1140457472
 516 0300 00007A46 		.word	1182400512
 517 0304 00A08C46 		.word	1183621120
 518 0308 00007240 		.word	1081212928
 519 030c 00F05246 		.word	1179840512
 520 0310 00807040 		.word	1081114624
 521 0314 00807340 		.word	1081311232
 522 0318 0000F83F 		.word	1073217536
 523              	.L18:
 231:main.c        ****                         }
 232:main.c        ****                         
 233:main.c        ****                     break;   
 234:main.c        ****                         
 235:main.c        ****                     case 4: // diff_left >= diff_Fast
 236:main.c        ****                         
 237:main.c        ****                         // moving at a fast speed away from center of line
 238:main.c        ****                     
 239:main.c        ****                         if (blackness2_left < 16000) 
 524              		.loc 1 239 0
 525 031c 0098     		ldr	r0, [sp]	@ float
 526 031e AA49     		ldr	r1, .L94+32
 527 0320 FFF7FEFF 		bl	__aeabi_fcmplt
 528              	.LVL115:
 529 0324 60B3     		cbz	r0, .L86
 240:main.c        ****                         {
 241:main.c        ****                             turn = 1.5 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 530              		.loc 1 241 0
 531 0326 A948     		ldr	r0, .L94+36
 532 0328 0099     		ldr	r1, [sp]	@ float
 533 032a FFF7FEFF 		bl	__aeabi_fsub
 534              	.LVL116:
 535 032e A749     		ldr	r1, .L94+36
 536 0330 FFF7FEFF 		bl	__aeabi_fdiv
 537              	.LVL117:
 538 0334 FFF7FEFF 		bl	__aeabi_f2d
 539              	.LVL118:
 540 0338 0022     		movs	r2, #0
 541 033a A54B     		ldr	r3, .L94+40
 542 033c FFF7FEFF 		bl	__aeabi_dmul
 543              	.LVL119:
 544 0340 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 15


 545              	.LVL120:
 546 0344 5FFA80F8 		uxtb	r8, r0
 547              	.LVL121:
 242:main.c        ****                             turn += 1.7 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 548              		.loc 1 242 0
 549 0348 2846     		mov	r0, r5
 550 034a 2946     		mov	r1, r5
 551 034c FFF7FEFF 		bl	__aeabi_fmul
 552              	.LVL122:
 553 0350 A049     		ldr	r1, .L94+44
 554 0352 FFF7FEFF 		bl	__aeabi_fdiv
 555              	.LVL123:
 556 0356 FFF7FEFF 		bl	__aeabi_f2d
 557              	.LVL124:
 558 035a 93A3     		adr	r3, .L94
 559 035c D3E90023 		ldrd	r2, [r3]
 560 0360 FFF7FEFF 		bl	__aeabi_dmul
 561              	.LVL125:
 562 0364 CDE90201 		strd	r0, [sp, #8]
 563 0368 4046     		mov	r0, r8
 564 036a FFF7FEFF 		bl	__aeabi_i2d
 565              	.LVL126:
 566 036e DDE90223 		ldrd	r2, [sp, #8]
 567 0372 FFF7FEFF 		bl	__aeabi_dadd
 568              	.LVL127:
 569 0376 FFF7FEFF 		bl	__aeabi_d2uiz
 570              	.LVL128:
 571 037a 5FFA80F8 		uxtb	r8, r0
 572              	.LVL129:
 573 037e 2EE0     		b	.L13
 574              	.L86:
 243:main.c        ****                             
 244:main.c        ****                         } else {
 245:main.c        ****                         
 246:main.c        ****                             turn = 1.4 * speed * ( (black_threshold_l1 - blackness2_left) / black_t
 575              		.loc 1 246 0
 576 0380 9248     		ldr	r0, .L94+36
 577 0382 0099     		ldr	r1, [sp]	@ float
 578 0384 FFF7FEFF 		bl	__aeabi_fsub
 579              	.LVL130:
 580 0388 9049     		ldr	r1, .L94+36
 581 038a FFF7FEFF 		bl	__aeabi_fdiv
 582              	.LVL131:
 583 038e FFF7FEFF 		bl	__aeabi_f2d
 584              	.LVL132:
 585 0392 0022     		movs	r2, #0
 586 0394 904B     		ldr	r3, .L94+48
 587 0396 FFF7FEFF 		bl	__aeabi_dmul
 588              	.LVL133:
 589 039a FFF7FEFF 		bl	__aeabi_d2uiz
 590              	.LVL134:
 591 039e 5FFA80F8 		uxtb	r8, r0
 592              	.LVL135:
 247:main.c        ****                             turn += 1.6 * ( (diff_left * diff_left / maxDiff_l1)); // adds to turn
 593              		.loc 1 247 0
 594 03a2 2846     		mov	r0, r5
 595 03a4 2946     		mov	r1, r5
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 16


 596 03a6 FFF7FEFF 		bl	__aeabi_fmul
 597              	.LVL136:
 598 03aa 8A49     		ldr	r1, .L94+44
 599 03ac FFF7FEFF 		bl	__aeabi_fdiv
 600              	.LVL137:
 601 03b0 FFF7FEFF 		bl	__aeabi_f2d
 602              	.LVL138:
 603 03b4 7EA3     		adr	r3, .L94+8
 604 03b6 D3E90023 		ldrd	r2, [r3]
 605 03ba FFF7FEFF 		bl	__aeabi_dmul
 606              	.LVL139:
 607 03be CDE90201 		strd	r0, [sp, #8]
 608 03c2 4046     		mov	r0, r8
 609 03c4 FFF7FEFF 		bl	__aeabi_i2d
 610              	.LVL140:
 611 03c8 DDE90223 		ldrd	r2, [sp, #8]
 612 03cc FFF7FEFF 		bl	__aeabi_dadd
 613              	.LVL141:
 614 03d0 FFF7FEFF 		bl	__aeabi_d2uiz
 615              	.LVL142:
 616 03d4 5FFA80F8 		uxtb	r8, r0
 617              	.LVL143:
 618 03d8 01E0     		b	.L13
 619              	.L83:
 196:main.c        ****                         }
 620              		.loc 1 196 0
 621 03da 4FF00008 		mov	r8, #0
 622              	.LVL144:
 623              	.L13:
 248:main.c        ****                         }
 249:main.c        ****                         
 250:main.c        ****                     break;
 251:main.c        ****                                                                   
 252:main.c        ****                     // possible case 5: diff_left > 9000 (or some high value)
 253:main.c        ****                     // there can be an infinite number of cases for increasingly finer control...
 254:main.c        ****                 }
 255:main.c        ****                 
 256:main.c        ****                 // Check for egregious values of 'turn' and correct them if found
 257:main.c        ****                 if (turn > 240)
 624              		.loc 1 257 0
 625 03de B8F1F00F 		cmp	r8, #240
 626 03e2 01D9     		bls	.L26
 258:main.c        ****                 {
 259:main.c        ****                     turn = 240;
 627              		.loc 1 259 0
 628 03e4 4FF0F008 		mov	r8, #240
 629              	.LVL145:
 630              	.L26:
 260:main.c        ****                 } else if (turn < 0) {
 261:main.c        ****                     turn = 0;   
 262:main.c        ****                 }
 263:main.c        ****                                                           
 264:main.c        ****                 // Execute the turn.
 265:main.c        ****                 Right_turn(turn);
 631              		.loc 1 265 0
 632 03e8 4046     		mov	r0, r8
 633 03ea FFF7FEFF 		bl	Right_turn
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 17


 634              	.LVL146:
 266:main.c        ****                              
 267:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 268:main.c        ****                 // As the loop continues, blackness2's value is stored in blackness1 and then black
 269:main.c        ****                 blackness1_left = blackness2_left;
 270:main.c        ****                 
 271:main.c        ****                 CyDelay(1);
 635              		.loc 1 271 0
 636 03ee 0120     		movs	r0, #1
 637 03f0 FFF7FEFF 		bl	CyDelay
 638              	.LVL147:
 272:main.c        ****           
 273:main.c        ****                 turnFlag = 1;
 274:main.c        ****                 
 275:main.c        ****             } while (dig.l1 == 1);
 639              		.loc 1 275 0
 640 03f4 BDF81230 		ldrh	r3, [sp, #18]
 641 03f8 012B     		cmp	r3, #1
 642 03fa 3FF44AAE 		beq	.L27
 643              	.LVL148:
 276:main.c        ****                                     
 277:main.c        ****             if (turnFlag == 1) 
 278:main.c        ****             {
 279:main.c        ****                 // After each executed turn, do a small 'corrective twitch' in the opposite directi
 280:main.c        ****                 //Left_turn(speed/2); // experimental value
 281:main.c        ****                 //CyDelay(10); // experimental value
 282:main.c        ****                 
 283:main.c        ****                 // Return 'loopCheck' to its initial value, so that we can get an initial measureme
 284:main.c        ****                 // once the turn loop starts again (i.e. when the robot needs to turn again).
 285:main.c        ****                 loopCheck = 0;
 286:main.c        ****               
 287:main.c        ****                 // For added safety, set turn to zero... May not be necessary.
 288:main.c        ****                 turn = 0;
 289:main.c        ****                 // Since the turn has ended, continue forward at the designated speed.
 290:main.c        ****                 Custom_forward(speed);
 644              		.loc 1 290 0
 645 03fe F020     		movs	r0, #240
 646 0400 FFF7FEFF 		bl	Custom_forward
 647              	.LVL149:
 648 0404 CAE1     		b	.L28
 649              	.LVL150:
 650              	.L6:
 291:main.c        ****                 
 292:main.c        ****                 turnFlag = 0;
 293:main.c        ****             }
 294:main.c        ****                               
 295:main.c        ****         } else if (dig.r1 == 1) {
 651              		.loc 1 295 0
 652 0406 BDF81430 		ldrh	r3, [sp, #20]
 653 040a 012B     		cmp	r3, #1
 654 040c 40F0C681 		bne	.L28
 655 0410 4FF00008 		mov	r8, #0
 656 0414 C346     		mov	fp, r8
 657              	.LVL151:
 658              	.L49:
 296:main.c        ****             
 297:main.c        ****             // When the robot starts to veer off to the right, do a correction towards the left, un
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 18


 298:main.c        ****             do {
 299:main.c        ****                 
 300:main.c        ****                 // Obtain an initial value for blackness1_right, then close access to the if statem
 301:main.c        ****                 if (loopCheck == 0)
 659              		.loc 1 301 0
 660 0416 BBF1000F 		cmp	fp, #0
 661 041a 0DD1     		bne	.L63
 302:main.c        ****                 {
 303:main.c        ****                     reflectance_read(&ref);
 662              		.loc 1 303 0
 663 041c 06A8     		add	r0, sp, #24
 664 041e FFF7FEFF 		bl	reflectance_read
 665              	.LVL152:
 304:main.c        ****                     blackness1_right = ref.r1;
 666              		.loc 1 304 0
 667 0422 BDF81C00 		ldrh	r0, [sp, #28]
 668 0426 FFF7FEFF 		bl	__aeabi_ui2f
 669              	.LVL153:
 670 042a 0546     		mov	r5, r0
 671              	.LVL154:
 305:main.c        ****                     CyDelay(1);
 672              		.loc 1 305 0
 673 042c 0120     		movs	r0, #1
 674              	.LVL155:
 675 042e FFF7FEFF 		bl	CyDelay
 676              	.LVL156:
 306:main.c        ****                     loopCheck = 1;
 677              		.loc 1 306 0
 678 0432 4FF0010B 		mov	fp, #1
 679 0436 00E0     		b	.L29
 680              	.LVL157:
 681              	.L63:
 682 0438 3D46     		mov	r5, r7
 683              	.LVL158:
 684              	.L29:
 307:main.c        ****                 }
 308:main.c        ****                 
 309:main.c        ****                 // Obtain a second value (1 millisecond later).
 310:main.c        ****                 reflectance_read(&ref);
 685              		.loc 1 310 0
 686 043a 06A8     		add	r0, sp, #24
 687 043c FFF7FEFF 		bl	reflectance_read
 688              	.LVL159:
 311:main.c        ****                 reflectance_digital(&dig); 
 689              		.loc 1 311 0
 690 0440 04A8     		add	r0, sp, #16
 691 0442 FFF7FEFF 		bl	reflectance_digital
 692              	.LVL160:
 312:main.c        ****                 blackness2_right = ref.r1;
 693              		.loc 1 312 0
 694 0446 BDF81C00 		ldrh	r0, [sp, #28]
 695 044a FFF7FEFF 		bl	__aeabi_ui2f
 696              	.LVL161:
 697 044e 0746     		mov	r7, r0
 698              	.LVL162:
 313:main.c        ****                 
 314:main.c        ****                 // Calculate the difference between the two values.
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 19


 315:main.c        ****                 diff_right = blackness1_right - blackness2_right;
 699              		.loc 1 315 0
 700 0450 2846     		mov	r0, r5
 701              	.LVL163:
 702 0452 3946     		mov	r1, r7
 703 0454 FFF7FEFF 		bl	__aeabi_fsub
 704              	.LVL164:
 705 0458 0546     		mov	r5, r0
 706              	.LVL165:
 316:main.c        **** 
 317:main.c        ****                 // Make a switch statement based on the determined values of blackness2_right and d
 318:main.c        ****                 // NOTE: diff_Fast = 500 atm (for both sides, left and right).
 319:main.c        ****                 if (diff_right <= -diff_Fast) { diffCase = 1; }
 707              		.loc 1 319 0
 708 045a 6049     		ldr	r1, .L94+52
 709 045c FFF7FEFF 		bl	__aeabi_fcmple
 710              	.LVL166:
 711 0460 C8B9     		cbnz	r0, .L64
 320:main.c        ****                 else if (diff_right > -diff_Fast && diff_right < 0) { diffCase = 2; }            
 712              		.loc 1 320 0
 713 0462 2846     		mov	r0, r5
 714 0464 5D49     		ldr	r1, .L94+52
 715 0466 FFF7FEFF 		bl	__aeabi_fcmpgt
 716              	.LVL167:
 717 046a 20B1     		cbz	r0, .L31
 718              		.loc 1 320 0 is_stmt 0 discriminator 1
 719 046c 2846     		mov	r0, r5
 720 046e 0021     		movs	r1, #0
 721 0470 FFF7FEFF 		bl	__aeabi_fcmplt
 722              	.LVL168:
 723 0474 88B9     		cbnz	r0, .L65
 724              	.L31:
 321:main.c        ****                 else if (diff_right >= 0 && diff_right < diff_Fast) { diffCase = 3; }
 725              		.loc 1 321 0 is_stmt 1
 726 0476 2846     		mov	r0, r5
 727 0478 0021     		movs	r1, #0
 728 047a FFF7FEFF 		bl	__aeabi_fcmpge
 729              	.LVL169:
 730 047e 20B1     		cbz	r0, .L33
 731              		.loc 1 321 0 is_stmt 0 discriminator 1
 732 0480 2846     		mov	r0, r5
 733 0482 5749     		ldr	r1, .L94+56
 734 0484 FFF7FEFF 		bl	__aeabi_fcmplt
 735              	.LVL170:
 736 0488 48B9     		cbnz	r0, .L66
 737              	.L33:
 322:main.c        ****                 else if (diff_right >= diff_Fast) { diffCase = 4; }
 738              		.loc 1 322 0 is_stmt 1
 739 048a 2846     		mov	r0, r5
 740 048c 5449     		ldr	r1, .L94+56
 741 048e FFF7FEFF 		bl	__aeabi_fcmpge
 742              	.LVL171:
 743 0492 30B9     		cbnz	r0, .L67
 744 0494 06E0     		b	.L30
 745              	.L64:
 319:main.c        ****                 else if (diff_right > -diff_Fast && diff_right < 0) { diffCase = 2; }            
 746              		.loc 1 319 0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 20


 747 0496 0126     		movs	r6, #1
 748              	.LVL172:
 749 0498 04E0     		b	.L30
 750              	.LVL173:
 751              	.L65:
 320:main.c        ****                 else if (diff_right >= 0 && diff_right < diff_Fast) { diffCase = 3; }
 752              		.loc 1 320 0
 753 049a 0226     		movs	r6, #2
 754              	.LVL174:
 755 049c 02E0     		b	.L30
 756              	.LVL175:
 757              	.L66:
 321:main.c        ****                 else if (diff_right >= diff_Fast) { diffCase = 4; }
 758              		.loc 1 321 0
 759 049e 0326     		movs	r6, #3
 760              	.LVL176:
 761 04a0 00E0     		b	.L30
 762              	.LVL177:
 763              	.L67:
 764              		.loc 1 322 0
 765 04a2 0426     		movs	r6, #4
 766              	.LVL178:
 767              	.L30:
 323:main.c        ****                 
 324:main.c        ****                 switch (diffCase)
 768              		.loc 1 324 0
 769 04a4 731E     		subs	r3, r6, #1
 770 04a6 032B     		cmp	r3, #3
 771 04a8 00F26581 		bhi	.L35
 772 04ac DFE813F0 		tbh	[pc, r3, lsl #1]
 773              	.L37:
 774 04b0 0400     		.2byte	(.L36-.L37)/2
 775 04b2 1D00     		.2byte	(.L38-.L37)/2
 776 04b4 A400     		.2byte	(.L39-.L37)/2
 777 04b6 0201     		.2byte	(.L40-.L37)/2
 778              		.p2align 1
 779              	.L36:
 325:main.c        ****                 {
 326:main.c        ****                     case 1: // diff_right <= -diff_Fast
 327:main.c        ****                     
 328:main.c        ****                         // moving fast towards center of line
 329:main.c        ****                         
 330:main.c        ****                         if (blackness2_right < 19200) 
 780              		.loc 1 330 0
 781 04b8 3846     		mov	r0, r7
 782 04ba 4A49     		ldr	r1, .L94+60
 783 04bc FFF7FEFF 		bl	__aeabi_fcmplt
 784              	.LVL179:
 785 04c0 0028     		cmp	r0, #0
 786 04c2 00F05681 		beq	.L87
 331:main.c        ****                         {
 332:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 787              		.loc 1 332 0
 788 04c6 4848     		ldr	r0, .L94+64
 789 04c8 3946     		mov	r1, r7
 790 04ca FFF7FEFF 		bl	__aeabi_fsub
 791              	.LVL180:
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 21


 792 04ce 4649     		ldr	r1, .L94+64
 793 04d0 FFF7FEFF 		bl	__aeabi_fdiv
 794              	.LVL181:
 795 04d4 FFF7FEFF 		bl	__aeabi_f2d
 796              	.LVL182:
 797 04d8 0022     		movs	r2, #0
 798 04da 444B     		ldr	r3, .L94+68
 799 04dc FFF7FEFF 		bl	__aeabi_dmul
 800              	.LVL183:
 801 04e0 FFF7FEFF 		bl	__aeabi_d2uiz
 802              	.LVL184:
 803 04e4 5FFA80F8 		uxtb	r8, r0
 804              	.LVL185:
 805 04e8 45E1     		b	.L35
 806              	.L38:
 333:main.c        ****                             
 334:main.c        ****                         } else {
 335:main.c        ****                         
 336:main.c        ****                             turn = 0;
 337:main.c        ****                         }
 338:main.c        ****                               
 339:main.c        ****                     break;
 340:main.c        ****                     
 341:main.c        ****                     case 2: // -diff_Fast < diff_right < 0
 342:main.c        ****                     
 343:main.c        ****                         // moving at a moderate speed towards center of line
 344:main.c        ****                     
 345:main.c        ****                         if (blackness2_right < 19200) 
 807              		.loc 1 345 0
 808 04ea 3846     		mov	r0, r7
 809 04ec 3D49     		ldr	r1, .L94+60
 810 04ee FFF7FEFF 		bl	__aeabi_fcmplt
 811              	.LVL186:
 812 04f2 60B3     		cbz	r0, .L88
 346:main.c        ****                         {
 347:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 813              		.loc 1 347 0
 814 04f4 3C48     		ldr	r0, .L94+64
 815 04f6 3946     		mov	r1, r7
 816 04f8 FFF7FEFF 		bl	__aeabi_fsub
 817              	.LVL187:
 818 04fc 3A49     		ldr	r1, .L94+64
 819 04fe FFF7FEFF 		bl	__aeabi_fdiv
 820              	.LVL188:
 821 0502 FFF7FEFF 		bl	__aeabi_f2d
 822              	.LVL189:
 823 0506 0022     		movs	r2, #0
 824 0508 384B     		ldr	r3, .L94+68
 825 050a FFF7FEFF 		bl	__aeabi_dmul
 826              	.LVL190:
 827 050e FFF7FEFF 		bl	__aeabi_d2uiz
 828              	.LVL191:
 829 0512 5FFA80F8 		uxtb	r8, r0
 830              	.LVL192:
 348:main.c        ****                             turn += 1.4 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 831              		.loc 1 348 0
 832 0516 2846     		mov	r0, r5
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 22


 833 0518 2946     		mov	r1, r5
 834 051a FFF7FEFF 		bl	__aeabi_fmul
 835              	.LVL193:
 836 051e 3449     		ldr	r1, .L94+72
 837 0520 FFF7FEFF 		bl	__aeabi_fdiv
 838              	.LVL194:
 839 0524 FFF7FEFF 		bl	__aeabi_f2d
 840              	.LVL195:
 841 0528 23A3     		adr	r3, .L94+16
 842 052a D3E90023 		ldrd	r2, [r3]
 843 052e FFF7FEFF 		bl	__aeabi_dmul
 844              	.LVL196:
 845 0532 CDE90201 		strd	r0, [sp, #8]
 846 0536 4046     		mov	r0, r8
 847 0538 FFF7FEFF 		bl	__aeabi_i2d
 848              	.LVL197:
 849 053c DDE90223 		ldrd	r2, [sp, #8]
 850 0540 FFF7FEFF 		bl	__aeabi_dadd
 851              	.LVL198:
 852 0544 FFF7FEFF 		bl	__aeabi_d2uiz
 853              	.LVL199:
 854 0548 5FFA80F8 		uxtb	r8, r0
 855              	.LVL200:
 856 054c 13E1     		b	.L35
 857              	.L88:
 349:main.c        ****                             
 350:main.c        ****                         } else {
 351:main.c        ****                         
 352:main.c        ****                             turn = 1.1 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 858              		.loc 1 352 0
 859 054e 2648     		ldr	r0, .L94+64
 860 0550 3946     		mov	r1, r7
 861 0552 FFF7FEFF 		bl	__aeabi_fsub
 862              	.LVL201:
 863 0556 2449     		ldr	r1, .L94+64
 864 0558 FFF7FEFF 		bl	__aeabi_fdiv
 865              	.LVL202:
 866 055c FFF7FEFF 		bl	__aeabi_f2d
 867              	.LVL203:
 868 0560 0022     		movs	r2, #0
 869 0562 244B     		ldr	r3, .L94+76
 870 0564 FFF7FEFF 		bl	__aeabi_dmul
 871              	.LVL204:
 872 0568 FFF7FEFF 		bl	__aeabi_d2uiz
 873              	.LVL205:
 874 056c 5FFA80F8 		uxtb	r8, r0
 875              	.LVL206:
 353:main.c        ****                             turn -= 1.1 * ( (diff_right * diff_right / maxDiff_r1)); //subtracts fr
 876              		.loc 1 353 0
 877 0570 2846     		mov	r0, r5
 878 0572 2946     		mov	r1, r5
 879 0574 FFF7FEFF 		bl	__aeabi_fmul
 880              	.LVL207:
 881 0578 1D49     		ldr	r1, .L94+72
 882 057a FFF7FEFF 		bl	__aeabi_fdiv
 883              	.LVL208:
 884 057e FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 23


 885              	.LVL209:
 886 0582 0FA3     		adr	r3, .L94+24
 887 0584 D3E90023 		ldrd	r2, [r3]
 888 0588 FFF7FEFF 		bl	__aeabi_dmul
 889              	.LVL210:
 890 058c CDE90201 		strd	r0, [sp, #8]
 891 0590 4046     		mov	r0, r8
 892 0592 FFF7FEFF 		bl	__aeabi_i2d
 893              	.LVL211:
 894 0596 DDE90223 		ldrd	r2, [sp, #8]
 895 059a FFF7FEFF 		bl	__aeabi_dsub
 896              	.LVL212:
 897 059e FFF7FEFF 		bl	__aeabi_d2uiz
 898              	.LVL213:
 899 05a2 5FFA80F8 		uxtb	r8, r0
 900              	.LVL214:
 901 05a6 E6E0     		b	.L35
 902              	.L95:
 903              		.align	3
 904              	.L94:
 905 05a8 33333333 		.word	858993459
 906 05ac 3333FB3F 		.word	1073427251
 907 05b0 9A999999 		.word	-1717986918
 908 05b4 9999F93F 		.word	1073322393
 909 05b8 66666666 		.word	1717986918
 910 05bc 6666F63F 		.word	1073112678
 911 05c0 9A999999 		.word	-1717986918
 912 05c4 9999F13F 		.word	1072798105
 913 05c8 00007A46 		.word	1182400512
 914 05cc 00A08C46 		.word	1183621120
 915 05d0 00807640 		.word	1081507840
 916 05d4 00F05246 		.word	1179840512
 917 05d8 00007540 		.word	1081409536
 918 05dc 0000FAC3 		.word	-1007026176
 919 05e0 0000FA43 		.word	1140457472
 920 05e4 00009646 		.word	1184235520
 921 05e8 0090B046 		.word	1185976320
 922 05ec 00007240 		.word	1081212928
 923 05f0 003C8D46 		.word	1183661056
 924 05f4 00807040 		.word	1081114624
 925              	.L39:
 354:main.c        ****                         }
 355:main.c        ****                                                          
 356:main.c        ****                     break;
 357:main.c        ****                         
 358:main.c        ****                     case 3: // 0 <= diff_right < diff_Fast
 359:main.c        ****                         
 360:main.c        ****                         // moving at a moderate speed away from center of line
 361:main.c        ****                         
 362:main.c        ****                         if (blackness2_right < 19200) 
 926              		.loc 1 362 0
 927 05f8 3846     		mov	r0, r7
 928 05fa 8749     		ldr	r1, .L96+24
 929 05fc FFF7FEFF 		bl	__aeabi_fcmplt
 930              	.LVL215:
 931 0600 58B3     		cbz	r0, .L89
 363:main.c        ****                         {
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 24


 364:main.c        ****                             turn = 1.3 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 932              		.loc 1 364 0
 933 0602 8648     		ldr	r0, .L96+28
 934 0604 3946     		mov	r1, r7
 935 0606 FFF7FEFF 		bl	__aeabi_fsub
 936              	.LVL216:
 937 060a 8449     		ldr	r1, .L96+28
 938 060c FFF7FEFF 		bl	__aeabi_fdiv
 939              	.LVL217:
 940 0610 FFF7FEFF 		bl	__aeabi_f2d
 941              	.LVL218:
 942 0614 0022     		movs	r2, #0
 943 0616 824B     		ldr	r3, .L96+32
 944 0618 FFF7FEFF 		bl	__aeabi_dmul
 945              	.LVL219:
 946 061c FFF7FEFF 		bl	__aeabi_d2uiz
 947              	.LVL220:
 948 0620 5FFA80F8 		uxtb	r8, r0
 949              	.LVL221:
 365:main.c        ****                             turn += 1.5 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 950              		.loc 1 365 0
 951 0624 2846     		mov	r0, r5
 952 0626 2946     		mov	r1, r5
 953 0628 FFF7FEFF 		bl	__aeabi_fmul
 954              	.LVL222:
 955 062c 7D49     		ldr	r1, .L96+36
 956 062e FFF7FEFF 		bl	__aeabi_fdiv
 957              	.LVL223:
 958 0632 FFF7FEFF 		bl	__aeabi_f2d
 959              	.LVL224:
 960 0636 0022     		movs	r2, #0
 961 0638 7B4B     		ldr	r3, .L96+40
 962 063a FFF7FEFF 		bl	__aeabi_dmul
 963              	.LVL225:
 964 063e CDE90201 		strd	r0, [sp, #8]
 965 0642 4046     		mov	r0, r8
 966 0644 FFF7FEFF 		bl	__aeabi_i2d
 967              	.LVL226:
 968 0648 DDE90223 		ldrd	r2, [sp, #8]
 969 064c FFF7FEFF 		bl	__aeabi_dadd
 970              	.LVL227:
 971 0650 FFF7FEFF 		bl	__aeabi_d2uiz
 972              	.LVL228:
 973 0654 5FFA80F8 		uxtb	r8, r0
 974              	.LVL229:
 975 0658 8DE0     		b	.L35
 976              	.L89:
 366:main.c        ****                             
 367:main.c        ****                         } else {
 368:main.c        ****                         
 369:main.c        ****                             turn = 1.2 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 977              		.loc 1 369 0
 978 065a 7048     		ldr	r0, .L96+28
 979 065c 3946     		mov	r1, r7
 980 065e FFF7FEFF 		bl	__aeabi_fsub
 981              	.LVL230:
 982 0662 6E49     		ldr	r1, .L96+28
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 25


 983 0664 FFF7FEFF 		bl	__aeabi_fdiv
 984              	.LVL231:
 985 0668 FFF7FEFF 		bl	__aeabi_f2d
 986              	.LVL232:
 987 066c 0022     		movs	r2, #0
 988 066e 6F4B     		ldr	r3, .L96+44
 989 0670 FFF7FEFF 		bl	__aeabi_dmul
 990              	.LVL233:
 991 0674 FFF7FEFF 		bl	__aeabi_d2uiz
 992              	.LVL234:
 993 0678 5FFA80F8 		uxtb	r8, r0
 994              	.LVL235:
 370:main.c        ****                             turn += 1.4 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 995              		.loc 1 370 0
 996 067c 2846     		mov	r0, r5
 997 067e 2946     		mov	r1, r5
 998 0680 FFF7FEFF 		bl	__aeabi_fmul
 999              	.LVL236:
 1000 0684 6749     		ldr	r1, .L96+36
 1001 0686 FFF7FEFF 		bl	__aeabi_fdiv
 1002              	.LVL237:
 1003 068a FFF7FEFF 		bl	__aeabi_f2d
 1004              	.LVL238:
 1005 068e 5CA3     		adr	r3, .L96
 1006 0690 D3E90023 		ldrd	r2, [r3]
 1007 0694 FFF7FEFF 		bl	__aeabi_dmul
 1008              	.LVL239:
 1009 0698 CDE90201 		strd	r0, [sp, #8]
 1010 069c 4046     		mov	r0, r8
 1011 069e FFF7FEFF 		bl	__aeabi_i2d
 1012              	.LVL240:
 1013 06a2 DDE90223 		ldrd	r2, [sp, #8]
 1014 06a6 FFF7FEFF 		bl	__aeabi_dadd
 1015              	.LVL241:
 1016 06aa FFF7FEFF 		bl	__aeabi_d2uiz
 1017              	.LVL242:
 1018 06ae 5FFA80F8 		uxtb	r8, r0
 1019              	.LVL243:
 1020 06b2 60E0     		b	.L35
 1021              	.L40:
 371:main.c        ****                         }
 372:main.c        ****                         
 373:main.c        ****                     break;   
 374:main.c        ****                         
 375:main.c        ****                     case 4: // diff_right >= diff_Fast
 376:main.c        ****                         
 377:main.c        ****                         // moving at a fast speed away from center of line
 378:main.c        ****                     
 379:main.c        ****                         if (blackness2_right < 19200) 
 1022              		.loc 1 379 0
 1023 06b4 3846     		mov	r0, r7
 1024 06b6 5849     		ldr	r1, .L96+24
 1025 06b8 FFF7FEFF 		bl	__aeabi_fcmplt
 1026              	.LVL244:
 1027 06bc 60B3     		cbz	r0, .L90
 380:main.c        ****                         {
 381:main.c        ****                             turn = 1.5 * speed * ( (black_threshold_r1 - blackness2_right) / black_
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 26


 1028              		.loc 1 381 0
 1029 06be 5748     		ldr	r0, .L96+28
 1030 06c0 3946     		mov	r1, r7
 1031 06c2 FFF7FEFF 		bl	__aeabi_fsub
 1032              	.LVL245:
 1033 06c6 5549     		ldr	r1, .L96+28
 1034 06c8 FFF7FEFF 		bl	__aeabi_fdiv
 1035              	.LVL246:
 1036 06cc FFF7FEFF 		bl	__aeabi_f2d
 1037              	.LVL247:
 1038 06d0 0022     		movs	r2, #0
 1039 06d2 574B     		ldr	r3, .L96+48
 1040 06d4 FFF7FEFF 		bl	__aeabi_dmul
 1041              	.LVL248:
 1042 06d8 FFF7FEFF 		bl	__aeabi_d2uiz
 1043              	.LVL249:
 1044 06dc 5FFA80F8 		uxtb	r8, r0
 1045              	.LVL250:
 382:main.c        ****                             turn += 1.7 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 1046              		.loc 1 382 0
 1047 06e0 2846     		mov	r0, r5
 1048 06e2 2946     		mov	r1, r5
 1049 06e4 FFF7FEFF 		bl	__aeabi_fmul
 1050              	.LVL251:
 1051 06e8 4E49     		ldr	r1, .L96+36
 1052 06ea FFF7FEFF 		bl	__aeabi_fdiv
 1053              	.LVL252:
 1054 06ee FFF7FEFF 		bl	__aeabi_f2d
 1055              	.LVL253:
 1056 06f2 45A3     		adr	r3, .L96+8
 1057 06f4 D3E90023 		ldrd	r2, [r3]
 1058 06f8 FFF7FEFF 		bl	__aeabi_dmul
 1059              	.LVL254:
 1060 06fc CDE90201 		strd	r0, [sp, #8]
 1061 0700 4046     		mov	r0, r8
 1062 0702 FFF7FEFF 		bl	__aeabi_i2d
 1063              	.LVL255:
 1064 0706 DDE90223 		ldrd	r2, [sp, #8]
 1065 070a FFF7FEFF 		bl	__aeabi_dadd
 1066              	.LVL256:
 1067 070e FFF7FEFF 		bl	__aeabi_d2uiz
 1068              	.LVL257:
 1069 0712 5FFA80F8 		uxtb	r8, r0
 1070              	.LVL258:
 1071 0716 2EE0     		b	.L35
 1072              	.L90:
 383:main.c        ****                             
 384:main.c        ****                         } else {
 385:main.c        ****                         
 386:main.c        ****                             turn = 1.4 * speed * ( (black_threshold_r1 - blackness2_right) / black_
 1073              		.loc 1 386 0
 1074 0718 4048     		ldr	r0, .L96+28
 1075 071a 3946     		mov	r1, r7
 1076 071c FFF7FEFF 		bl	__aeabi_fsub
 1077              	.LVL259:
 1078 0720 3E49     		ldr	r1, .L96+28
 1079 0722 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 27


 1080              	.LVL260:
 1081 0726 FFF7FEFF 		bl	__aeabi_f2d
 1082              	.LVL261:
 1083 072a 0022     		movs	r2, #0
 1084 072c 414B     		ldr	r3, .L96+52
 1085 072e FFF7FEFF 		bl	__aeabi_dmul
 1086              	.LVL262:
 1087 0732 FFF7FEFF 		bl	__aeabi_d2uiz
 1088              	.LVL263:
 1089 0736 5FFA80F8 		uxtb	r8, r0
 1090              	.LVL264:
 387:main.c        ****                             turn += 1.6 * ( (diff_right * diff_right / maxDiff_r1)); // adds to tur
 1091              		.loc 1 387 0
 1092 073a 2846     		mov	r0, r5
 1093 073c 2946     		mov	r1, r5
 1094 073e FFF7FEFF 		bl	__aeabi_fmul
 1095              	.LVL265:
 1096 0742 3849     		ldr	r1, .L96+36
 1097 0744 FFF7FEFF 		bl	__aeabi_fdiv
 1098              	.LVL266:
 1099 0748 FFF7FEFF 		bl	__aeabi_f2d
 1100              	.LVL267:
 1101 074c 30A3     		adr	r3, .L96+16
 1102 074e D3E90023 		ldrd	r2, [r3]
 1103 0752 FFF7FEFF 		bl	__aeabi_dmul
 1104              	.LVL268:
 1105 0756 CDE90201 		strd	r0, [sp, #8]
 1106 075a 4046     		mov	r0, r8
 1107 075c FFF7FEFF 		bl	__aeabi_i2d
 1108              	.LVL269:
 1109 0760 DDE90223 		ldrd	r2, [sp, #8]
 1110 0764 FFF7FEFF 		bl	__aeabi_dadd
 1111              	.LVL270:
 1112 0768 FFF7FEFF 		bl	__aeabi_d2uiz
 1113              	.LVL271:
 1114 076c 5FFA80F8 		uxtb	r8, r0
 1115              	.LVL272:
 1116 0770 01E0     		b	.L35
 1117              	.L87:
 336:main.c        ****                         }
 1118              		.loc 1 336 0
 1119 0772 4FF00008 		mov	r8, #0
 1120              	.LVL273:
 1121              	.L35:
 388:main.c        ****                         }
 389:main.c        ****                         
 390:main.c        ****                     break;
 391:main.c        ****                                                                   
 392:main.c        ****                     // possible case 5: diff_left > 9000 (or some high value)
 393:main.c        ****                     // there can be an infinite number of cases for increasingly finer control...
 394:main.c        ****                 }
 395:main.c        ****                 
 396:main.c        ****                 // Check for egregious values of 'turn' and correct them if found
 397:main.c        ****                 if (turn > 240)
 1122              		.loc 1 397 0
 1123 0776 B8F1F00F 		cmp	r8, #240
 1124 077a 01D9     		bls	.L48
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 28


 398:main.c        ****                 {
 399:main.c        ****                     turn = 240;
 1125              		.loc 1 399 0
 1126 077c 4FF0F008 		mov	r8, #240
 1127              	.LVL274:
 1128              	.L48:
 400:main.c        ****                 } else if (turn < 0) {
 401:main.c        ****                     turn = 0;   
 402:main.c        ****                 }
 403:main.c        ****                 
 404:main.c        ****                 // Execute the turn.
 405:main.c        ****                 Left_turn(turn);
 1129              		.loc 1 405 0
 1130 0780 4046     		mov	r0, r8
 1131 0782 FFF7FEFF 		bl	Left_turn
 1132              	.LVL275:
 406:main.c        ****                 
 407:main.c        ****                 // Store the value of the second measurement to the variable for the first.
 408:main.c        ****                 // As the loop continues, blackness2's value is stored in blackness1 and then black
 409:main.c        ****                 blackness1_right = blackness2_right;
 410:main.c        ****                                 
 411:main.c        ****                 CyDelay(1);
 1133              		.loc 1 411 0
 1134 0786 0120     		movs	r0, #1
 1135 0788 FFF7FEFF 		bl	CyDelay
 1136              	.LVL276:
 412:main.c        ****              
 413:main.c        ****                 turnFlag = 1;
 414:main.c        ****                 
 415:main.c        ****             } while (dig.r1 == 1);
 1137              		.loc 1 415 0
 1138 078c BDF81430 		ldrh	r3, [sp, #20]
 1139 0790 012B     		cmp	r3, #1
 1140 0792 3FF440AE 		beq	.L49
 1141              	.LVL277:
 416:main.c        ****                            
 417:main.c        ****             if (turnFlag == 1) 
 418:main.c        ****             {
 419:main.c        ****                 // After each executed turn, do a small 'corrective twitch' in the opposite directi
 420:main.c        ****                 //Right_turn(speed/2); // experimental value
 421:main.c        ****                 //CyDelay(10); // experimental value
 422:main.c        ****                 
 423:main.c        ****                 // Return 'loopCheck' to its initial value, so that we can get an initial measureme
 424:main.c        ****                 // once the turn loop starts again (i.e. when the robot needs to turn again).
 425:main.c        ****                 loopCheck = 0;
 426:main.c        ****               
 427:main.c        ****                 // For added safety, set turn to zero... May not be necessary.
 428:main.c        ****                 turn = 0;
 429:main.c        ****                 // Since the turn has ended, continue forward at the designated speed.
 430:main.c        ****                 Custom_forward(speed);
 1142              		.loc 1 430 0
 1143 0796 F020     		movs	r0, #240
 1144 0798 FFF7FEFF 		bl	Custom_forward
 1145              	.LVL278:
 1146              	.L28:
 431:main.c        ****                 
 432:main.c        ****                 turnFlag = 0;
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 29


 433:main.c        ****             }
 434:main.c        ****         
 435:main.c        ****         }
 436:main.c        ****         
 437:main.c        ****          //First let's put line recognition logic here. It may be necessary to have line regocnitio
 438:main.c        ****         if (dig.l3 == 0 && dig.r3 == 0){
 1147              		.loc 1 438 0
 1148 079c BDF81030 		ldrh	r3, [sp, #16]
 1149 07a0 1BB9     		cbnz	r3, .L50
 1150              		.loc 1 438 0 is_stmt 0 discriminator 1
 1151 07a2 BDF81620 		ldrh	r2, [sp, #22]
 1152 07a6 02B9     		cbnz	r2, .L50
 439:main.c        ****             inBlack = 1;
 1153              		.loc 1 439 0 is_stmt 1
 1154 07a8 0124     		movs	r4, #1
 1155              	.LVL279:
 1156              	.L50:
 440:main.c        ****         }
 441:main.c        ****         
 442:main.c        ****         if (inBlack == 1 && dig.r3 == 1 && dig.l3 == 1){
 1157              		.loc 1 442 0
 1158 07aa 44B1     		cbz	r4, .L51
 1159              		.loc 1 442 0 is_stmt 0 discriminator 1
 1160 07ac BDF81620 		ldrh	r2, [sp, #22]
 1161 07b0 012A     		cmp	r2, #1
 1162 07b2 04D1     		bne	.L51
 1163              		.loc 1 442 0 discriminator 2
 1164 07b4 012B     		cmp	r3, #1
 1165 07b6 02D1     		bne	.L51
 443:main.c        ****             ++countLines;
 1166              		.loc 1 443 0 is_stmt 1
 1167 07b8 0AF1010A 		add	r10, r10, #1
 1168              	.LVL280:
 444:main.c        ****             inBlack = 0;
 1169              		.loc 1 444 0
 1170 07bc 0024     		movs	r4, #0
 1171              	.LVL281:
 1172              	.L51:
 445:main.c        ****         }
 446:main.c        ****         
 447:main.c        ****         //this must change (2=>1), when added moving to starting-line logic.
 448:main.c        ****         if (countLines == 2 && dig.r3 == 0 && dig.l3 == 0){
 1173              		.loc 1 448 0
 1174 07be BAF1020F 		cmp	r10, #2
 1175 07c2 09D1     		bne	.L52
 1176              		.loc 1 448 0 is_stmt 0 discriminator 1
 1177 07c4 BDF81620 		ldrh	r2, [sp, #22]
 1178 07c8 32B9     		cbnz	r2, .L52
 1179              		.loc 1 448 0 discriminator 2
 1180 07ca 2BB9     		cbnz	r3, .L52
 449:main.c        ****             motor_forward(0,0);
 1181              		.loc 1 449 0 is_stmt 1
 1182 07cc 0020     		movs	r0, #0
 1183 07ce 0146     		mov	r1, r0
 1184 07d0 FFF7FEFF 		bl	motor_forward
 1185              	.LVL282:
 450:main.c        ****             exitMainLoop = 1;
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 30


 1186              		.loc 1 450 0
 1187 07d4 0123     		movs	r3, #1
 1188 07d6 0193     		str	r3, [sp, #4]
 1189              	.LVL283:
 1190              	.L52:
 451:main.c        ****         }
 452:main.c        ****         
 453:main.c        ****         
 454:main.c        ****                                     
 455:main.c        ****         // For measuring the battery voltage at regular intervals. 
 456:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 457:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 458:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 459:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 460:main.c        ****         cycles++;
 1191              		.loc 1 460 0
 1192 07d8 09F10109 		add	r9, r9, #1
 1193              	.LVL284:
 461:main.c        ****         if (cycles >= 80000)
 1194              		.loc 1 461 0
 1195 07dc 164B     		ldr	r3, .L96+56
 1196 07de 9945     		cmp	r9, r3
 1197 07e0 03DD     		ble	.L53
 462:main.c        ****         {
 463:main.c        ****             Measure_Voltage();
 1198              		.loc 1 463 0
 1199 07e2 FFF7FEFF 		bl	Measure_Voltage
 1200              	.LVL285:
 464:main.c        ****             cycles = 0;
 1201              		.loc 1 464 0
 1202 07e6 4FF00009 		mov	r9, #0
 1203              	.LVL286:
 1204              	.L53:
 465:main.c        ****         }
 466:main.c        ****         
 467:main.c        ****         CyDelay(1);
 1205              		.loc 1 467 0
 1206 07ea 0120     		movs	r0, #1
 1207 07ec FFF7FEFF 		bl	CyDelay
 1208              	.LVL287:
 1209              	.L5:
 140:main.c        ****     {    
 1210              		.loc 1 140 0
 1211 07f0 019B     		ldr	r3, [sp, #4]
 1212 07f2 002B     		cmp	r3, #0
 1213 07f4 3FF43FAC 		beq	.L54
 1214              	.L55:
 468:main.c        ****      
 469:main.c        ****     }
 470:main.c        ****     
 471:main.c        ****     // empty loop to end with
 472:main.c        ****     for(;;){}
 1215              		.loc 1 472 0 discriminator 1
 1216 07f8 FEE7     		b	.L55
 1217              	.L97:
 1218 07fa 00BFAFF3 		.align	3
 1218      0080
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 31


 1219              	.L96:
 1220 0800 66666666 		.word	1717986918
 1221 0804 6666F63F 		.word	1073112678
 1222 0808 33333333 		.word	858993459
 1223 080c 3333FB3F 		.word	1073427251
 1224 0810 9A999999 		.word	-1717986918
 1225 0814 9999F93F 		.word	1073322393
 1226 0818 00009646 		.word	1184235520
 1227 081c 0090B046 		.word	1185976320
 1228 0820 00807340 		.word	1081311232
 1229 0824 003C8D46 		.word	1183661056
 1230 0828 0000F83F 		.word	1073217536
 1231 082c 00007240 		.word	1081212928
 1232 0830 00807640 		.word	1081507840
 1233 0834 00007540 		.word	1081409536
 1234 0838 7F380100 		.word	79999
 1235              		.cfi_endproc
 1236              	.LFE63:
 1237              		.size	main, .-main
 1238 083c AFF30080 		.section	.text._write,"ax",%progbits
 1239              		.align	2
 1240              		.global	_write
 1241              		.thumb
 1242              		.thumb_func
 1243              		.type	_write, %function
 1244              	_write:
 1245              	.LFB64:
 473:main.c        ****    
 474:main.c        **** }
 475:main.c        ****     
 476:main.c        ****     
 477:main.c        ****     
 478:main.c        ****         // Old comment on the turn logic... Still holds for the most part. There's no room for it i
 479:main.c        ****         // anymore, so I'm putting it down here for the moment:
 480:main.c        ****         
 481:main.c        ****         // Determine the correct turn amount (240 is max turn, 0 is no turn).
 482:main.c        ****         
 483:main.c        ****         // The larger the measured blackness value, the smaller the base turn amount, and vice vers
 484:main.c        ****         // value equals the blackness threshold, base turn amount = 0 (i.e. the robot goes straight
 485:main.c        ****         // The base turn amount is further modified by the rate of blackness change multiplied by a
 486:main.c        ****         // (now using square of diff).
 487:main.c        ****         // The more rapid the change of values (i.e. the difference between two measurements), the 
 488:main.c        ****         // becomes, thus leading to a steeper turn. 
 489:main.c        ****         // Finally, > 240 and < 0 checks were added to pre-empt any potential issues with invalid t
 490:main.c        ****         
 491:main.c        ****         // Calibrated base turn amount with the black_threshold; when blackness2_left = 17 500, tur
 492:main.c        ****         // With 10 000 blackness value, base turn amount = 144.
 493:main.c        ****         // With 15 000 blackness, base turn amount = 48.
 494:main.c        ****         // By adding a multiplying constant, the base turn amount can be raised and the turns tight
 495:main.c        ****         // NOTE: Due to the physical differences between the sensors, 'balancing' the values of tur
 496:main.c        ****         // the left and right sides may well be a 'false friend'!
 497:main.c        **** 
 498:main.c        **** // ================================================================================================
 499:main.c        **** // ================================================================================================
 500:main.c        **** 
 501:main.c        **** 
 502:main.c        **** //*/
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 32


 503:main.c        **** 
 504:main.c        **** /*//ultra sonic sensor//
 505:main.c        **** int main()
 506:main.c        **** {
 507:main.c        ****     CyGlobalIntEnable; 
 508:main.c        ****     UART_1_Start();
 509:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 510:main.c        ****     while(1) {
 511:main.c        ****         //If you want to print out the value  
 512:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 513:main.c        ****         CyDelay(1000);
 514:main.c        ****     }
 515:main.c        **** }   
 516:main.c        **** //*/
 517:main.c        **** 
 518:main.c        **** 
 519:main.c        **** /*//nunchuk//
 520:main.c        **** int main()
 521:main.c        **** {
 522:main.c        ****     CyGlobalIntEnable; 
 523:main.c        ****     UART_1_Start();
 524:main.c        ****   
 525:main.c        ****     nunchuk_start();
 526:main.c        ****     nunchuk_init();
 527:main.c        ****     
 528:main.c        ****     for(;;)
 529:main.c        ****     {    
 530:main.c        ****         nunchuk_read();
 531:main.c        ****     }
 532:main.c        **** }   
 533:main.c        **** //*/
 534:main.c        **** 
 535:main.c        **** 
 536:main.c        **** /*//IR receiver//
 537:main.c        **** int main()
 538:main.c        **** {
 539:main.c        ****     CyGlobalIntEnable; 
 540:main.c        ****     UART_1_Start();
 541:main.c        ****     
 542:main.c        ****     unsigned int IR_val; 
 543:main.c        ****     
 544:main.c        ****     for(;;)
 545:main.c        ****     {
 546:main.c        ****        IR_val = get_IR();
 547:main.c        ****        printf("%x\r\n\n",IR_val);
 548:main.c        ****     }    
 549:main.c        ****  }   
 550:main.c        **** //*/
 551:main.c        **** 
 552:main.c        **** 
 553:main.c        **** /*//Ambient light sensor//
 554:main.c        **** int main()
 555:main.c        **** {
 556:main.c        ****     CyGlobalIntEnable; 
 557:main.c        ****     UART_1_Start();
 558:main.c        ****     
 559:main.c        ****     I2C_Start();
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 33


 560:main.c        ****     
 561:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 562:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 563:main.c        ****     
 564:main.c        ****     for(;;)
 565:main.c        ****     {    
 566:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 567:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 568:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 569:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 570:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 571:main.c        ****         
 572:main.c        ****         uint8 CH0, CH1;
 573:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 574:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 575:main.c        **** 
 576:main.c        ****         double Ch0 = CH0;
 577:main.c        ****         double Ch1 = CH1;
 578:main.c        ****         
 579:main.c        ****         double data = 0;
 580:main.c        ****         data = getLux(Ch0,Ch1);
 581:main.c        ****         
 582:main.c        ****         // If you want to print out data
 583:main.c        ****         //printf("%lf\r\n",data);    
 584:main.c        ****     }    
 585:main.c        ****  }   
 586:main.c        **** //*/
 587:main.c        **** 
 588:main.c        **** 
 589:main.c        **** /*//accelerometer//
 590:main.c        **** int main()
 591:main.c        **** {
 592:main.c        ****     CyGlobalIntEnable; 
 593:main.c        ****     UART_1_Start();
 594:main.c        ****   
 595:main.c        ****     I2C_Start();
 596:main.c        ****   
 597:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 598:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 599:main.c        ****     
 600:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 601:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 602:main.c        ****     
 603:main.c        ****     
 604:main.c        ****     for(;;)
 605:main.c        ****     {
 606:main.c        ****         //print out accelerometer output
 607:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 608:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 609:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 610:main.c        ****         
 611:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 612:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 613:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 614:main.c        ****         
 615:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 616:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 34


 617:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 618:main.c        ****         
 619:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 620:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 621:main.c        ****         printf("\n");
 622:main.c        ****         
 623:main.c        ****         CyDelay(50);
 624:main.c        ****     }
 625:main.c        **** }   
 626:main.c        **** //*/
 627:main.c        **** 
 628:main.c        **** 
 629:main.c        **** /*//reflectance//
 630:main.c        **** int main()
 631:main.c        **** {
 632:main.c        ****     struct sensors_ ref;
 633:main.c        ****     struct sensors_ dig;
 634:main.c        ****     CyGlobalIntEnable; 
 635:main.c        ****     UART_1_Start();
 636:main.c        ****   
 637:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 638:main.c        ****     
 639:main.c        ****     reflectance_start();
 640:main.c        **** 
 641:main.c        ****     IR_led_Write(1);
 642:main.c        ****     for(;;)
 643:main.c        ****     {
 644:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 645:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 646:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 647:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 648:main.c        ****         
 649:main.c        ****         CyDelay(500);
 650:main.c        ****     }
 651:main.c        **** }   
 652:main.c        **** //*/
 653:main.c        **** 
 654:main.c        ****  /* //motor//
 655:main.c        **** int main()
 656:main.c        **** {
 657:main.c        ****     CyGlobalIntEnable; 
 658:main.c        ****     UART_1_Start();
 659:main.c        **** 
 660:main.c        ****     motor_start();              // motor start
 661:main.c        **** 
 662:main.c        ****     motor_forward(100,2000);     // moving forward
 663:main.c        ****     motor_turn(200,50,2000);     // turn
 664:main.c        ****     motor_turn(50,200,2000);     // turn
 665:main.c        ****     motor_backward(100,2000);    // movinb backward
 666:main.c        ****        
 667:main.c        ****     motor_stop();               // motor stop
 668:main.c        ****     
 669:main.c        ****     for(;;)
 670:main.c        ****     {
 671:main.c        **** 
 672:main.c        ****     }
 673:main.c        **** }
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 35


 674:main.c        **** //*/
 675:main.c        ****     
 676:main.c        **** 
 677:main.c        **** /*//gyroscope//
 678:main.c        **** int main()
 679:main.c        **** {
 680:main.c        ****     CyGlobalIntEnable; 
 681:main.c        ****     UART_1_Start();
 682:main.c        ****   
 683:main.c        ****     I2C_Start();
 684:main.c        ****   
 685:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 686:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 687:main.c        ****     
 688:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 689:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 690:main.c        ****     
 691:main.c        ****     for(;;)
 692:main.c        ****     {
 693:main.c        ****         //print out gyroscope output
 694:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 695:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 696:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 697:main.c        ****         
 698:main.c        ****         
 699:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 700:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 701:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 702:main.c        ****         
 703:main.c        ****         
 704:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 705:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 706:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 707:main.c        ****      
 708:main.c        ****         // If you want to print value
 709:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 710:main.c        ****         CyDelay(50);
 711:main.c        ****     }
 712:main.c        **** }   
 713:main.c        **** //*/
 714:main.c        **** 
 715:main.c        **** 
 716:main.c        **** /*//magnetometer//
 717:main.c        **** int main()
 718:main.c        **** {
 719:main.c        ****     CyGlobalIntEnable; 
 720:main.c        ****     UART_1_Start();
 721:main.c        ****   
 722:main.c        ****     I2C_Start();
 723:main.c        ****    
 724:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 725:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 726:main.c        ****     
 727:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 728:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 729:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 730:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 36


 731:main.c        ****     
 732:main.c        ****     
 733:main.c        ****     for(;;)
 734:main.c        ****     {
 735:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 736:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 737:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 738:main.c        ****         
 739:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 740:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 741:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 742:main.c        ****         
 743:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 744:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 745:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 746:main.c        ****         
 747:main.c        ****         heading(X_AXIS, Y_AXIS);
 748:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 749:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 750:main.c        ****         CyDelay(50);      
 751:main.c        ****     }
 752:main.c        **** }   
 753:main.c        **** //*/
 754:main.c        **** 
 755:main.c        **** 
 756:main.c        **** /*
 757:main.c        **** 
 758:main.c        **** 
 759:main.c        ****     <p>
 760:main.c        ****     <B>Sensors</B><br>
 761:main.c        ****     &nbsp;Included: <br>
 762:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 763:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 764:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 765:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 766:main.c        ****     &nbsp;Wii nunchuck<br>
 767:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 768:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 769:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 770:main.c        ****     &nbsp;IR LED <br><br><br>
 771:main.c        ****     </p>
 772:main.c        ****     
 773:main.c        ****     <p>
 774:main.c        ****     <B>Communication</B><br>
 775:main.c        ****     I2C, UART, Serial<br>
 776:main.c        ****     </p>
 777:main.c        **** 
 778:main.c        **** */
 779:main.c        **** 
 780:main.c        **** 
 781:main.c        **** #if 0
 782:main.c        **** int rread(void)
 783:main.c        **** {
 784:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 785:main.c        ****     SC0_Write(1);
 786:main.c        ****     CyDelayUs(10);
 787:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 37


 788:main.c        ****     Timer_1_Start();
 789:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 790:main.c        ****     uint16_t end = 0;
 791:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 792:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 793:main.c        ****             end = Timer_1_ReadCounter();
 794:main.c        ****         }
 795:main.c        ****     }
 796:main.c        ****     Timer_1_Stop();
 797:main.c        ****     
 798:main.c        ****     return (start - end);
 799:main.c        **** }
 800:main.c        **** #endif
 801:main.c        **** 
 802:main.c        **** /* Don't remove the functions below */
 803:main.c        **** int _write(int file, char *ptr, int len)
 804:main.c        **** {
 1246              		.loc 1 804 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250              	.LVL288:
 1251 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1252              		.cfi_def_cfa_offset 24
 1253              		.cfi_offset 3, -24
 1254              		.cfi_offset 4, -20
 1255              		.cfi_offset 5, -16
 1256              		.cfi_offset 6, -12
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 0C46     		mov	r4, r1
 1260 0004 1746     		mov	r7, r2
 1261              	.LVL289:
 805:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 806:main.c        **** 	int n;
 807:main.c        **** 	for(n = 0; n < len; n++) {
 1262              		.loc 1 807 0
 1263 0006 0025     		movs	r5, #0
 1264 0008 0BE0     		b	.L99
 1265              	.LVL290:
 1266              	.L101:
 808:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 1267              		.loc 1 808 0
 1268 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1269 000c 0A2B     		cmp	r3, #10
 1270 000e 02D1     		bne	.L100
 1271              		.loc 1 808 0 is_stmt 0 discriminator 1
 1272 0010 0D20     		movs	r0, #13
 1273 0012 FFF7FEFF 		bl	UART_1_PutChar
 1274              	.LVL291:
 1275              	.L100:
 809:main.c        **** 		UART_1_PutChar(*ptr++);
 1276              		.loc 1 809 0 is_stmt 1 discriminator 2
 1277 0016 661C     		adds	r6, r4, #1
 1278              	.LVL292:
 1279 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1280 001a FFF7FEFF 		bl	UART_1_PutChar
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 38


 1281              	.LVL293:
 807:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 1282              		.loc 1 807 0 discriminator 2
 1283 001e 0135     		adds	r5, r5, #1
 1284              	.LVL294:
 1285              		.loc 1 809 0 discriminator 2
 1286 0020 3446     		mov	r4, r6
 1287              	.LVL295:
 1288              	.L99:
 807:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 1289              		.loc 1 807 0 discriminator 1
 1290 0022 BD42     		cmp	r5, r7
 1291 0024 F1DB     		blt	.L101
 810:main.c        **** 	}
 811:main.c        **** 	return len;
 812:main.c        **** }
 1292              		.loc 1 812 0
 1293 0026 3846     		mov	r0, r7
 1294 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1295              		.cfi_endproc
 1296              	.LFE64:
 1297              		.size	_write, .-_write
 1298 002a 00BF     		.section	.text._read,"ax",%progbits
 1299              		.align	2
 1300              		.global	_read
 1301              		.thumb
 1302              		.thumb_func
 1303              		.type	_read, %function
 1304              	_read:
 1305              	.LFB65:
 813:main.c        **** 
 814:main.c        **** int _read (int file, char *ptr, int count)
 815:main.c        **** {
 1306              		.loc 1 815 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310              	.LVL296:
 1311 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1312              		.cfi_def_cfa_offset 24
 1313              		.cfi_offset 3, -24
 1314              		.cfi_offset 4, -20
 1315              		.cfi_offset 5, -16
 1316              		.cfi_offset 6, -12
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 0F46     		mov	r7, r1
 1320 0004 1446     		mov	r4, r2
 1321              	.LVL297:
 816:main.c        ****     int chs = 0;
 1322              		.loc 1 816 0
 1323 0006 0026     		movs	r6, #0
 817:main.c        ****     char ch;
 818:main.c        ****  
 819:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 820:main.c        ****     while(count > 0) {
 1324              		.loc 1 820 0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 39


 1325 0008 12E0     		b	.L105
 1326              	.LVL298:
 1327              	.L108:
 821:main.c        ****         ch = UART_1_GetChar();
 1328              		.loc 1 821 0
 1329 000a FFF7FEFF 		bl	UART_1_GetChar
 1330              	.LVL299:
 822:main.c        ****         if(ch != 0) {
 1331              		.loc 1 822 0
 1332 000e 0546     		mov	r5, r0
 1333 0010 70B1     		cbz	r0, .L105
 823:main.c        ****             UART_1_PutChar(ch);
 1334              		.loc 1 823 0
 1335 0012 FFF7FEFF 		bl	UART_1_PutChar
 1336              	.LVL300:
 824:main.c        ****             chs++;
 1337              		.loc 1 824 0
 1338 0016 0136     		adds	r6, r6, #1
 1339              	.LVL301:
 825:main.c        ****             if(ch == '\r') {
 1340              		.loc 1 825 0
 1341 0018 0D2D     		cmp	r5, #13
 1342 001a 03D1     		bne	.L106
 1343              	.LVL302:
 826:main.c        ****                 ch = '\n';
 827:main.c        ****                 UART_1_PutChar(ch);
 1344              		.loc 1 827 0
 1345 001c 0A20     		movs	r0, #10
 1346 001e FFF7FEFF 		bl	UART_1_PutChar
 1347              	.LVL303:
 826:main.c        ****                 ch = '\n';
 1348              		.loc 1 826 0
 1349 0022 0A25     		movs	r5, #10
 1350              	.LVL304:
 1351              	.L106:
 828:main.c        ****             }
 829:main.c        ****             *ptr++ = ch;
 1352              		.loc 1 829 0
 1353 0024 7B1C     		adds	r3, r7, #1
 1354              	.LVL305:
 1355 0026 3D70     		strb	r5, [r7]
 830:main.c        ****             count--;
 1356              		.loc 1 830 0
 1357 0028 013C     		subs	r4, r4, #1
 1358              	.LVL306:
 831:main.c        ****             if(ch == '\n') break;
 1359              		.loc 1 831 0
 1360 002a 0A2D     		cmp	r5, #10
 1361 002c 02D0     		beq	.L107
 829:main.c        ****             count--;
 1362              		.loc 1 829 0
 1363 002e 1F46     		mov	r7, r3
 1364              	.LVL307:
 1365              	.L105:
 820:main.c        ****         ch = UART_1_GetChar();
 1366              		.loc 1 820 0
 1367 0030 002C     		cmp	r4, #0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 40


 1368 0032 EADC     		bgt	.L108
 1369              	.LVL308:
 1370              	.L107:
 832:main.c        ****         }
 833:main.c        ****     }
 834:main.c        ****     return chs;
 835:main.c        **** }
 1371              		.loc 1 835 0
 1372 0034 3046     		mov	r0, r6
 1373 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1374              		.cfi_endproc
 1375              	.LFE65:
 1376              		.size	_read, .-_read
 1377              		.text
 1378              	.Letext0:
 1379              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1380              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1381              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1382              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 1383              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 1384              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 1385              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 1386              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 1387              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 1388              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 1389              		.file 12 "Generated_Source\\PSoC5/SW1.h"
 1390              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 1391              		.section	.debug_info,"",%progbits
 1392              	.Ldebug_info0:
 1393 0000 7D070000 		.4byte	0x77d
 1394 0004 0400     		.2byte	0x4
 1395 0006 00000000 		.4byte	.Ldebug_abbrev0
 1396 000a 04       		.byte	0x4
 1397 000b 01       		.uleb128 0x1
 1398 000c 3E030000 		.4byte	.LASF74
 1399 0010 01       		.byte	0x1
 1400 0011 D7020000 		.4byte	.LASF75
 1401 0015 19040000 		.4byte	.LASF76
 1402 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1403 001d 00000000 		.4byte	0
 1404 0021 00000000 		.4byte	.Ldebug_line0
 1405 0025 02       		.uleb128 0x2
 1406 0026 01       		.byte	0x1
 1407 0027 06       		.byte	0x6
 1408 0028 20020000 		.4byte	.LASF0
 1409 002c 02       		.uleb128 0x2
 1410 002d 01       		.byte	0x1
 1411 002e 08       		.byte	0x8
 1412 002f AA010000 		.4byte	.LASF1
 1413 0033 02       		.uleb128 0x2
 1414 0034 02       		.byte	0x2
 1415 0035 05       		.byte	0x5
 1416 0036 0F000000 		.4byte	.LASF2
 1417 003a 03       		.uleb128 0x3
 1418 003b 6B000000 		.4byte	.LASF4
 1419 003f 02       		.byte	0x2
 1420 0040 2B       		.byte	0x2b
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 41


 1421 0041 45000000 		.4byte	0x45
 1422 0045 02       		.uleb128 0x2
 1423 0046 02       		.byte	0x2
 1424 0047 07       		.byte	0x7
 1425 0048 6C020000 		.4byte	.LASF3
 1426 004c 03       		.uleb128 0x3
 1427 004d 21030000 		.4byte	.LASF5
 1428 0051 02       		.byte	0x2
 1429 0052 3F       		.byte	0x3f
 1430 0053 57000000 		.4byte	0x57
 1431 0057 02       		.uleb128 0x2
 1432 0058 04       		.byte	0x4
 1433 0059 05       		.byte	0x5
 1434 005a 98020000 		.4byte	.LASF6
 1435 005e 02       		.uleb128 0x2
 1436 005f 04       		.byte	0x4
 1437 0060 07       		.byte	0x7
 1438 0061 E9020000 		.4byte	.LASF7
 1439 0065 02       		.uleb128 0x2
 1440 0066 08       		.byte	0x8
 1441 0067 05       		.byte	0x5
 1442 0068 24010000 		.4byte	.LASF8
 1443 006c 02       		.uleb128 0x2
 1444 006d 08       		.byte	0x8
 1445 006e 07       		.byte	0x7
 1446 006f 34020000 		.4byte	.LASF9
 1447 0073 04       		.uleb128 0x4
 1448 0074 04       		.byte	0x4
 1449 0075 05       		.byte	0x5
 1450 0076 696E7400 		.ascii	"int\000"
 1451 007a 02       		.uleb128 0x2
 1452 007b 04       		.byte	0x4
 1453 007c 07       		.byte	0x7
 1454 007d 4B020000 		.4byte	.LASF10
 1455 0081 03       		.uleb128 0x3
 1456 0082 58020000 		.4byte	.LASF11
 1457 0086 03       		.byte	0x3
 1458 0087 21       		.byte	0x21
 1459 0088 3A000000 		.4byte	0x3a
 1460 008c 03       		.uleb128 0x3
 1461 008d 2C020000 		.4byte	.LASF12
 1462 0091 03       		.byte	0x3
 1463 0092 2C       		.byte	0x2c
 1464 0093 4C000000 		.4byte	0x4c
 1465 0097 05       		.uleb128 0x5
 1466 0098 BE000000 		.4byte	.LASF13
 1467 009c 04       		.byte	0x4
 1468 009d 9201     		.2byte	0x192
 1469 009f 2C000000 		.4byte	0x2c
 1470 00a3 05       		.uleb128 0x5
 1471 00a4 D0020000 		.4byte	.LASF14
 1472 00a8 04       		.byte	0x4
 1473 00a9 9401     		.2byte	0x194
 1474 00ab 5E000000 		.4byte	0x5e
 1475 00af 02       		.uleb128 0x2
 1476 00b0 04       		.byte	0x4
 1477 00b1 04       		.byte	0x4
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 42


 1478 00b2 15010000 		.4byte	.LASF15
 1479 00b6 02       		.uleb128 0x2
 1480 00b7 08       		.byte	0x8
 1481 00b8 04       		.byte	0x4
 1482 00b9 DF030000 		.4byte	.LASF16
 1483 00bd 02       		.uleb128 0x2
 1484 00be 01       		.byte	0x1
 1485 00bf 08       		.byte	0x8
 1486 00c0 66010000 		.4byte	.LASF17
 1487 00c4 05       		.uleb128 0x5
 1488 00c5 32010000 		.4byte	.LASF18
 1489 00c9 04       		.byte	0x4
 1490 00ca 4E02     		.2byte	0x24e
 1491 00cc D0000000 		.4byte	0xd0
 1492 00d0 06       		.uleb128 0x6
 1493 00d1 04       		.byte	0x4
 1494 00d2 D6000000 		.4byte	0xd6
 1495 00d6 07       		.uleb128 0x7
 1496 00d7 02       		.uleb128 0x2
 1497 00d8 04       		.byte	0x4
 1498 00d9 07       		.byte	0x7
 1499 00da 19000000 		.4byte	.LASF19
 1500 00de 06       		.uleb128 0x6
 1501 00df 04       		.byte	0x4
 1502 00e0 BD000000 		.4byte	0xbd
 1503 00e4 08       		.uleb128 0x8
 1504 00e5 85000000 		.4byte	.LASF77
 1505 00e9 08       		.byte	0x8
 1506 00ea 05       		.byte	0x5
 1507 00eb 11       		.byte	0x11
 1508 00ec 1D010000 		.4byte	0x11d
 1509 00f0 09       		.uleb128 0x9
 1510 00f1 6C3300   		.ascii	"l3\000"
 1511 00f4 05       		.byte	0x5
 1512 00f5 12       		.byte	0x12
 1513 00f6 81000000 		.4byte	0x81
 1514 00fa 00       		.byte	0
 1515 00fb 09       		.uleb128 0x9
 1516 00fc 6C3100   		.ascii	"l1\000"
 1517 00ff 05       		.byte	0x5
 1518 0100 14       		.byte	0x14
 1519 0101 81000000 		.4byte	0x81
 1520 0105 02       		.byte	0x2
 1521 0106 09       		.uleb128 0x9
 1522 0107 723100   		.ascii	"r1\000"
 1523 010a 05       		.byte	0x5
 1524 010b 15       		.byte	0x15
 1525 010c 81000000 		.4byte	0x81
 1526 0110 04       		.byte	0x4
 1527 0111 09       		.uleb128 0x9
 1528 0112 723300   		.ascii	"r3\000"
 1529 0115 05       		.byte	0x5
 1530 0116 17       		.byte	0x17
 1531 0117 81000000 		.4byte	0x81
 1532 011b 06       		.byte	0x6
 1533 011c 00       		.byte	0
 1534 011d 02       		.uleb128 0x2
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 43


 1535 011e 08       		.byte	0x8
 1536 011f 04       		.byte	0x4
 1537 0120 BD010000 		.4byte	.LASF20
 1538 0124 0A       		.uleb128 0xa
 1539 0125 A1020000 		.4byte	.LASF78
 1540 0129 01       		.byte	0x1
 1541 012a 2D       		.byte	0x2d
 1542 012b 73000000 		.4byte	0x73
 1543 012f 00000000 		.4byte	.LFB63
 1544 0133 3C080000 		.4byte	.LFE63-.LFB63
 1545 0137 01       		.uleb128 0x1
 1546 0138 9C       		.byte	0x9c
 1547 0139 39050000 		.4byte	0x539
 1548 013d 0B       		.uleb128 0xb
 1549 013e 37000000 		.4byte	.LASF21
 1550 0142 01       		.byte	0x1
 1551 0143 30       		.byte	0x30
 1552 0144 73000000 		.4byte	0x73
 1553 0148 00000000 		.4byte	.LLST0
 1554 014c 0B       		.uleb128 0xb
 1555 014d B8010000 		.4byte	.LASF22
 1556 0151 01       		.byte	0x1
 1557 0152 33       		.byte	0x33
 1558 0153 73000000 		.4byte	0x73
 1559 0157 36000000 		.4byte	.LLST1
 1560 015b 0B       		.uleb128 0xb
 1561 015c 6B010000 		.4byte	.LASF23
 1562 0160 01       		.byte	0x1
 1563 0161 36       		.byte	0x36
 1564 0162 73000000 		.4byte	0x73
 1565 0166 6C000000 		.4byte	.LLST2
 1566 016a 0B       		.uleb128 0xb
 1567 016b 7B000000 		.4byte	.LASF24
 1568 016f 01       		.byte	0x1
 1569 0170 39       		.byte	0x39
 1570 0171 73000000 		.4byte	0x73
 1571 0175 B1000000 		.4byte	.LLST3
 1572 0179 0B       		.uleb128 0xb
 1573 017a 06030000 		.4byte	.LASF25
 1574 017e 01       		.byte	0x1
 1575 017f 3C       		.byte	0x3c
 1576 0180 73000000 		.4byte	0x73
 1577 0184 21010000 		.4byte	.LLST4
 1578 0188 0B       		.uleb128 0xb
 1579 0189 8D020000 		.4byte	.LASF26
 1580 018d 01       		.byte	0x1
 1581 018e 3F       		.byte	0x3f
 1582 018f 73000000 		.4byte	0x73
 1583 0193 65010000 		.4byte	.LLST5
 1584 0197 0B       		.uleb128 0xb
 1585 0198 E5010000 		.4byte	.LASF27
 1586 019c 01       		.byte	0x1
 1587 019d 40       		.byte	0x40
 1588 019e 73000000 		.4byte	0x73
 1589 01a2 84010000 		.4byte	.LLST6
 1590 01a6 0B       		.uleb128 0xb
 1591 01a7 1B010000 		.4byte	.LASF28
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 44


 1592 01ab 01       		.byte	0x1
 1593 01ac 43       		.byte	0x43
 1594 01ad 73000000 		.4byte	0x73
 1595 01b1 BA010000 		.4byte	.LLST7
 1596 01b5 0C       		.uleb128 0xc
 1597 01b6 22000000 		.4byte	.LASF29
 1598 01ba 01       		.byte	0x1
 1599 01bb 46       		.byte	0x46
 1600 01bc 73000000 		.4byte	0x73
 1601 01c0 F401     		.2byte	0x1f4
 1602 01c2 0B       		.uleb128 0xb
 1603 01c3 61020000 		.4byte	.LASF30
 1604 01c7 01       		.byte	0x1
 1605 01c8 49       		.byte	0x49
 1606 01c9 97000000 		.4byte	0x97
 1607 01cd 1B020000 		.4byte	.LLST8
 1608 01d1 0D       		.uleb128 0xd
 1609 01d2 66020000 		.4byte	.LASF31
 1610 01d6 01       		.byte	0x1
 1611 01d7 4C       		.byte	0x4c
 1612 01d8 97000000 		.4byte	0x97
 1613 01dc 70       		.sleb128 -16
 1614 01dd 0C       		.uleb128 0xc
 1615 01de A1000000 		.4byte	.LASF32
 1616 01e2 01       		.byte	0x1
 1617 01e3 4F       		.byte	0x4f
 1618 01e4 73000000 		.4byte	0x73
 1619 01e8 0852     		.2byte	0x5208
 1620 01ea 0C       		.uleb128 0xc
 1621 01eb 8E000000 		.4byte	.LASF33
 1622 01ef 01       		.byte	0x1
 1623 01f0 50       		.byte	0x50
 1624 01f1 73000000 		.4byte	0x73
 1625 01f5 5046     		.2byte	0x4650
 1626 01f7 0C       		.uleb128 0xc
 1627 01f8 2B030000 		.4byte	.LASF34
 1628 01fc 01       		.byte	0x1
 1629 01fd 51       		.byte	0x51
 1630 01fe 73000000 		.4byte	0x73
 1631 0202 4858     		.2byte	0x5848
 1632 0204 0C       		.uleb128 0xc
 1633 0205 CC030000 		.4byte	.LASF35
 1634 0209 01       		.byte	0x1
 1635 020a 52       		.byte	0x52
 1636 020b 73000000 		.4byte	0x73
 1637 020f FC53     		.2byte	0x53fc
 1638 0211 0C       		.uleb128 0xc
 1639 0212 F9030000 		.4byte	.LASF36
 1640 0216 01       		.byte	0x1
 1641 0217 54       		.byte	0x54
 1642 0218 73000000 		.4byte	0x73
 1643 021c A116     		.2byte	0x16a1
 1644 021e 0C       		.uleb128 0xc
 1645 021f E6030000 		.4byte	.LASF37
 1646 0223 01       		.byte	0x1
 1647 0224 55       		.byte	0x55
 1648 0225 73000000 		.4byte	0x73
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 45


 1649 0229 9411     		.2byte	0x1194
 1650 022b 0C       		.uleb128 0xc
 1651 022c 0D020000 		.4byte	.LASF38
 1652 0230 01       		.byte	0x1
 1653 0231 56       		.byte	0x56
 1654 0232 73000000 		.4byte	0x73
 1655 0236 AA11     		.2byte	0x11aa
 1656 0238 0C       		.uleb128 0xc
 1657 0239 53010000 		.4byte	.LASF39
 1658 023d 01       		.byte	0x1
 1659 023e 57       		.byte	0x57
 1660 023f 73000000 		.4byte	0x73
 1661 0243 9518     		.2byte	0x1895
 1662 0245 0C       		.uleb128 0xc
 1663 0246 3E000000 		.4byte	.LASF40
 1664 024a 01       		.byte	0x1
 1665 024b 59       		.byte	0x59
 1666 024c 73000000 		.4byte	0x73
 1667 0250 673B     		.2byte	0x3b67
 1668 0252 0C       		.uleb128 0xc
 1669 0253 2C000000 		.4byte	.LASF41
 1670 0257 01       		.byte	0x1
 1671 0258 5A       		.byte	0x5a
 1672 0259 73000000 		.4byte	0x73
 1673 025d BC34     		.2byte	0x34bc
 1674 025f 0C       		.uleb128 0xc
 1675 0260 DE020000 		.4byte	.LASF42
 1676 0264 01       		.byte	0x1
 1677 0265 5B       		.byte	0x5b
 1678 0266 73000000 		.4byte	0x73
 1679 026a 9E46     		.2byte	0x469e
 1680 026c 0C       		.uleb128 0xc
 1681 026d FB020000 		.4byte	.LASF43
 1682 0271 01       		.byte	0x1
 1683 0272 5C       		.byte	0x5c
 1684 0273 73000000 		.4byte	0x73
 1685 0277 673B     		.2byte	0x3b67
 1686 0279 0B       		.uleb128 0xb
 1687 027a 50000000 		.4byte	.LASF44
 1688 027e 01       		.byte	0x1
 1689 027f 5E       		.byte	0x5e
 1690 0280 AF000000 		.4byte	0xaf
 1691 0284 5D020000 		.4byte	.LLST9
 1692 0288 0B       		.uleb128 0xb
 1693 0289 A6020000 		.4byte	.LASF45
 1694 028d 01       		.byte	0x1
 1695 028e 5F       		.byte	0x5f
 1696 028f AF000000 		.4byte	0xaf
 1697 0293 BA020000 		.4byte	.LLST10
 1698 0297 0B       		.uleb128 0xb
 1699 0298 99010000 		.4byte	.LASF46
 1700 029c 01       		.byte	0x1
 1701 029d 60       		.byte	0x60
 1702 029e AF000000 		.4byte	0xaf
 1703 02a2 F4020000 		.4byte	.LLST11
 1704 02a6 0B       		.uleb128 0xb
 1705 02a7 85040000 		.4byte	.LASF47
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 46


 1706 02ab 01       		.byte	0x1
 1707 02ac 61       		.byte	0x61
 1708 02ad AF000000 		.4byte	0xaf
 1709 02b1 4E030000 		.4byte	.LLST12
 1710 02b5 0B       		.uleb128 0xb
 1711 02b6 B4000000 		.4byte	.LASF48
 1712 02ba 01       		.byte	0x1
 1713 02bb 63       		.byte	0x63
 1714 02bc AF000000 		.4byte	0xaf
 1715 02c0 7C030000 		.4byte	.LLST13
 1716 02c4 0B       		.uleb128 0xb
 1717 02c5 7F010000 		.4byte	.LASF49
 1718 02c9 01       		.byte	0x1
 1719 02ca 64       		.byte	0x64
 1720 02cb AF000000 		.4byte	0xaf
 1721 02cf AA030000 		.4byte	.LLST14
 1722 02d3 0E       		.uleb128 0xe
 1723 02d4 72656600 		.ascii	"ref\000"
 1724 02d8 01       		.byte	0x1
 1725 02d9 67       		.byte	0x67
 1726 02da E4000000 		.4byte	0xe4
 1727 02de 02       		.uleb128 0x2
 1728 02df 91       		.byte	0x91
 1729 02e0 50       		.sleb128 -48
 1730 02e1 0E       		.uleb128 0xe
 1731 02e2 64696700 		.ascii	"dig\000"
 1732 02e6 01       		.byte	0x1
 1733 02e7 68       		.byte	0x68
 1734 02e8 E4000000 		.4byte	0xe4
 1735 02ec 02       		.uleb128 0x2
 1736 02ed 91       		.byte	0x91
 1737 02ee 48       		.sleb128 -56
 1738 02ef 0B       		.uleb128 0xb
 1739 02f0 78010000 		.4byte	.LASF50
 1740 02f4 01       		.byte	0x1
 1741 02f5 7A       		.byte	0x7a
 1742 02f6 97000000 		.4byte	0x97
 1743 02fa D8030000 		.4byte	.LLST15
 1744 02fe 0F       		.uleb128 0xf
 1745 02ff 0C000000 		.4byte	.LVL1
 1746 0303 55060000 		.4byte	0x655
 1747 0307 0F       		.uleb128 0xf
 1748 0308 10000000 		.4byte	.LVL2
 1749 030c 5C060000 		.4byte	0x65c
 1750 0310 0F       		.uleb128 0xf
 1751 0311 14000000 		.4byte	.LVL3
 1752 0315 63060000 		.4byte	0x663
 1753 0319 0F       		.uleb128 0xf
 1754 031a 18000000 		.4byte	.LVL4
 1755 031e 70060000 		.4byte	0x670
 1756 0322 10       		.uleb128 0x10
 1757 0323 20000000 		.4byte	.LVL5
 1758 0327 7D060000 		.4byte	0x67d
 1759 032b 3A030000 		.4byte	0x33a
 1760 032f 11       		.uleb128 0x11
 1761 0330 01       		.uleb128 0x1
 1762 0331 51       		.byte	0x51
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 47


 1763 0332 01       		.uleb128 0x1
 1764 0333 30       		.byte	0x30
 1765 0334 11       		.uleb128 0x11
 1766 0335 01       		.uleb128 0x1
 1767 0336 50       		.byte	0x50
 1768 0337 01       		.uleb128 0x1
 1769 0338 30       		.byte	0x30
 1770 0339 00       		.byte	0
 1771 033a 0F       		.uleb128 0xf
 1772 033b 26000000 		.4byte	.LVL6
 1773 033f 93060000 		.4byte	0x693
 1774 0343 10       		.uleb128 0x10
 1775 0344 3A000000 		.4byte	.LVL7
 1776 0348 A4060000 		.4byte	0x6a4
 1777 034c 6D030000 		.4byte	0x36d
 1778 0350 11       		.uleb128 0x11
 1779 0351 01       		.uleb128 0x1
 1780 0352 53       		.byte	0x53
 1781 0353 03       		.uleb128 0x3
 1782 0354 0A       		.byte	0xa
 1783 0355 FC53     		.2byte	0x53fc
 1784 0357 11       		.uleb128 0x11
 1785 0358 01       		.uleb128 0x1
 1786 0359 52       		.byte	0x52
 1787 035a 03       		.uleb128 0x3
 1788 035b 0A       		.byte	0xa
 1789 035c 4858     		.2byte	0x5848
 1790 035e 11       		.uleb128 0x11
 1791 035f 01       		.uleb128 0x1
 1792 0360 51       		.byte	0x51
 1793 0361 03       		.uleb128 0x3
 1794 0362 0A       		.byte	0xa
 1795 0363 5046     		.2byte	0x4650
 1796 0365 11       		.uleb128 0x11
 1797 0366 01       		.uleb128 0x1
 1798 0367 50       		.byte	0x50
 1799 0368 03       		.uleb128 0x3
 1800 0369 0A       		.byte	0xa
 1801 036a 0852     		.2byte	0x5208
 1802 036c 00       		.byte	0
 1803 036d 0F       		.uleb128 0xf
 1804 036e 3E000000 		.4byte	.LVL8
 1805 0372 C4060000 		.4byte	0x6c4
 1806 0376 10       		.uleb128 0x10
 1807 0377 44000000 		.4byte	.LVL9
 1808 037b CB060000 		.4byte	0x6cb
 1809 037f 89030000 		.4byte	0x389
 1810 0383 11       		.uleb128 0x11
 1811 0384 01       		.uleb128 0x1
 1812 0385 50       		.byte	0x50
 1813 0386 01       		.uleb128 0x1
 1814 0387 31       		.byte	0x31
 1815 0388 00       		.byte	0
 1816 0389 10       		.uleb128 0x10
 1817 038a 4A000000 		.4byte	.LVL10
 1818 038e DC060000 		.4byte	0x6dc
 1819 0392 9C030000 		.4byte	0x39c
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 48


 1820 0396 11       		.uleb128 0x11
 1821 0397 01       		.uleb128 0x1
 1822 0398 50       		.byte	0x50
 1823 0399 01       		.uleb128 0x1
 1824 039a 30       		.byte	0x30
 1825 039b 00       		.byte	0
 1826 039c 0F       		.uleb128 0xf
 1827 039d 52000000 		.4byte	.LVL12
 1828 03a1 ED060000 		.4byte	0x6ed
 1829 03a5 10       		.uleb128 0x10
 1830 03a6 5A000000 		.4byte	.LVL15
 1831 03aa F8060000 		.4byte	0x6f8
 1832 03ae B8030000 		.4byte	0x3b8
 1833 03b2 11       		.uleb128 0x11
 1834 03b3 01       		.uleb128 0x1
 1835 03b4 50       		.byte	0x50
 1836 03b5 01       		.uleb128 0x1
 1837 03b6 3A       		.byte	0x3a
 1838 03b7 00       		.byte	0
 1839 03b8 10       		.uleb128 0x10
 1840 03b9 66000000 		.4byte	.LVL17
 1841 03bd 09070000 		.4byte	0x709
 1842 03c1 CC030000 		.4byte	0x3cc
 1843 03c5 11       		.uleb128 0x11
 1844 03c6 01       		.uleb128 0x1
 1845 03c7 50       		.byte	0x50
 1846 03c8 02       		.uleb128 0x2
 1847 03c9 09       		.byte	0x9
 1848 03ca F0       		.byte	0xf0
 1849 03cb 00       		.byte	0
 1850 03cc 10       		.uleb128 0x10
 1851 03cd 7C000000 		.4byte	.LVL20
 1852 03d1 1A070000 		.4byte	0x71a
 1853 03d5 E0030000 		.4byte	0x3e0
 1854 03d9 11       		.uleb128 0x11
 1855 03da 01       		.uleb128 0x1
 1856 03db 50       		.byte	0x50
 1857 03dc 02       		.uleb128 0x2
 1858 03dd 91       		.byte	0x91
 1859 03de 50       		.sleb128 -48
 1860 03df 00       		.byte	0
 1861 03e0 10       		.uleb128 0x10
 1862 03e1 82000000 		.4byte	.LVL21
 1863 03e5 31070000 		.4byte	0x731
 1864 03e9 F4030000 		.4byte	0x3f4
 1865 03ed 11       		.uleb128 0x11
 1866 03ee 01       		.uleb128 0x1
 1867 03ef 50       		.byte	0x50
 1868 03f0 02       		.uleb128 0x2
 1869 03f1 91       		.byte	0x91
 1870 03f2 48       		.sleb128 -56
 1871 03f3 00       		.byte	0
 1872 03f4 10       		.uleb128 0x10
 1873 03f5 9E000000 		.4byte	.LVL23
 1874 03f9 1A070000 		.4byte	0x71a
 1875 03fd 08040000 		.4byte	0x408
 1876 0401 11       		.uleb128 0x11
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 49


 1877 0402 01       		.uleb128 0x1
 1878 0403 50       		.byte	0x50
 1879 0404 02       		.uleb128 0x2
 1880 0405 91       		.byte	0x91
 1881 0406 50       		.sleb128 -48
 1882 0407 00       		.byte	0
 1883 0408 10       		.uleb128 0x10
 1884 0409 AE000000 		.4byte	.LVL27
 1885 040d F8060000 		.4byte	0x6f8
 1886 0411 1B040000 		.4byte	0x41b
 1887 0415 11       		.uleb128 0x11
 1888 0416 01       		.uleb128 0x1
 1889 0417 50       		.byte	0x50
 1890 0418 01       		.uleb128 0x1
 1891 0419 31       		.byte	0x31
 1892 041a 00       		.byte	0
 1893 041b 10       		.uleb128 0x10
 1894 041c BC000000 		.4byte	.LVL30
 1895 0420 1A070000 		.4byte	0x71a
 1896 0424 2F040000 		.4byte	0x42f
 1897 0428 11       		.uleb128 0x11
 1898 0429 01       		.uleb128 0x1
 1899 042a 50       		.byte	0x50
 1900 042b 02       		.uleb128 0x2
 1901 042c 91       		.byte	0x91
 1902 042d 50       		.sleb128 -48
 1903 042e 00       		.byte	0
 1904 042f 10       		.uleb128 0x10
 1905 0430 C2000000 		.4byte	.LVL31
 1906 0434 31070000 		.4byte	0x731
 1907 0438 43040000 		.4byte	0x443
 1908 043c 11       		.uleb128 0x11
 1909 043d 01       		.uleb128 0x1
 1910 043e 50       		.byte	0x50
 1911 043f 02       		.uleb128 0x2
 1912 0440 91       		.byte	0x91
 1913 0441 48       		.sleb128 -56
 1914 0442 00       		.byte	0
 1915 0443 10       		.uleb128 0x10
 1916 0444 EE030000 		.4byte	.LVL146
 1917 0448 42070000 		.4byte	0x742
 1918 044c 57040000 		.4byte	0x457
 1919 0450 11       		.uleb128 0x11
 1920 0451 01       		.uleb128 0x1
 1921 0452 50       		.byte	0x50
 1922 0453 02       		.uleb128 0x2
 1923 0454 78       		.byte	0x78
 1924 0455 00       		.sleb128 0
 1925 0456 00       		.byte	0
 1926 0457 10       		.uleb128 0x10
 1927 0458 F4030000 		.4byte	.LVL147
 1928 045c F8060000 		.4byte	0x6f8
 1929 0460 6A040000 		.4byte	0x46a
 1930 0464 11       		.uleb128 0x11
 1931 0465 01       		.uleb128 0x1
 1932 0466 50       		.byte	0x50
 1933 0467 01       		.uleb128 0x1
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 50


 1934 0468 31       		.byte	0x31
 1935 0469 00       		.byte	0
 1936 046a 10       		.uleb128 0x10
 1937 046b 04040000 		.4byte	.LVL149
 1938 046f 09070000 		.4byte	0x709
 1939 0473 7E040000 		.4byte	0x47e
 1940 0477 11       		.uleb128 0x11
 1941 0478 01       		.uleb128 0x1
 1942 0479 50       		.byte	0x50
 1943 047a 02       		.uleb128 0x2
 1944 047b 09       		.byte	0x9
 1945 047c F0       		.byte	0xf0
 1946 047d 00       		.byte	0
 1947 047e 10       		.uleb128 0x10
 1948 047f 22040000 		.4byte	.LVL152
 1949 0483 1A070000 		.4byte	0x71a
 1950 0487 92040000 		.4byte	0x492
 1951 048b 11       		.uleb128 0x11
 1952 048c 01       		.uleb128 0x1
 1953 048d 50       		.byte	0x50
 1954 048e 02       		.uleb128 0x2
 1955 048f 91       		.byte	0x91
 1956 0490 50       		.sleb128 -48
 1957 0491 00       		.byte	0
 1958 0492 10       		.uleb128 0x10
 1959 0493 32040000 		.4byte	.LVL156
 1960 0497 F8060000 		.4byte	0x6f8
 1961 049b A5040000 		.4byte	0x4a5
 1962 049f 11       		.uleb128 0x11
 1963 04a0 01       		.uleb128 0x1
 1964 04a1 50       		.byte	0x50
 1965 04a2 01       		.uleb128 0x1
 1966 04a3 31       		.byte	0x31
 1967 04a4 00       		.byte	0
 1968 04a5 10       		.uleb128 0x10
 1969 04a6 40040000 		.4byte	.LVL159
 1970 04aa 1A070000 		.4byte	0x71a
 1971 04ae B9040000 		.4byte	0x4b9
 1972 04b2 11       		.uleb128 0x11
 1973 04b3 01       		.uleb128 0x1
 1974 04b4 50       		.byte	0x50
 1975 04b5 02       		.uleb128 0x2
 1976 04b6 91       		.byte	0x91
 1977 04b7 50       		.sleb128 -48
 1978 04b8 00       		.byte	0
 1979 04b9 10       		.uleb128 0x10
 1980 04ba 46040000 		.4byte	.LVL160
 1981 04be 31070000 		.4byte	0x731
 1982 04c2 CD040000 		.4byte	0x4cd
 1983 04c6 11       		.uleb128 0x11
 1984 04c7 01       		.uleb128 0x1
 1985 04c8 50       		.byte	0x50
 1986 04c9 02       		.uleb128 0x2
 1987 04ca 91       		.byte	0x91
 1988 04cb 48       		.sleb128 -56
 1989 04cc 00       		.byte	0
 1990 04cd 10       		.uleb128 0x10
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 51


 1991 04ce 86070000 		.4byte	.LVL275
 1992 04d2 53070000 		.4byte	0x753
 1993 04d6 E1040000 		.4byte	0x4e1
 1994 04da 11       		.uleb128 0x11
 1995 04db 01       		.uleb128 0x1
 1996 04dc 50       		.byte	0x50
 1997 04dd 02       		.uleb128 0x2
 1998 04de 78       		.byte	0x78
 1999 04df 00       		.sleb128 0
 2000 04e0 00       		.byte	0
 2001 04e1 10       		.uleb128 0x10
 2002 04e2 8C070000 		.4byte	.LVL276
 2003 04e6 F8060000 		.4byte	0x6f8
 2004 04ea F4040000 		.4byte	0x4f4
 2005 04ee 11       		.uleb128 0x11
 2006 04ef 01       		.uleb128 0x1
 2007 04f0 50       		.byte	0x50
 2008 04f1 01       		.uleb128 0x1
 2009 04f2 31       		.byte	0x31
 2010 04f3 00       		.byte	0
 2011 04f4 10       		.uleb128 0x10
 2012 04f5 9C070000 		.4byte	.LVL278
 2013 04f9 09070000 		.4byte	0x709
 2014 04fd 08050000 		.4byte	0x508
 2015 0501 11       		.uleb128 0x11
 2016 0502 01       		.uleb128 0x1
 2017 0503 50       		.byte	0x50
 2018 0504 02       		.uleb128 0x2
 2019 0505 09       		.byte	0x9
 2020 0506 F0       		.byte	0xf0
 2021 0507 00       		.byte	0
 2022 0508 10       		.uleb128 0x10
 2023 0509 D4070000 		.4byte	.LVL282
 2024 050d 7D060000 		.4byte	0x67d
 2025 0511 20050000 		.4byte	0x520
 2026 0515 11       		.uleb128 0x11
 2027 0516 01       		.uleb128 0x1
 2028 0517 51       		.byte	0x51
 2029 0518 01       		.uleb128 0x1
 2030 0519 30       		.byte	0x30
 2031 051a 11       		.uleb128 0x11
 2032 051b 01       		.uleb128 0x1
 2033 051c 50       		.byte	0x50
 2034 051d 01       		.uleb128 0x1
 2035 051e 30       		.byte	0x30
 2036 051f 00       		.byte	0
 2037 0520 0F       		.uleb128 0xf
 2038 0521 E6070000 		.4byte	.LVL285
 2039 0525 63060000 		.4byte	0x663
 2040 0529 12       		.uleb128 0x12
 2041 052a F0070000 		.4byte	.LVL287
 2042 052e F8060000 		.4byte	0x6f8
 2043 0532 11       		.uleb128 0x11
 2044 0533 01       		.uleb128 0x1
 2045 0534 50       		.byte	0x50
 2046 0535 01       		.uleb128 0x1
 2047 0536 31       		.byte	0x31
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 52


 2048 0537 00       		.byte	0
 2049 0538 00       		.byte	0
 2050 0539 13       		.uleb128 0x13
 2051 053a 49000000 		.4byte	.LASF52
 2052 053e 01       		.byte	0x1
 2053 053f 2303     		.2byte	0x323
 2054 0541 73000000 		.4byte	0x73
 2055 0545 00000000 		.4byte	.LFB64
 2056 0549 2A000000 		.4byte	.LFE64-.LFB64
 2057 054d 01       		.uleb128 0x1
 2058 054e 9C       		.byte	0x9c
 2059 054f AE050000 		.4byte	0x5ae
 2060 0553 14       		.uleb128 0x14
 2061 0554 76000000 		.4byte	.LASF51
 2062 0558 01       		.byte	0x1
 2063 0559 2303     		.2byte	0x323
 2064 055b 73000000 		.4byte	0x73
 2065 055f EB030000 		.4byte	.LLST16
 2066 0563 15       		.uleb128 0x15
 2067 0564 70747200 		.ascii	"ptr\000"
 2068 0568 01       		.byte	0x1
 2069 0569 2303     		.2byte	0x323
 2070 056b DE000000 		.4byte	0xde
 2071 056f 0C040000 		.4byte	.LLST17
 2072 0573 15       		.uleb128 0x15
 2073 0574 6C656E00 		.ascii	"len\000"
 2074 0578 01       		.byte	0x1
 2075 0579 2303     		.2byte	0x323
 2076 057b 73000000 		.4byte	0x73
 2077 057f 40040000 		.4byte	.LLST18
 2078 0583 16       		.uleb128 0x16
 2079 0584 6E00     		.ascii	"n\000"
 2080 0586 01       		.byte	0x1
 2081 0587 2603     		.2byte	0x326
 2082 0589 73000000 		.4byte	0x73
 2083 058d 5E040000 		.4byte	.LLST19
 2084 0591 10       		.uleb128 0x10
 2085 0592 16000000 		.4byte	.LVL291
 2086 0596 64070000 		.4byte	0x764
 2087 059a A4050000 		.4byte	0x5a4
 2088 059e 11       		.uleb128 0x11
 2089 059f 01       		.uleb128 0x1
 2090 05a0 50       		.byte	0x50
 2091 05a1 01       		.uleb128 0x1
 2092 05a2 3D       		.byte	0x3d
 2093 05a3 00       		.byte	0
 2094 05a4 0F       		.uleb128 0xf
 2095 05a5 1E000000 		.4byte	.LVL293
 2096 05a9 64070000 		.4byte	0x764
 2097 05ad 00       		.byte	0
 2098 05ae 13       		.uleb128 0x13
 2099 05af 07020000 		.4byte	.LASF53
 2100 05b3 01       		.byte	0x1
 2101 05b4 2E03     		.2byte	0x32e
 2102 05b6 73000000 		.4byte	0x73
 2103 05ba 00000000 		.4byte	.LFB65
 2104 05be 38000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 53


 2105 05c2 01       		.uleb128 0x1
 2106 05c3 9C       		.byte	0x9c
 2107 05c4 44060000 		.4byte	0x644
 2108 05c8 14       		.uleb128 0x14
 2109 05c9 76000000 		.4byte	.LASF51
 2110 05cd 01       		.byte	0x1
 2111 05ce 2E03     		.2byte	0x32e
 2112 05d0 73000000 		.4byte	0x73
 2113 05d4 7D040000 		.4byte	.LLST20
 2114 05d8 15       		.uleb128 0x15
 2115 05d9 70747200 		.ascii	"ptr\000"
 2116 05dd 01       		.byte	0x1
 2117 05de 2E03     		.2byte	0x32e
 2118 05e0 DE000000 		.4byte	0xde
 2119 05e4 9E040000 		.4byte	.LLST21
 2120 05e8 14       		.uleb128 0x14
 2121 05e9 1B030000 		.4byte	.LASF54
 2122 05ed 01       		.byte	0x1
 2123 05ee 2E03     		.2byte	0x32e
 2124 05f0 73000000 		.4byte	0x73
 2125 05f4 D2040000 		.4byte	.LLST22
 2126 05f8 16       		.uleb128 0x16
 2127 05f9 63687300 		.ascii	"chs\000"
 2128 05fd 01       		.byte	0x1
 2129 05fe 3003     		.2byte	0x330
 2130 0600 73000000 		.4byte	0x73
 2131 0604 F0040000 		.4byte	.LLST23
 2132 0608 16       		.uleb128 0x16
 2133 0609 636800   		.ascii	"ch\000"
 2134 060c 01       		.byte	0x1
 2135 060d 3103     		.2byte	0x331
 2136 060f BD000000 		.4byte	0xbd
 2137 0613 0F050000 		.4byte	.LLST24
 2138 0617 0F       		.uleb128 0xf
 2139 0618 0E000000 		.4byte	.LVL299
 2140 061c 75070000 		.4byte	0x775
 2141 0620 10       		.uleb128 0x10
 2142 0621 16000000 		.4byte	.LVL300
 2143 0625 64070000 		.4byte	0x764
 2144 0629 34060000 		.4byte	0x634
 2145 062d 11       		.uleb128 0x11
 2146 062e 01       		.uleb128 0x1
 2147 062f 50       		.byte	0x50
 2148 0630 02       		.uleb128 0x2
 2149 0631 75       		.byte	0x75
 2150 0632 00       		.sleb128 0
 2151 0633 00       		.byte	0
 2152 0634 12       		.uleb128 0x12
 2153 0635 22000000 		.4byte	.LVL303
 2154 0639 64070000 		.4byte	0x764
 2155 063d 11       		.uleb128 0x11
 2156 063e 01       		.uleb128 0x1
 2157 063f 50       		.byte	0x50
 2158 0640 01       		.uleb128 0x1
 2159 0641 3A       		.byte	0x3a
 2160 0642 00       		.byte	0
 2161 0643 00       		.byte	0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 54


 2162 0644 17       		.uleb128 0x17
 2163 0645 0C040000 		.4byte	.LASF79
 2164 0649 0D       		.byte	0xd
 2165 064a 9606     		.2byte	0x696
 2166 064c 50060000 		.4byte	0x650
 2167 0650 18       		.uleb128 0x18
 2168 0651 8C000000 		.4byte	0x8c
 2169 0655 19       		.uleb128 0x19
 2170 0656 F9000000 		.4byte	.LASF55
 2171 065a 06       		.byte	0x6
 2172 065b 54       		.byte	0x54
 2173 065c 19       		.uleb128 0x19
 2174 065d C9010000 		.4byte	.LASF56
 2175 0661 07       		.byte	0x7
 2176 0662 34       		.byte	0x34
 2177 0663 1A       		.uleb128 0x1a
 2178 0664 D7000000 		.4byte	.LASF57
 2179 0668 01       		.byte	0x1
 2180 0669 28       		.byte	0x28
 2181 066a 70060000 		.4byte	0x670
 2182 066e 1B       		.uleb128 0x1b
 2183 066f 00       		.byte	0
 2184 0670 1A       		.uleb128 0x1a
 2185 0671 0F030000 		.4byte	.LASF58
 2186 0675 01       		.byte	0x1
 2187 0676 23       		.byte	0x23
 2188 0677 7D060000 		.4byte	0x67d
 2189 067b 1B       		.uleb128 0x1b
 2190 067c 00       		.byte	0
 2191 067d 1C       		.uleb128 0x1c
 2192 067e 7F020000 		.4byte	.LASF59
 2193 0682 01       		.byte	0x1
 2194 0683 24       		.byte	0x24
 2195 0684 93060000 		.4byte	0x693
 2196 0688 1D       		.uleb128 0x1d
 2197 0689 97000000 		.4byte	0x97
 2198 068d 1D       		.uleb128 0x1d
 2199 068e A3000000 		.4byte	0xa3
 2200 0692 00       		.byte	0
 2201 0693 1C       		.uleb128 0x1c
 2202 0694 C4000000 		.4byte	.LASF60
 2203 0698 08       		.byte	0x8
 2204 0699 18       		.byte	0x18
 2205 069a A4060000 		.4byte	0x6a4
 2206 069e 1D       		.uleb128 0x1d
 2207 069f C4000000 		.4byte	0xc4
 2208 06a3 00       		.byte	0
 2209 06a4 1C       		.uleb128 0x1c
 2210 06a5 ED010000 		.4byte	.LASF61
 2211 06a9 01       		.byte	0x1
 2212 06aa 27       		.byte	0x27
 2213 06ab C4060000 		.4byte	0x6c4
 2214 06af 1D       		.uleb128 0x1d
 2215 06b0 81000000 		.4byte	0x81
 2216 06b4 1D       		.uleb128 0x1d
 2217 06b5 81000000 		.4byte	0x81
 2218 06b9 1D       		.uleb128 0x1d
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 55


 2219 06ba 81000000 		.4byte	0x81
 2220 06be 1D       		.uleb128 0x1d
 2221 06bf 81000000 		.4byte	0x81
 2222 06c3 00       		.byte	0
 2223 06c4 19       		.uleb128 0x19
 2224 06c5 E7000000 		.4byte	.LASF62
 2225 06c9 05       		.byte	0x5
 2226 06ca 1A       		.byte	0x1a
 2227 06cb 1C       		.uleb128 0x1c
 2228 06cc 96040000 		.4byte	.LASF63
 2229 06d0 09       		.byte	0x9
 2230 06d1 26       		.byte	0x26
 2231 06d2 DC060000 		.4byte	0x6dc
 2232 06d6 1D       		.uleb128 0x1d
 2233 06d7 97000000 		.4byte	0x97
 2234 06db 00       		.byte	0
 2235 06dc 1C       		.uleb128 0x1c
 2236 06dd B6020000 		.4byte	.LASF64
 2237 06e1 0A       		.byte	0xa
 2238 06e2 26       		.byte	0x26
 2239 06e3 ED060000 		.4byte	0x6ed
 2240 06e7 1D       		.uleb128 0x1d
 2241 06e8 97000000 		.4byte	0x97
 2242 06ec 00       		.byte	0
 2243 06ed 1E       		.uleb128 0x1e
 2244 06ee C7020000 		.4byte	.LASF72
 2245 06f2 0C       		.byte	0xc
 2246 06f3 29       		.byte	0x29
 2247 06f4 97000000 		.4byte	0x97
 2248 06f8 1C       		.uleb128 0x1c
 2249 06f9 6C040000 		.4byte	.LASF65
 2250 06fd 0B       		.byte	0xb
 2251 06fe 76       		.byte	0x76
 2252 06ff 09070000 		.4byte	0x709
 2253 0703 1D       		.uleb128 0x1d
 2254 0704 A3000000 		.4byte	0xa3
 2255 0708 00       		.byte	0
 2256 0709 1C       		.uleb128 0x1c
 2257 070a 8A010000 		.4byte	.LASF66
 2258 070e 01       		.byte	0x1
 2259 070f 25       		.byte	0x25
 2260 0710 1A070000 		.4byte	0x71a
 2261 0714 1D       		.uleb128 0x1d
 2262 0715 97000000 		.4byte	0x97
 2263 0719 00       		.byte	0
 2264 071a 1C       		.uleb128 0x1c
 2265 071b 74040000 		.4byte	.LASF67
 2266 071f 05       		.byte	0x5
 2267 0720 1B       		.byte	0x1b
 2268 0721 2B070000 		.4byte	0x72b
 2269 0725 1D       		.uleb128 0x1d
 2270 0726 2B070000 		.4byte	0x72b
 2271 072a 00       		.byte	0
 2272 072b 06       		.uleb128 0x6
 2273 072c 04       		.byte	0x4
 2274 072d E4000000 		.4byte	0xe4
 2275 0731 1C       		.uleb128 0x1c
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 56


 2276 0732 3F010000 		.4byte	.LASF68
 2277 0736 05       		.byte	0x5
 2278 0737 1C       		.byte	0x1c
 2279 0738 42070000 		.4byte	0x742
 2280 073c 1D       		.uleb128 0x1d
 2281 073d 2B070000 		.4byte	0x72b
 2282 0741 00       		.byte	0
 2283 0742 1C       		.uleb128 0x1c
 2284 0743 60000000 		.4byte	.LASF69
 2285 0747 01       		.byte	0x1
 2286 0748 29       		.byte	0x29
 2287 0749 53070000 		.4byte	0x753
 2288 074d 1D       		.uleb128 0x1d
 2289 074e 97000000 		.4byte	0x97
 2290 0752 00       		.byte	0
 2291 0753 1C       		.uleb128 0x1c
 2292 0754 DB010000 		.4byte	.LASF70
 2293 0758 01       		.byte	0x1
 2294 0759 2A       		.byte	0x2a
 2295 075a 64070000 		.4byte	0x764
 2296 075e 1D       		.uleb128 0x1d
 2297 075f 97000000 		.4byte	0x97
 2298 0763 00       		.byte	0
 2299 0764 1C       		.uleb128 0x1c
 2300 0765 06010000 		.4byte	.LASF71
 2301 0769 06       		.byte	0x6
 2302 076a 8A       		.byte	0x8a
 2303 076b 75070000 		.4byte	0x775
 2304 076f 1D       		.uleb128 0x1d
 2305 0770 97000000 		.4byte	0x97
 2306 0774 00       		.byte	0
 2307 0775 1E       		.uleb128 0x1e
 2308 0776 00000000 		.4byte	.LASF73
 2309 077a 06       		.byte	0x6
 2310 077b 71       		.byte	0x71
 2311 077c 97000000 		.4byte	0x97
 2312 0780 00       		.byte	0
 2313              		.section	.debug_abbrev,"",%progbits
 2314              	.Ldebug_abbrev0:
 2315 0000 01       		.uleb128 0x1
 2316 0001 11       		.uleb128 0x11
 2317 0002 01       		.byte	0x1
 2318 0003 25       		.uleb128 0x25
 2319 0004 0E       		.uleb128 0xe
 2320 0005 13       		.uleb128 0x13
 2321 0006 0B       		.uleb128 0xb
 2322 0007 03       		.uleb128 0x3
 2323 0008 0E       		.uleb128 0xe
 2324 0009 1B       		.uleb128 0x1b
 2325 000a 0E       		.uleb128 0xe
 2326 000b 55       		.uleb128 0x55
 2327 000c 17       		.uleb128 0x17
 2328 000d 11       		.uleb128 0x11
 2329 000e 01       		.uleb128 0x1
 2330 000f 10       		.uleb128 0x10
 2331 0010 17       		.uleb128 0x17
 2332 0011 00       		.byte	0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 57


 2333 0012 00       		.byte	0
 2334 0013 02       		.uleb128 0x2
 2335 0014 24       		.uleb128 0x24
 2336 0015 00       		.byte	0
 2337 0016 0B       		.uleb128 0xb
 2338 0017 0B       		.uleb128 0xb
 2339 0018 3E       		.uleb128 0x3e
 2340 0019 0B       		.uleb128 0xb
 2341 001a 03       		.uleb128 0x3
 2342 001b 0E       		.uleb128 0xe
 2343 001c 00       		.byte	0
 2344 001d 00       		.byte	0
 2345 001e 03       		.uleb128 0x3
 2346 001f 16       		.uleb128 0x16
 2347 0020 00       		.byte	0
 2348 0021 03       		.uleb128 0x3
 2349 0022 0E       		.uleb128 0xe
 2350 0023 3A       		.uleb128 0x3a
 2351 0024 0B       		.uleb128 0xb
 2352 0025 3B       		.uleb128 0x3b
 2353 0026 0B       		.uleb128 0xb
 2354 0027 49       		.uleb128 0x49
 2355 0028 13       		.uleb128 0x13
 2356 0029 00       		.byte	0
 2357 002a 00       		.byte	0
 2358 002b 04       		.uleb128 0x4
 2359 002c 24       		.uleb128 0x24
 2360 002d 00       		.byte	0
 2361 002e 0B       		.uleb128 0xb
 2362 002f 0B       		.uleb128 0xb
 2363 0030 3E       		.uleb128 0x3e
 2364 0031 0B       		.uleb128 0xb
 2365 0032 03       		.uleb128 0x3
 2366 0033 08       		.uleb128 0x8
 2367 0034 00       		.byte	0
 2368 0035 00       		.byte	0
 2369 0036 05       		.uleb128 0x5
 2370 0037 16       		.uleb128 0x16
 2371 0038 00       		.byte	0
 2372 0039 03       		.uleb128 0x3
 2373 003a 0E       		.uleb128 0xe
 2374 003b 3A       		.uleb128 0x3a
 2375 003c 0B       		.uleb128 0xb
 2376 003d 3B       		.uleb128 0x3b
 2377 003e 05       		.uleb128 0x5
 2378 003f 49       		.uleb128 0x49
 2379 0040 13       		.uleb128 0x13
 2380 0041 00       		.byte	0
 2381 0042 00       		.byte	0
 2382 0043 06       		.uleb128 0x6
 2383 0044 0F       		.uleb128 0xf
 2384 0045 00       		.byte	0
 2385 0046 0B       		.uleb128 0xb
 2386 0047 0B       		.uleb128 0xb
 2387 0048 49       		.uleb128 0x49
 2388 0049 13       		.uleb128 0x13
 2389 004a 00       		.byte	0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 58


 2390 004b 00       		.byte	0
 2391 004c 07       		.uleb128 0x7
 2392 004d 15       		.uleb128 0x15
 2393 004e 00       		.byte	0
 2394 004f 27       		.uleb128 0x27
 2395 0050 19       		.uleb128 0x19
 2396 0051 00       		.byte	0
 2397 0052 00       		.byte	0
 2398 0053 08       		.uleb128 0x8
 2399 0054 13       		.uleb128 0x13
 2400 0055 01       		.byte	0x1
 2401 0056 03       		.uleb128 0x3
 2402 0057 0E       		.uleb128 0xe
 2403 0058 0B       		.uleb128 0xb
 2404 0059 0B       		.uleb128 0xb
 2405 005a 3A       		.uleb128 0x3a
 2406 005b 0B       		.uleb128 0xb
 2407 005c 3B       		.uleb128 0x3b
 2408 005d 0B       		.uleb128 0xb
 2409 005e 01       		.uleb128 0x1
 2410 005f 13       		.uleb128 0x13
 2411 0060 00       		.byte	0
 2412 0061 00       		.byte	0
 2413 0062 09       		.uleb128 0x9
 2414 0063 0D       		.uleb128 0xd
 2415 0064 00       		.byte	0
 2416 0065 03       		.uleb128 0x3
 2417 0066 08       		.uleb128 0x8
 2418 0067 3A       		.uleb128 0x3a
 2419 0068 0B       		.uleb128 0xb
 2420 0069 3B       		.uleb128 0x3b
 2421 006a 0B       		.uleb128 0xb
 2422 006b 49       		.uleb128 0x49
 2423 006c 13       		.uleb128 0x13
 2424 006d 38       		.uleb128 0x38
 2425 006e 0B       		.uleb128 0xb
 2426 006f 00       		.byte	0
 2427 0070 00       		.byte	0
 2428 0071 0A       		.uleb128 0xa
 2429 0072 2E       		.uleb128 0x2e
 2430 0073 01       		.byte	0x1
 2431 0074 3F       		.uleb128 0x3f
 2432 0075 19       		.uleb128 0x19
 2433 0076 03       		.uleb128 0x3
 2434 0077 0E       		.uleb128 0xe
 2435 0078 3A       		.uleb128 0x3a
 2436 0079 0B       		.uleb128 0xb
 2437 007a 3B       		.uleb128 0x3b
 2438 007b 0B       		.uleb128 0xb
 2439 007c 49       		.uleb128 0x49
 2440 007d 13       		.uleb128 0x13
 2441 007e 11       		.uleb128 0x11
 2442 007f 01       		.uleb128 0x1
 2443 0080 12       		.uleb128 0x12
 2444 0081 06       		.uleb128 0x6
 2445 0082 40       		.uleb128 0x40
 2446 0083 18       		.uleb128 0x18
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 59


 2447 0084 9642     		.uleb128 0x2116
 2448 0086 19       		.uleb128 0x19
 2449 0087 01       		.uleb128 0x1
 2450 0088 13       		.uleb128 0x13
 2451 0089 00       		.byte	0
 2452 008a 00       		.byte	0
 2453 008b 0B       		.uleb128 0xb
 2454 008c 34       		.uleb128 0x34
 2455 008d 00       		.byte	0
 2456 008e 03       		.uleb128 0x3
 2457 008f 0E       		.uleb128 0xe
 2458 0090 3A       		.uleb128 0x3a
 2459 0091 0B       		.uleb128 0xb
 2460 0092 3B       		.uleb128 0x3b
 2461 0093 0B       		.uleb128 0xb
 2462 0094 49       		.uleb128 0x49
 2463 0095 13       		.uleb128 0x13
 2464 0096 02       		.uleb128 0x2
 2465 0097 17       		.uleb128 0x17
 2466 0098 00       		.byte	0
 2467 0099 00       		.byte	0
 2468 009a 0C       		.uleb128 0xc
 2469 009b 34       		.uleb128 0x34
 2470 009c 00       		.byte	0
 2471 009d 03       		.uleb128 0x3
 2472 009e 0E       		.uleb128 0xe
 2473 009f 3A       		.uleb128 0x3a
 2474 00a0 0B       		.uleb128 0xb
 2475 00a1 3B       		.uleb128 0x3b
 2476 00a2 0B       		.uleb128 0xb
 2477 00a3 49       		.uleb128 0x49
 2478 00a4 13       		.uleb128 0x13
 2479 00a5 1C       		.uleb128 0x1c
 2480 00a6 05       		.uleb128 0x5
 2481 00a7 00       		.byte	0
 2482 00a8 00       		.byte	0
 2483 00a9 0D       		.uleb128 0xd
 2484 00aa 34       		.uleb128 0x34
 2485 00ab 00       		.byte	0
 2486 00ac 03       		.uleb128 0x3
 2487 00ad 0E       		.uleb128 0xe
 2488 00ae 3A       		.uleb128 0x3a
 2489 00af 0B       		.uleb128 0xb
 2490 00b0 3B       		.uleb128 0x3b
 2491 00b1 0B       		.uleb128 0xb
 2492 00b2 49       		.uleb128 0x49
 2493 00b3 13       		.uleb128 0x13
 2494 00b4 1C       		.uleb128 0x1c
 2495 00b5 0D       		.uleb128 0xd
 2496 00b6 00       		.byte	0
 2497 00b7 00       		.byte	0
 2498 00b8 0E       		.uleb128 0xe
 2499 00b9 34       		.uleb128 0x34
 2500 00ba 00       		.byte	0
 2501 00bb 03       		.uleb128 0x3
 2502 00bc 08       		.uleb128 0x8
 2503 00bd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 60


 2504 00be 0B       		.uleb128 0xb
 2505 00bf 3B       		.uleb128 0x3b
 2506 00c0 0B       		.uleb128 0xb
 2507 00c1 49       		.uleb128 0x49
 2508 00c2 13       		.uleb128 0x13
 2509 00c3 02       		.uleb128 0x2
 2510 00c4 18       		.uleb128 0x18
 2511 00c5 00       		.byte	0
 2512 00c6 00       		.byte	0
 2513 00c7 0F       		.uleb128 0xf
 2514 00c8 898201   		.uleb128 0x4109
 2515 00cb 00       		.byte	0
 2516 00cc 11       		.uleb128 0x11
 2517 00cd 01       		.uleb128 0x1
 2518 00ce 31       		.uleb128 0x31
 2519 00cf 13       		.uleb128 0x13
 2520 00d0 00       		.byte	0
 2521 00d1 00       		.byte	0
 2522 00d2 10       		.uleb128 0x10
 2523 00d3 898201   		.uleb128 0x4109
 2524 00d6 01       		.byte	0x1
 2525 00d7 11       		.uleb128 0x11
 2526 00d8 01       		.uleb128 0x1
 2527 00d9 31       		.uleb128 0x31
 2528 00da 13       		.uleb128 0x13
 2529 00db 01       		.uleb128 0x1
 2530 00dc 13       		.uleb128 0x13
 2531 00dd 00       		.byte	0
 2532 00de 00       		.byte	0
 2533 00df 11       		.uleb128 0x11
 2534 00e0 8A8201   		.uleb128 0x410a
 2535 00e3 00       		.byte	0
 2536 00e4 02       		.uleb128 0x2
 2537 00e5 18       		.uleb128 0x18
 2538 00e6 9142     		.uleb128 0x2111
 2539 00e8 18       		.uleb128 0x18
 2540 00e9 00       		.byte	0
 2541 00ea 00       		.byte	0
 2542 00eb 12       		.uleb128 0x12
 2543 00ec 898201   		.uleb128 0x4109
 2544 00ef 01       		.byte	0x1
 2545 00f0 11       		.uleb128 0x11
 2546 00f1 01       		.uleb128 0x1
 2547 00f2 31       		.uleb128 0x31
 2548 00f3 13       		.uleb128 0x13
 2549 00f4 00       		.byte	0
 2550 00f5 00       		.byte	0
 2551 00f6 13       		.uleb128 0x13
 2552 00f7 2E       		.uleb128 0x2e
 2553 00f8 01       		.byte	0x1
 2554 00f9 3F       		.uleb128 0x3f
 2555 00fa 19       		.uleb128 0x19
 2556 00fb 03       		.uleb128 0x3
 2557 00fc 0E       		.uleb128 0xe
 2558 00fd 3A       		.uleb128 0x3a
 2559 00fe 0B       		.uleb128 0xb
 2560 00ff 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 61


 2561 0100 05       		.uleb128 0x5
 2562 0101 27       		.uleb128 0x27
 2563 0102 19       		.uleb128 0x19
 2564 0103 49       		.uleb128 0x49
 2565 0104 13       		.uleb128 0x13
 2566 0105 11       		.uleb128 0x11
 2567 0106 01       		.uleb128 0x1
 2568 0107 12       		.uleb128 0x12
 2569 0108 06       		.uleb128 0x6
 2570 0109 40       		.uleb128 0x40
 2571 010a 18       		.uleb128 0x18
 2572 010b 9742     		.uleb128 0x2117
 2573 010d 19       		.uleb128 0x19
 2574 010e 01       		.uleb128 0x1
 2575 010f 13       		.uleb128 0x13
 2576 0110 00       		.byte	0
 2577 0111 00       		.byte	0
 2578 0112 14       		.uleb128 0x14
 2579 0113 05       		.uleb128 0x5
 2580 0114 00       		.byte	0
 2581 0115 03       		.uleb128 0x3
 2582 0116 0E       		.uleb128 0xe
 2583 0117 3A       		.uleb128 0x3a
 2584 0118 0B       		.uleb128 0xb
 2585 0119 3B       		.uleb128 0x3b
 2586 011a 05       		.uleb128 0x5
 2587 011b 49       		.uleb128 0x49
 2588 011c 13       		.uleb128 0x13
 2589 011d 02       		.uleb128 0x2
 2590 011e 17       		.uleb128 0x17
 2591 011f 00       		.byte	0
 2592 0120 00       		.byte	0
 2593 0121 15       		.uleb128 0x15
 2594 0122 05       		.uleb128 0x5
 2595 0123 00       		.byte	0
 2596 0124 03       		.uleb128 0x3
 2597 0125 08       		.uleb128 0x8
 2598 0126 3A       		.uleb128 0x3a
 2599 0127 0B       		.uleb128 0xb
 2600 0128 3B       		.uleb128 0x3b
 2601 0129 05       		.uleb128 0x5
 2602 012a 49       		.uleb128 0x49
 2603 012b 13       		.uleb128 0x13
 2604 012c 02       		.uleb128 0x2
 2605 012d 17       		.uleb128 0x17
 2606 012e 00       		.byte	0
 2607 012f 00       		.byte	0
 2608 0130 16       		.uleb128 0x16
 2609 0131 34       		.uleb128 0x34
 2610 0132 00       		.byte	0
 2611 0133 03       		.uleb128 0x3
 2612 0134 08       		.uleb128 0x8
 2613 0135 3A       		.uleb128 0x3a
 2614 0136 0B       		.uleb128 0xb
 2615 0137 3B       		.uleb128 0x3b
 2616 0138 05       		.uleb128 0x5
 2617 0139 49       		.uleb128 0x49
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 62


 2618 013a 13       		.uleb128 0x13
 2619 013b 02       		.uleb128 0x2
 2620 013c 17       		.uleb128 0x17
 2621 013d 00       		.byte	0
 2622 013e 00       		.byte	0
 2623 013f 17       		.uleb128 0x17
 2624 0140 34       		.uleb128 0x34
 2625 0141 00       		.byte	0
 2626 0142 03       		.uleb128 0x3
 2627 0143 0E       		.uleb128 0xe
 2628 0144 3A       		.uleb128 0x3a
 2629 0145 0B       		.uleb128 0xb
 2630 0146 3B       		.uleb128 0x3b
 2631 0147 05       		.uleb128 0x5
 2632 0148 49       		.uleb128 0x49
 2633 0149 13       		.uleb128 0x13
 2634 014a 3F       		.uleb128 0x3f
 2635 014b 19       		.uleb128 0x19
 2636 014c 3C       		.uleb128 0x3c
 2637 014d 19       		.uleb128 0x19
 2638 014e 00       		.byte	0
 2639 014f 00       		.byte	0
 2640 0150 18       		.uleb128 0x18
 2641 0151 35       		.uleb128 0x35
 2642 0152 00       		.byte	0
 2643 0153 49       		.uleb128 0x49
 2644 0154 13       		.uleb128 0x13
 2645 0155 00       		.byte	0
 2646 0156 00       		.byte	0
 2647 0157 19       		.uleb128 0x19
 2648 0158 2E       		.uleb128 0x2e
 2649 0159 00       		.byte	0
 2650 015a 3F       		.uleb128 0x3f
 2651 015b 19       		.uleb128 0x19
 2652 015c 03       		.uleb128 0x3
 2653 015d 0E       		.uleb128 0xe
 2654 015e 3A       		.uleb128 0x3a
 2655 015f 0B       		.uleb128 0xb
 2656 0160 3B       		.uleb128 0x3b
 2657 0161 0B       		.uleb128 0xb
 2658 0162 27       		.uleb128 0x27
 2659 0163 19       		.uleb128 0x19
 2660 0164 3C       		.uleb128 0x3c
 2661 0165 19       		.uleb128 0x19
 2662 0166 00       		.byte	0
 2663 0167 00       		.byte	0
 2664 0168 1A       		.uleb128 0x1a
 2665 0169 2E       		.uleb128 0x2e
 2666 016a 01       		.byte	0x1
 2667 016b 3F       		.uleb128 0x3f
 2668 016c 19       		.uleb128 0x19
 2669 016d 03       		.uleb128 0x3
 2670 016e 0E       		.uleb128 0xe
 2671 016f 3A       		.uleb128 0x3a
 2672 0170 0B       		.uleb128 0xb
 2673 0171 3B       		.uleb128 0x3b
 2674 0172 0B       		.uleb128 0xb
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 63


 2675 0173 3C       		.uleb128 0x3c
 2676 0174 19       		.uleb128 0x19
 2677 0175 01       		.uleb128 0x1
 2678 0176 13       		.uleb128 0x13
 2679 0177 00       		.byte	0
 2680 0178 00       		.byte	0
 2681 0179 1B       		.uleb128 0x1b
 2682 017a 18       		.uleb128 0x18
 2683 017b 00       		.byte	0
 2684 017c 00       		.byte	0
 2685 017d 00       		.byte	0
 2686 017e 1C       		.uleb128 0x1c
 2687 017f 2E       		.uleb128 0x2e
 2688 0180 01       		.byte	0x1
 2689 0181 3F       		.uleb128 0x3f
 2690 0182 19       		.uleb128 0x19
 2691 0183 03       		.uleb128 0x3
 2692 0184 0E       		.uleb128 0xe
 2693 0185 3A       		.uleb128 0x3a
 2694 0186 0B       		.uleb128 0xb
 2695 0187 3B       		.uleb128 0x3b
 2696 0188 0B       		.uleb128 0xb
 2697 0189 27       		.uleb128 0x27
 2698 018a 19       		.uleb128 0x19
 2699 018b 3C       		.uleb128 0x3c
 2700 018c 19       		.uleb128 0x19
 2701 018d 01       		.uleb128 0x1
 2702 018e 13       		.uleb128 0x13
 2703 018f 00       		.byte	0
 2704 0190 00       		.byte	0
 2705 0191 1D       		.uleb128 0x1d
 2706 0192 05       		.uleb128 0x5
 2707 0193 00       		.byte	0
 2708 0194 49       		.uleb128 0x49
 2709 0195 13       		.uleb128 0x13
 2710 0196 00       		.byte	0
 2711 0197 00       		.byte	0
 2712 0198 1E       		.uleb128 0x1e
 2713 0199 2E       		.uleb128 0x2e
 2714 019a 00       		.byte	0
 2715 019b 3F       		.uleb128 0x3f
 2716 019c 19       		.uleb128 0x19
 2717 019d 03       		.uleb128 0x3
 2718 019e 0E       		.uleb128 0xe
 2719 019f 3A       		.uleb128 0x3a
 2720 01a0 0B       		.uleb128 0xb
 2721 01a1 3B       		.uleb128 0x3b
 2722 01a2 0B       		.uleb128 0xb
 2723 01a3 27       		.uleb128 0x27
 2724 01a4 19       		.uleb128 0x19
 2725 01a5 49       		.uleb128 0x49
 2726 01a6 13       		.uleb128 0x13
 2727 01a7 3C       		.uleb128 0x3c
 2728 01a8 19       		.uleb128 0x19
 2729 01a9 00       		.byte	0
 2730 01aa 00       		.byte	0
 2731 01ab 00       		.byte	0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 64


 2732              		.section	.debug_loc,"",%progbits
 2733              	.Ldebug_loc0:
 2734              	.LLST0:
 2735 0000 06000000 		.4byte	.LVL0
 2736 0004 76000000 		.4byte	.LVL19
 2737 0008 0200     		.2byte	0x2
 2738 000a 30       		.byte	0x30
 2739 000b 9F       		.byte	0x9f
 2740 000c 76000000 		.4byte	.LVL19
 2741 0010 E6070000 		.4byte	.LVL285
 2742 0014 0100     		.2byte	0x1
 2743 0016 59       		.byte	0x59
 2744 0017 E6070000 		.4byte	.LVL285
 2745 001b EA070000 		.4byte	.LVL286
 2746 001f 0200     		.2byte	0x2
 2747 0021 30       		.byte	0x30
 2748 0022 9F       		.byte	0x9f
 2749 0023 EA070000 		.4byte	.LVL286
 2750 0027 3C080000 		.4byte	.LFE63
 2751 002b 0100     		.2byte	0x1
 2752 002d 59       		.byte	0x59
 2753 002e 00000000 		.4byte	0
 2754 0032 00000000 		.4byte	0
 2755              	.LLST1:
 2756 0036 06000000 		.4byte	.LVL0
 2757 003a 4E000000 		.4byte	.LVL11
 2758 003e 0200     		.2byte	0x2
 2759 0040 30       		.byte	0x30
 2760 0041 9F       		.byte	0x9f
 2761 0042 4E000000 		.4byte	.LVL11
 2762 0046 54000000 		.4byte	.LVL13
 2763 004a 0100     		.2byte	0x1
 2764 004c 54       		.byte	0x54
 2765 004d 54000000 		.4byte	.LVL13
 2766 0051 5C000000 		.4byte	.LVL16
 2767 0055 0200     		.2byte	0x2
 2768 0057 31       		.byte	0x31
 2769 0058 9F       		.byte	0x9f
 2770 0059 5C000000 		.4byte	.LVL16
 2771 005d 6E000000 		.4byte	.LVL18
 2772 0061 0100     		.2byte	0x1
 2773 0063 54       		.byte	0x54
 2774 0064 00000000 		.4byte	0
 2775 0068 00000000 		.4byte	0
 2776              	.LLST2:
 2777 006c 06000000 		.4byte	.LVL0
 2778 0070 76000000 		.4byte	.LVL19
 2779 0074 0200     		.2byte	0x2
 2780 0076 30       		.byte	0x30
 2781 0077 9F       		.byte	0x9f
 2782 0078 76000000 		.4byte	.LVL19
 2783 007c 7B000000 		.4byte	.LVL20-1
 2784 0080 0100     		.2byte	0x1
 2785 0082 53       		.byte	0x53
 2786 0083 7B000000 		.4byte	.LVL20-1
 2787 0087 D4070000 		.4byte	.LVL282
 2788 008b 0300     		.2byte	0x3
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 65


 2789 008d 91       		.byte	0x91
 2790 008e BC7F     		.sleb128 -68
 2791 0090 D4070000 		.4byte	.LVL282
 2792 0094 D8070000 		.4byte	.LVL283
 2793 0098 0200     		.2byte	0x2
 2794 009a 31       		.byte	0x31
 2795 009b 9F       		.byte	0x9f
 2796 009c D8070000 		.4byte	.LVL283
 2797 00a0 3C080000 		.4byte	.LFE63
 2798 00a4 0300     		.2byte	0x3
 2799 00a6 91       		.byte	0x91
 2800 00a7 BC7F     		.sleb128 -68
 2801 00a9 00000000 		.4byte	0
 2802 00ad 00000000 		.4byte	0
 2803              	.LLST3:
 2804 00b1 06000000 		.4byte	.LVL0
 2805 00b5 92000000 		.4byte	.LVL22
 2806 00b9 0200     		.2byte	0x2
 2807 00bb 30       		.byte	0x30
 2808 00bc 9F       		.byte	0x9f
 2809 00bd 92000000 		.4byte	.LVL22
 2810 00c1 AE000000 		.4byte	.LVL27
 2811 00c5 0100     		.2byte	0x1
 2812 00c7 5B       		.byte	0x5b
 2813 00c8 AE000000 		.4byte	.LVL27
 2814 00cc B4000000 		.4byte	.LVL28
 2815 00d0 0200     		.2byte	0x2
 2816 00d2 31       		.byte	0x31
 2817 00d3 9F       		.byte	0x9f
 2818 00d4 B4000000 		.4byte	.LVL28
 2819 00d8 FE030000 		.4byte	.LVL148
 2820 00dc 0100     		.2byte	0x1
 2821 00de 5B       		.byte	0x5b
 2822 00df FE030000 		.4byte	.LVL148
 2823 00e3 16040000 		.4byte	.LVL151
 2824 00e7 0200     		.2byte	0x2
 2825 00e9 30       		.byte	0x30
 2826 00ea 9F       		.byte	0x9f
 2827 00eb 16040000 		.4byte	.LVL151
 2828 00ef 32040000 		.4byte	.LVL156
 2829 00f3 0100     		.2byte	0x1
 2830 00f5 5B       		.byte	0x5b
 2831 00f6 32040000 		.4byte	.LVL156
 2832 00fa 38040000 		.4byte	.LVL157
 2833 00fe 0200     		.2byte	0x2
 2834 0100 31       		.byte	0x31
 2835 0101 9F       		.byte	0x9f
 2836 0102 38040000 		.4byte	.LVL157
 2837 0106 96070000 		.4byte	.LVL277
 2838 010a 0100     		.2byte	0x1
 2839 010c 5B       		.byte	0x5b
 2840 010d 96070000 		.4byte	.LVL277
 2841 0111 3C080000 		.4byte	.LFE63
 2842 0115 0200     		.2byte	0x2
 2843 0117 30       		.byte	0x30
 2844 0118 9F       		.byte	0x9f
 2845 0119 00000000 		.4byte	0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 66


 2846 011d 00000000 		.4byte	0
 2847              	.LLST4:
 2848 0121 06000000 		.4byte	.LVL0
 2849 0125 92000000 		.4byte	.LVL22
 2850 0129 0200     		.2byte	0x2
 2851 012b 30       		.byte	0x30
 2852 012c 9F       		.byte	0x9f
 2853 012d F4030000 		.4byte	.LVL147
 2854 0131 04040000 		.4byte	.LVL149
 2855 0135 0200     		.2byte	0x2
 2856 0137 31       		.byte	0x31
 2857 0138 9F       		.byte	0x9f
 2858 0139 04040000 		.4byte	.LVL149
 2859 013d 16040000 		.4byte	.LVL151
 2860 0141 0200     		.2byte	0x2
 2861 0143 30       		.byte	0x30
 2862 0144 9F       		.byte	0x9f
 2863 0145 8C070000 		.4byte	.LVL276
 2864 0149 9C070000 		.4byte	.LVL278
 2865 014d 0200     		.2byte	0x2
 2866 014f 31       		.byte	0x31
 2867 0150 9F       		.byte	0x9f
 2868 0151 9C070000 		.4byte	.LVL278
 2869 0155 3C080000 		.4byte	.LFE63
 2870 0159 0200     		.2byte	0x2
 2871 015b 30       		.byte	0x30
 2872 015c 9F       		.byte	0x9f
 2873 015d 00000000 		.4byte	0
 2874 0161 00000000 		.4byte	0
 2875              	.LLST5:
 2876 0165 06000000 		.4byte	.LVL0
 2877 0169 76000000 		.4byte	.LVL19
 2878 016d 0200     		.2byte	0x2
 2879 016f 30       		.byte	0x30
 2880 0170 9F       		.byte	0x9f
 2881 0171 76000000 		.4byte	.LVL19
 2882 0175 3C080000 		.4byte	.LFE63
 2883 0179 0100     		.2byte	0x1
 2884 017b 5A       		.byte	0x5a
 2885 017c 00000000 		.4byte	0
 2886 0180 00000000 		.4byte	0
 2887              	.LLST6:
 2888 0184 06000000 		.4byte	.LVL0
 2889 0188 76000000 		.4byte	.LVL19
 2890 018c 0200     		.2byte	0x2
 2891 018e 30       		.byte	0x30
 2892 018f 9F       		.byte	0x9f
 2893 0190 76000000 		.4byte	.LVL19
 2894 0194 BC070000 		.4byte	.LVL280
 2895 0198 0100     		.2byte	0x1
 2896 019a 54       		.byte	0x54
 2897 019b BC070000 		.4byte	.LVL280
 2898 019f BE070000 		.4byte	.LVL281
 2899 01a3 0200     		.2byte	0x2
 2900 01a5 30       		.byte	0x30
 2901 01a6 9F       		.byte	0x9f
 2902 01a7 BE070000 		.4byte	.LVL281
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 67


 2903 01ab 3C080000 		.4byte	.LFE63
 2904 01af 0100     		.2byte	0x1
 2905 01b1 54       		.byte	0x54
 2906 01b2 00000000 		.4byte	0
 2907 01b6 00000000 		.4byte	0
 2908              	.LLST7:
 2909 01ba 06000000 		.4byte	.LVL0
 2910 01be 76000000 		.4byte	.LVL19
 2911 01c2 0200     		.2byte	0x2
 2912 01c4 30       		.byte	0x30
 2913 01c5 9F       		.byte	0x9f
 2914 01c6 76000000 		.4byte	.LVL19
 2915 01ca 14010000 		.4byte	.LVL43
 2916 01ce 0100     		.2byte	0x1
 2917 01d0 56       		.byte	0x56
 2918 01d1 16010000 		.4byte	.LVL44
 2919 01d5 18010000 		.4byte	.LVL45
 2920 01d9 0100     		.2byte	0x1
 2921 01db 56       		.byte	0x56
 2922 01dc 1A010000 		.4byte	.LVL46
 2923 01e0 1C010000 		.4byte	.LVL47
 2924 01e4 0100     		.2byte	0x1
 2925 01e6 56       		.byte	0x56
 2926 01e7 1E010000 		.4byte	.LVL48
 2927 01eb 98040000 		.4byte	.LVL172
 2928 01ef 0100     		.2byte	0x1
 2929 01f1 56       		.byte	0x56
 2930 01f2 9A040000 		.4byte	.LVL173
 2931 01f6 9C040000 		.4byte	.LVL174
 2932 01fa 0100     		.2byte	0x1
 2933 01fc 56       		.byte	0x56
 2934 01fd 9E040000 		.4byte	.LVL175
 2935 0201 A0040000 		.4byte	.LVL176
 2936 0205 0100     		.2byte	0x1
 2937 0207 56       		.byte	0x56
 2938 0208 A2040000 		.4byte	.LVL177
 2939 020c 3C080000 		.4byte	.LFE63
 2940 0210 0100     		.2byte	0x1
 2941 0212 56       		.byte	0x56
 2942 0213 00000000 		.4byte	0
 2943 0217 00000000 		.4byte	0
 2944              	.LLST8:
 2945 021b 06000000 		.4byte	.LVL0
 2946 021f 92000000 		.4byte	.LVL22
 2947 0223 0200     		.2byte	0x2
 2948 0225 30       		.byte	0x30
 2949 0226 9F       		.byte	0x9f
 2950 0227 92000000 		.4byte	.LVL22
 2951 022b FE030000 		.4byte	.LVL148
 2952 022f 0100     		.2byte	0x1
 2953 0231 58       		.byte	0x58
 2954 0232 FE030000 		.4byte	.LVL148
 2955 0236 16040000 		.4byte	.LVL151
 2956 023a 0200     		.2byte	0x2
 2957 023c 30       		.byte	0x30
 2958 023d 9F       		.byte	0x9f
 2959 023e 16040000 		.4byte	.LVL151
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 68


 2960 0242 96070000 		.4byte	.LVL277
 2961 0246 0100     		.2byte	0x1
 2962 0248 58       		.byte	0x58
 2963 0249 96070000 		.4byte	.LVL277
 2964 024d 3C080000 		.4byte	.LFE63
 2965 0251 0200     		.2byte	0x2
 2966 0253 30       		.byte	0x30
 2967 0254 9F       		.byte	0x9f
 2968 0255 00000000 		.4byte	0
 2969 0259 00000000 		.4byte	0
 2970              	.LLST9:
 2971 025d 06000000 		.4byte	.LVL0
 2972 0261 76000000 		.4byte	.LVL19
 2973 0265 0600     		.2byte	0x6
 2974 0267 9E       		.byte	0x9e
 2975 0268 04       		.uleb128 0x4
 2976 0269 007EBB46 		.4byte	0x46bb7e00
 2977 026d 76000000 		.4byte	.LVL19
 2978 0271 A8000000 		.4byte	.LVL25
 2979 0275 0200     		.2byte	0x2
 2980 0277 7D       		.byte	0x7d
 2981 0278 00       		.sleb128 0
 2982 0279 A8000000 		.4byte	.LVL25
 2983 027d AA000000 		.4byte	.LVL26
 2984 0281 0100     		.2byte	0x1
 2985 0283 50       		.byte	0x50
 2986 0284 AA000000 		.4byte	.LVL26
 2987 0288 B4000000 		.4byte	.LVL28
 2988 028c 0100     		.2byte	0x1
 2989 028e 55       		.byte	0x55
 2990 028f B4000000 		.4byte	.LVL28
 2991 0293 B6000000 		.4byte	.LVL29
 2992 0297 0200     		.2byte	0x2
 2993 0299 7D       		.byte	0x7d
 2994 029a 00       		.sleb128 0
 2995 029b B6000000 		.4byte	.LVL29
 2996 029f D6000000 		.4byte	.LVL36
 2997 02a3 0100     		.2byte	0x1
 2998 02a5 55       		.byte	0x55
 2999 02a6 EE030000 		.4byte	.LVL146
 3000 02aa 3C080000 		.4byte	.LFE63
 3001 02ae 0200     		.2byte	0x2
 3002 02b0 7D       		.byte	0x7d
 3003 02b1 00       		.sleb128 0
 3004 02b2 00000000 		.4byte	0
 3005 02b6 00000000 		.4byte	0
 3006              	.LLST10:
 3007 02ba 06000000 		.4byte	.LVL0
 3008 02be 76000000 		.4byte	.LVL19
 3009 02c2 0600     		.2byte	0x6
 3010 02c4 9E       		.byte	0x9e
 3011 02c5 04       		.uleb128 0x4
 3012 02c6 007EBB46 		.4byte	0x46bb7e00
 3013 02ca CE000000 		.4byte	.LVL33
 3014 02ce D0000000 		.4byte	.LVL34
 3015 02d2 0100     		.2byte	0x1
 3016 02d4 50       		.byte	0x50
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 69


 3017 02d5 D0000000 		.4byte	.LVL34
 3018 02d9 D3000000 		.4byte	.LVL35-1
 3019 02dd 0100     		.2byte	0x1
 3020 02df 51       		.byte	0x51
 3021 02e0 D3000000 		.4byte	.LVL35-1
 3022 02e4 06040000 		.4byte	.LVL150
 3023 02e8 0200     		.2byte	0x2
 3024 02ea 7D       		.byte	0x7d
 3025 02eb 00       		.sleb128 0
 3026 02ec 00000000 		.4byte	0
 3027 02f0 00000000 		.4byte	0
 3028              	.LLST11:
 3029 02f4 06000000 		.4byte	.LVL0
 3030 02f8 76000000 		.4byte	.LVL19
 3031 02fc 0600     		.2byte	0x6
 3032 02fe 9E       		.byte	0x9e
 3033 02ff 04       		.uleb128 0x4
 3034 0300 007EBB46 		.4byte	0x46bb7e00
 3035 0304 76000000 		.4byte	.LVL19
 3036 0308 2C040000 		.4byte	.LVL154
 3037 030c 0100     		.2byte	0x1
 3038 030e 57       		.byte	0x57
 3039 030f 2C040000 		.4byte	.LVL154
 3040 0313 2E040000 		.4byte	.LVL155
 3041 0317 0100     		.2byte	0x1
 3042 0319 50       		.byte	0x50
 3043 031a 2E040000 		.4byte	.LVL155
 3044 031e 38040000 		.4byte	.LVL157
 3045 0322 0100     		.2byte	0x1
 3046 0324 55       		.byte	0x55
 3047 0325 38040000 		.4byte	.LVL157
 3048 0329 3A040000 		.4byte	.LVL158
 3049 032d 0100     		.2byte	0x1
 3050 032f 57       		.byte	0x57
 3051 0330 3A040000 		.4byte	.LVL158
 3052 0334 5A040000 		.4byte	.LVL165
 3053 0338 0100     		.2byte	0x1
 3054 033a 55       		.byte	0x55
 3055 033b 86070000 		.4byte	.LVL275
 3056 033f 3C080000 		.4byte	.LFE63
 3057 0343 0100     		.2byte	0x1
 3058 0345 57       		.byte	0x57
 3059 0346 00000000 		.4byte	0
 3060 034a 00000000 		.4byte	0
 3061              	.LLST12:
 3062 034e 06000000 		.4byte	.LVL0
 3063 0352 76000000 		.4byte	.LVL19
 3064 0356 0600     		.2byte	0x6
 3065 0358 9E       		.byte	0x9e
 3066 0359 04       		.uleb128 0x4
 3067 035a 007EBB46 		.4byte	0x46bb7e00
 3068 035e 50040000 		.4byte	.LVL162
 3069 0362 52040000 		.4byte	.LVL163
 3070 0366 0100     		.2byte	0x1
 3071 0368 50       		.byte	0x50
 3072 0369 52040000 		.4byte	.LVL163
 3073 036d 9C070000 		.4byte	.LVL278
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 70


 3074 0371 0100     		.2byte	0x1
 3075 0373 57       		.byte	0x57
 3076 0374 00000000 		.4byte	0
 3077 0378 00000000 		.4byte	0
 3078              	.LLST13:
 3079 037c 06000000 		.4byte	.LVL0
 3080 0380 76000000 		.4byte	.LVL19
 3081 0384 0600     		.2byte	0x6
 3082 0386 9E       		.byte	0x9e
 3083 0387 04       		.uleb128 0x4
 3084 0388 00000000 		.4byte	0
 3085 038c D6000000 		.4byte	.LVL36
 3086 0390 DB000000 		.4byte	.LVL37-1
 3087 0394 0100     		.2byte	0x1
 3088 0396 50       		.byte	0x50
 3089 0397 DB000000 		.4byte	.LVL37-1
 3090 039b 06040000 		.4byte	.LVL150
 3091 039f 0100     		.2byte	0x1
 3092 03a1 55       		.byte	0x55
 3093 03a2 00000000 		.4byte	0
 3094 03a6 00000000 		.4byte	0
 3095              	.LLST14:
 3096 03aa 06000000 		.4byte	.LVL0
 3097 03ae 76000000 		.4byte	.LVL19
 3098 03b2 0600     		.2byte	0x6
 3099 03b4 9E       		.byte	0x9e
 3100 03b5 04       		.uleb128 0x4
 3101 03b6 00000000 		.4byte	0
 3102 03ba 5A040000 		.4byte	.LVL165
 3103 03be 5F040000 		.4byte	.LVL166-1
 3104 03c2 0100     		.2byte	0x1
 3105 03c4 50       		.byte	0x50
 3106 03c5 5F040000 		.4byte	.LVL166-1
 3107 03c9 9C070000 		.4byte	.LVL278
 3108 03cd 0100     		.2byte	0x1
 3109 03cf 55       		.byte	0x55
 3110 03d0 00000000 		.4byte	0
 3111 03d4 00000000 		.4byte	0
 3112              	.LLST15:
 3113 03d8 52000000 		.4byte	.LVL12
 3114 03dc 56000000 		.4byte	.LVL14
 3115 03e0 0100     		.2byte	0x1
 3116 03e2 50       		.byte	0x50
 3117 03e3 00000000 		.4byte	0
 3118 03e7 00000000 		.4byte	0
 3119              	.LLST16:
 3120 03eb 00000000 		.4byte	.LVL288
 3121 03ef 0A000000 		.4byte	.LVL290
 3122 03f3 0100     		.2byte	0x1
 3123 03f5 50       		.byte	0x50
 3124 03f6 0A000000 		.4byte	.LVL290
 3125 03fa 2A000000 		.4byte	.LFE64
 3126 03fe 0400     		.2byte	0x4
 3127 0400 F3       		.byte	0xf3
 3128 0401 01       		.uleb128 0x1
 3129 0402 50       		.byte	0x50
 3130 0403 9F       		.byte	0x9f
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 71


 3131 0404 00000000 		.4byte	0
 3132 0408 00000000 		.4byte	0
 3133              	.LLST17:
 3134 040c 00000000 		.4byte	.LVL288
 3135 0410 0A000000 		.4byte	.LVL290
 3136 0414 0100     		.2byte	0x1
 3137 0416 51       		.byte	0x51
 3138 0417 0A000000 		.4byte	.LVL290
 3139 041b 18000000 		.4byte	.LVL292
 3140 041f 0100     		.2byte	0x1
 3141 0421 54       		.byte	0x54
 3142 0422 18000000 		.4byte	.LVL292
 3143 0426 22000000 		.4byte	.LVL295
 3144 042a 0100     		.2byte	0x1
 3145 042c 56       		.byte	0x56
 3146 042d 22000000 		.4byte	.LVL295
 3147 0431 2A000000 		.4byte	.LFE64
 3148 0435 0100     		.2byte	0x1
 3149 0437 54       		.byte	0x54
 3150 0438 00000000 		.4byte	0
 3151 043c 00000000 		.4byte	0
 3152              	.LLST18:
 3153 0440 00000000 		.4byte	.LVL288
 3154 0444 0A000000 		.4byte	.LVL290
 3155 0448 0100     		.2byte	0x1
 3156 044a 52       		.byte	0x52
 3157 044b 0A000000 		.4byte	.LVL290
 3158 044f 2A000000 		.4byte	.LFE64
 3159 0453 0100     		.2byte	0x1
 3160 0455 57       		.byte	0x57
 3161 0456 00000000 		.4byte	0
 3162 045a 00000000 		.4byte	0
 3163              	.LLST19:
 3164 045e 06000000 		.4byte	.LVL289
 3165 0462 0A000000 		.4byte	.LVL290
 3166 0466 0200     		.2byte	0x2
 3167 0468 30       		.byte	0x30
 3168 0469 9F       		.byte	0x9f
 3169 046a 0A000000 		.4byte	.LVL290
 3170 046e 2A000000 		.4byte	.LFE64
 3171 0472 0100     		.2byte	0x1
 3172 0474 55       		.byte	0x55
 3173 0475 00000000 		.4byte	0
 3174 0479 00000000 		.4byte	0
 3175              	.LLST20:
 3176 047d 00000000 		.4byte	.LVL296
 3177 0481 0A000000 		.4byte	.LVL298
 3178 0485 0100     		.2byte	0x1
 3179 0487 50       		.byte	0x50
 3180 0488 0A000000 		.4byte	.LVL298
 3181 048c 38000000 		.4byte	.LFE65
 3182 0490 0400     		.2byte	0x4
 3183 0492 F3       		.byte	0xf3
 3184 0493 01       		.uleb128 0x1
 3185 0494 50       		.byte	0x50
 3186 0495 9F       		.byte	0x9f
 3187 0496 00000000 		.4byte	0
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 72


 3188 049a 00000000 		.4byte	0
 3189              	.LLST21:
 3190 049e 00000000 		.4byte	.LVL296
 3191 04a2 0A000000 		.4byte	.LVL298
 3192 04a6 0100     		.2byte	0x1
 3193 04a8 51       		.byte	0x51
 3194 04a9 0A000000 		.4byte	.LVL298
 3195 04ad 26000000 		.4byte	.LVL305
 3196 04b1 0100     		.2byte	0x1
 3197 04b3 57       		.byte	0x57
 3198 04b4 26000000 		.4byte	.LVL305
 3199 04b8 30000000 		.4byte	.LVL307
 3200 04bc 0100     		.2byte	0x1
 3201 04be 53       		.byte	0x53
 3202 04bf 30000000 		.4byte	.LVL307
 3203 04c3 34000000 		.4byte	.LVL308
 3204 04c7 0100     		.2byte	0x1
 3205 04c9 57       		.byte	0x57
 3206 04ca 00000000 		.4byte	0
 3207 04ce 00000000 		.4byte	0
 3208              	.LLST22:
 3209 04d2 00000000 		.4byte	.LVL296
 3210 04d6 0A000000 		.4byte	.LVL298
 3211 04da 0100     		.2byte	0x1
 3212 04dc 52       		.byte	0x52
 3213 04dd 0A000000 		.4byte	.LVL298
 3214 04e1 38000000 		.4byte	.LFE65
 3215 04e5 0100     		.2byte	0x1
 3216 04e7 54       		.byte	0x54
 3217 04e8 00000000 		.4byte	0
 3218 04ec 00000000 		.4byte	0
 3219              	.LLST23:
 3220 04f0 06000000 		.4byte	.LVL297
 3221 04f4 0A000000 		.4byte	.LVL298
 3222 04f8 0200     		.2byte	0x2
 3223 04fa 30       		.byte	0x30
 3224 04fb 9F       		.byte	0x9f
 3225 04fc 0A000000 		.4byte	.LVL298
 3226 0500 38000000 		.4byte	.LFE65
 3227 0504 0100     		.2byte	0x1
 3228 0506 56       		.byte	0x56
 3229 0507 00000000 		.4byte	0
 3230 050b 00000000 		.4byte	0
 3231              	.LLST24:
 3232 050f 0E000000 		.4byte	.LVL299
 3233 0513 15000000 		.4byte	.LVL300-1
 3234 0517 0100     		.2byte	0x1
 3235 0519 50       		.byte	0x50
 3236 051a 1C000000 		.4byte	.LVL302
 3237 051e 24000000 		.4byte	.LVL304
 3238 0522 0200     		.2byte	0x2
 3239 0524 3A       		.byte	0x3a
 3240 0525 9F       		.byte	0x9f
 3241 0526 24000000 		.4byte	.LVL304
 3242 052a 30000000 		.4byte	.LVL307
 3243 052e 0100     		.2byte	0x1
 3244 0530 55       		.byte	0x55
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 73


 3245 0531 00000000 		.4byte	0
 3246 0535 00000000 		.4byte	0
 3247              		.section	.debug_aranges,"",%progbits
 3248 0000 2C000000 		.4byte	0x2c
 3249 0004 0200     		.2byte	0x2
 3250 0006 00000000 		.4byte	.Ldebug_info0
 3251 000a 04       		.byte	0x4
 3252 000b 00       		.byte	0
 3253 000c 0000     		.2byte	0
 3254 000e 0000     		.2byte	0
 3255 0010 00000000 		.4byte	.LFB63
 3256 0014 3C080000 		.4byte	.LFE63-.LFB63
 3257 0018 00000000 		.4byte	.LFB64
 3258 001c 2A000000 		.4byte	.LFE64-.LFB64
 3259 0020 00000000 		.4byte	.LFB65
 3260 0024 38000000 		.4byte	.LFE65-.LFB65
 3261 0028 00000000 		.4byte	0
 3262 002c 00000000 		.4byte	0
 3263              		.section	.debug_ranges,"",%progbits
 3264              	.Ldebug_ranges0:
 3265 0000 00000000 		.4byte	.LFB63
 3266 0004 3C080000 		.4byte	.LFE63
 3267 0008 00000000 		.4byte	.LFB64
 3268 000c 2A000000 		.4byte	.LFE64
 3269 0010 00000000 		.4byte	.LFB65
 3270 0014 38000000 		.4byte	.LFE65
 3271 0018 00000000 		.4byte	0
 3272 001c 00000000 		.4byte	0
 3273              		.section	.debug_line,"",%progbits
 3274              	.Ldebug_line0:
 3275 0000 3F030000 		.section	.debug_str,"MS",%progbits,1
 3275      0200C301 
 3275      00000201 
 3275      FB0E0D00 
 3275      01010101 
 3276              	.LASF73:
 3277 0000 55415254 		.ascii	"UART_1_GetChar\000"
 3277      5F315F47 
 3277      65744368 
 3277      617200
 3278              	.LASF2:
 3279 000f 73686F72 		.ascii	"short int\000"
 3279      7420696E 
 3279      7400
 3280              	.LASF19:
 3281 0019 73697A65 		.ascii	"sizetype\000"
 3281      74797065 
 3281      00
 3282              	.LASF29:
 3283 0022 64696666 		.ascii	"diff_Fast\000"
 3283      5F466173 
 3283      7400
 3284              	.LASF41:
 3285 002c 6D617844 		.ascii	"maxDiff_l1\000"
 3285      6966665F 
 3285      6C3100
 3286              	.LASF21:
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 74


 3287 0037 6379636C 		.ascii	"cycles\000"
 3287      657300
 3288              	.LASF40:
 3289 003e 6D617844 		.ascii	"maxDiff_l3\000"
 3289      6966665F 
 3289      6C3300
 3290              	.LASF52:
 3291 0049 5F777269 		.ascii	"_write\000"
 3291      746500
 3292              	.LASF44:
 3293 0050 626C6163 		.ascii	"blackness1_left\000"
 3293      6B6E6573 
 3293      73315F6C 
 3293      65667400 
 3294              	.LASF69:
 3295 0060 52696768 		.ascii	"Right_turn\000"
 3295      745F7475 
 3295      726E00
 3296              	.LASF4:
 3297 006b 5F5F7569 		.ascii	"__uint16_t\000"
 3297      6E743136 
 3297      5F7400
 3298              	.LASF51:
 3299 0076 66696C65 		.ascii	"file\000"
 3299      00
 3300              	.LASF24:
 3301 007b 6C6F6F70 		.ascii	"loopCheck\000"
 3301      43686563 
 3301      6B00
 3302              	.LASF77:
 3303 0085 73656E73 		.ascii	"sensors_\000"
 3303      6F72735F 
 3303      00
 3304              	.LASF33:
 3305 008e 626C6163 		.ascii	"black_threshold_l1\000"
 3305      6B5F7468 
 3305      72657368 
 3305      6F6C645F 
 3305      6C3100
 3306              	.LASF32:
 3307 00a1 626C6163 		.ascii	"black_threshold_l3\000"
 3307      6B5F7468 
 3307      72657368 
 3307      6F6C645F 
 3307      6C3300
 3308              	.LASF48:
 3309 00b4 64696666 		.ascii	"diff_left\000"
 3309      5F6C6566 
 3309      7400
 3310              	.LASF13:
 3311 00be 75696E74 		.ascii	"uint8\000"
 3311      3800
 3312              	.LASF60:
 3313 00c4 73656E73 		.ascii	"sensor_isr_StartEx\000"
 3313      6F725F69 
 3313      73725F53 
 3313      74617274 
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 75


 3313      457800
 3314              	.LASF57:
 3315 00d7 4D656173 		.ascii	"Measure_Voltage\000"
 3315      7572655F 
 3315      566F6C74 
 3315      61676500 
 3316              	.LASF62:
 3317 00e7 7265666C 		.ascii	"reflectance_start\000"
 3317      65637461 
 3317      6E63655F 
 3317      73746172 
 3317      7400
 3318              	.LASF55:
 3319 00f9 55415254 		.ascii	"UART_1_Start\000"
 3319      5F315F53 
 3319      74617274 
 3319      00
 3320              	.LASF71:
 3321 0106 55415254 		.ascii	"UART_1_PutChar\000"
 3321      5F315F50 
 3321      75744368 
 3321      617200
 3322              	.LASF15:
 3323 0115 666C6F61 		.ascii	"float\000"
 3323      7400
 3324              	.LASF28:
 3325 011b 64696666 		.ascii	"diffCase\000"
 3325      43617365 
 3325      00
 3326              	.LASF8:
 3327 0124 6C6F6E67 		.ascii	"long long int\000"
 3327      206C6F6E 
 3327      6720696E 
 3327      7400
 3328              	.LASF18:
 3329 0132 63796973 		.ascii	"cyisraddress\000"
 3329      72616464 
 3329      72657373 
 3329      00
 3330              	.LASF68:
 3331 013f 7265666C 		.ascii	"reflectance_digital\000"
 3331      65637461 
 3331      6E63655F 
 3331      64696769 
 3331      74616C00 
 3332              	.LASF39:
 3333 0153 77686974 		.ascii	"white_threshold_r3\000"
 3333      655F7468 
 3333      72657368 
 3333      6F6C645F 
 3333      723300
 3334              	.LASF17:
 3335 0166 63686172 		.ascii	"char\000"
 3335      00
 3336              	.LASF23:
 3337 016b 65786974 		.ascii	"exitMainLoop\000"
 3337      4D61696E 
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 76


 3337      4C6F6F70 
 3337      00
 3338              	.LASF50:
 3339 0178 62757474 		.ascii	"button\000"
 3339      6F6E00
 3340              	.LASF49:
 3341 017f 64696666 		.ascii	"diff_right\000"
 3341      5F726967 
 3341      687400
 3342              	.LASF66:
 3343 018a 43757374 		.ascii	"Custom_forward\000"
 3343      6F6D5F66 
 3343      6F727761 
 3343      726400
 3344              	.LASF46:
 3345 0199 626C6163 		.ascii	"blackness1_right\000"
 3345      6B6E6573 
 3345      73315F72 
 3345      69676874 
 3345      00
 3346              	.LASF1:
 3347 01aa 756E7369 		.ascii	"unsigned char\000"
 3347      676E6564 
 3347      20636861 
 3347      7200
 3348              	.LASF22:
 3349 01b8 65786974 		.ascii	"exit\000"
 3349      00
 3350              	.LASF20:
 3351 01bd 6C6F6E67 		.ascii	"long double\000"
 3351      20646F75 
 3351      626C6500 
 3352              	.LASF56:
 3353 01c9 4144435F 		.ascii	"ADC_Battery_Start\000"
 3353      42617474 
 3353      6572795F 
 3353      53746172 
 3353      7400
 3354              	.LASF70:
 3355 01db 4C656674 		.ascii	"Left_turn\000"
 3355      5F747572 
 3355      6E00
 3356              	.LASF27:
 3357 01e5 696E426C 		.ascii	"inBlack\000"
 3357      61636B00 
 3358              	.LASF61:
 3359 01ed 7265666C 		.ascii	"reflectance_set_threshold\000"
 3359      65637461 
 3359      6E63655F 
 3359      7365745F 
 3359      74687265 
 3360              	.LASF53:
 3361 0207 5F726561 		.ascii	"_read\000"
 3361      6400
 3362              	.LASF38:
 3363 020d 77686974 		.ascii	"white_threshold_r1\000"
 3363      655F7468 
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 77


 3363      72657368 
 3363      6F6C645F 
 3363      723100
 3364              	.LASF0:
 3365 0220 7369676E 		.ascii	"signed char\000"
 3365      65642063 
 3365      68617200 
 3366              	.LASF12:
 3367 022c 696E7433 		.ascii	"int32_t\000"
 3367      325F7400 
 3368              	.LASF9:
 3369 0234 6C6F6E67 		.ascii	"long long unsigned int\000"
 3369      206C6F6E 
 3369      6720756E 
 3369      7369676E 
 3369      65642069 
 3370              	.LASF10:
 3371 024b 756E7369 		.ascii	"unsigned int\000"
 3371      676E6564 
 3371      20696E74 
 3371      00
 3372              	.LASF11:
 3373 0258 75696E74 		.ascii	"uint16_t\000"
 3373      31365F74 
 3373      00
 3374              	.LASF30:
 3375 0261 7475726E 		.ascii	"turn\000"
 3375      00
 3376              	.LASF31:
 3377 0266 73706565 		.ascii	"speed\000"
 3377      6400
 3378              	.LASF3:
 3379 026c 73686F72 		.ascii	"short unsigned int\000"
 3379      7420756E 
 3379      7369676E 
 3379      65642069 
 3379      6E7400
 3380              	.LASF59:
 3381 027f 6D6F746F 		.ascii	"motor_forward\000"
 3381      725F666F 
 3381      72776172 
 3381      6400
 3382              	.LASF26:
 3383 028d 636F756E 		.ascii	"countLines\000"
 3383      744C696E 
 3383      657300
 3384              	.LASF6:
 3385 0298 6C6F6E67 		.ascii	"long int\000"
 3385      20696E74 
 3385      00
 3386              	.LASF78:
 3387 02a1 6D61696E 		.ascii	"main\000"
 3387      00
 3388              	.LASF45:
 3389 02a6 626C6163 		.ascii	"blackness2_left\000"
 3389      6B6E6573 
 3389      73325F6C 
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 78


 3389      65667400 
 3390              	.LASF64:
 3391 02b6 42617474 		.ascii	"BatteryLed_Write\000"
 3391      6572794C 
 3391      65645F57 
 3391      72697465 
 3391      00
 3392              	.LASF72:
 3393 02c7 5357315F 		.ascii	"SW1_Read\000"
 3393      52656164 
 3393      00
 3394              	.LASF14:
 3395 02d0 75696E74 		.ascii	"uint32\000"
 3395      333200
 3396              	.LASF75:
 3397 02d7 6D61696E 		.ascii	"main.c\000"
 3397      2E6300
 3398              	.LASF42:
 3399 02de 6D617844 		.ascii	"maxDiff_r1\000"
 3399      6966665F 
 3399      723100
 3400              	.LASF7:
 3401 02e9 6C6F6E67 		.ascii	"long unsigned int\000"
 3401      20756E73 
 3401      69676E65 
 3401      6420696E 
 3401      7400
 3402              	.LASF43:
 3403 02fb 6D617844 		.ascii	"maxDiff_r3\000"
 3403      6966665F 
 3403      723300
 3404              	.LASF25:
 3405 0306 7475726E 		.ascii	"turnFlag\000"
 3405      466C6167 
 3405      00
 3406              	.LASF58:
 3407 030f 6D6F746F 		.ascii	"motor_start\000"
 3407      725F7374 
 3407      61727400 
 3408              	.LASF54:
 3409 031b 636F756E 		.ascii	"count\000"
 3409      7400
 3410              	.LASF5:
 3411 0321 5F5F696E 		.ascii	"__int32_t\000"
 3411      7433325F 
 3411      7400
 3412              	.LASF34:
 3413 032b 626C6163 		.ascii	"black_threshold_r1\000"
 3413      6B5F7468 
 3413      72657368 
 3413      6F6C645F 
 3413      723100
 3414              	.LASF74:
 3415 033e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3415      4320342E 
 3415      392E3320 
 3415      32303135 
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 79


 3415      30333033 
 3416 0371 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3416      20726576 
 3416      6973696F 
 3416      6E203232 
 3416      31323230 
 3417 03a4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3417      66756E63 
 3417      74696F6E 
 3417      2D736563 
 3417      74696F6E 
 3418              	.LASF35:
 3419 03cc 626C6163 		.ascii	"black_threshold_r3\000"
 3419      6B5F7468 
 3419      72657368 
 3419      6F6C645F 
 3419      723300
 3420              	.LASF16:
 3421 03df 646F7562 		.ascii	"double\000"
 3421      6C6500
 3422              	.LASF37:
 3423 03e6 77686974 		.ascii	"white_threshold_l1\000"
 3423      655F7468 
 3423      72657368 
 3423      6F6C645F 
 3423      6C3100
 3424              	.LASF36:
 3425 03f9 77686974 		.ascii	"white_threshold_l3\000"
 3425      655F7468 
 3425      72657368 
 3425      6F6C645F 
 3425      6C3300
 3426              	.LASF79:
 3427 040c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3427      52784275 
 3427      66666572 
 3427      00
 3428              	.LASF76:
 3429 0419 433A5C55 		.ascii	"C:\\Users\\JuhaVuokko\\Documents\\PsocFiles\\Qahviq"
 3429      73657273 
 3429      5C4A7568 
 3429      6156756F 
 3429      6B6B6F5C 
 3430 0447 75707069 		.ascii	"uppiRobot\\Zumo_Robotti\\ZumoBot.cydsn\000"
 3430      526F626F 
 3430      745C5A75 
 3430      6D6F5F52 
 3430      6F626F74 
 3431              	.LASF65:
 3432 046c 43794465 		.ascii	"CyDelay\000"
 3432      6C617900 
 3433              	.LASF67:
 3434 0474 7265666C 		.ascii	"reflectance_read\000"
 3434      65637461 
 3434      6E63655F 
 3434      72656164 
 3434      00
ARM GAS  C:\Users\JUHAVU~1\AppData\Local\Temp\ccRwZu2j.s 			page 80


 3435              	.LASF47:
 3436 0485 626C6163 		.ascii	"blackness2_right\000"
 3436      6B6E6573 
 3436      73325F72 
 3436      69676874 
 3436      00
 3437              	.LASF63:
 3438 0496 49525F6C 		.ascii	"IR_led_Write\000"
 3438      65645F57 
 3438      72697465 
 3438      00
 3439              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
