ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_ui2f
  19              		.global	__aeabi_fsub
  20              		.global	__aeabi_fadd
  21              		.global	__aeabi_fdiv
  22              		.global	__aeabi_fcmplt
  23              		.global	__aeabi_fcmpgt
  24              		.global	__aeabi_i2f
  25              		.global	__aeabi_fmul
  26              		.global	__aeabi_f2uiz
  27              		.section	.text.main,"ax",%progbits
  28              		.align	2
  29              		.global	main
  30              		.thumb
  31              		.thumb_func
  32              		.type	main, %function
  33              	main:
  34              	.LFB63:
  35              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  17:main.c        **** */
  18:main.c        **** 
  19:main.c        **** #include <project.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** #include <math.h>
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 2


  23:main.c        **** #include "Motor.h"
  24:main.c        **** #include "Ultra.h"
  25:main.c        **** #include "Nunchuk.h"
  26:main.c        **** #include "Reflectance.h"
  27:main.c        **** #include "I2C_made.h"
  28:main.c        **** #include "Gyro.h"
  29:main.c        **** #include "Accel_magnet.h"
  30:main.c        **** #include "IR.h"
  31:main.c        **** #include "Ambient.h"
  32:main.c        **** #include "Beep.h"
  33:main.c        **** 
  34:main.c        **** 
  35:main.c        **** // Declare used methods
  36:main.c        **** int rread(void);
  37:main.c        **** void motor_start();
  38:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  39:main.c        **** void Custom_forward(uint8 speed);
  40:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  41:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  42:main.c        **** void Measure_Voltage();
  43:main.c        **** void Turn(uint8 turn, int dir_flag, float diff_ave);
  44:main.c        **** 
  45:main.c        **** 
  46:main.c        **** int main()
  47:main.c        **** {
  36              		.loc 1 47 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 40
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  41              		.cfi_def_cfa_offset 36
  42              		.cfi_offset 4, -36
  43              		.cfi_offset 5, -32
  44              		.cfi_offset 6, -28
  45              		.cfi_offset 7, -24
  46              		.cfi_offset 8, -20
  47              		.cfi_offset 9, -16
  48              		.cfi_offset 10, -12
  49              		.cfi_offset 11, -8
  50              		.cfi_offset 14, -4
  51 0004 8BB0     		sub	sp, sp, #44
  52              		.cfi_def_cfa_offset 80
  53              	.LVL0:
  48:main.c        ****     // 'Time counter' for the voltage measurement interval
  49:main.c        ****     int cycles = 0;
  50:main.c        ****     
  51:main.c        ****     // Needed for using the button to start the robot's movement routine
  52:main.c        ****     int exit = 0;
  53:main.c        ****    
  54:main.c        ****     // direction flag for correct turning behaviour. '1' = 'left', '2' = 'right'.
  55:main.c        ****     int dir_flag = 0;
  56:main.c        ****     
  57:main.c        ****     //For counting blackLines (to stop the robot at race end)
  58:main.c        ****     int countLines = 0;
  59:main.c        ****     int inBlack = 0;
  60:main.c        ****     int exitMainLoop = 0;
  61:main.c        ****     
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 3


  62:main.c        ****     // Turn value for the motors to use.
  63:main.c        ****     uint32 turn = 0;
  64:main.c        ****     
  65:main.c        ****     // (Maximum) movement speed of the robot.
  66:main.c        ****     uint8 speed = 240;
  67:main.c        ****     
  68:main.c        ****     // Reflectance thresholds (determined experimentally) for use in different movement behaviours.
  69:main.c        ****     int black_threshold_l3 = 21000;
  70:main.c        ****     int black_threshold_l1 = 18000; // 'sure bet' working value: 17 500 // actual line edge value: 
  71:main.c        ****     int black_threshold_r1 = 22600; // 'sure bet' working value: 22 000 // actual line edge value: 
  72:main.c        ****     int black_threshold_r3 = 21500;
  73:main.c        ****         
  74:main.c        ****     int white_threshold_l3 = 5793;
  75:main.c        ****     int white_threshold_l1 = 4500;
  76:main.c        ****     int white_threshold_r1 = 4522;
  77:main.c        ****     int white_threshold_r3 = 6293;
  78:main.c        ****     
  79:main.c        ****     int maxDiff_l1 = black_threshold_l1 - white_threshold_l1;
  80:main.c        ****     int maxDiff_r1 = black_threshold_r1 - white_threshold_r1;
  81:main.c        ****    
  82:main.c        ****     // Needed for determining turn behaviour
  83:main.c        ****     int digital = 0;
  84:main.c        ****     int maxDiff = 0;
  85:main.c        ****     int black_threshold = 0;
  86:main.c        ****     float blackness_1 = 23999;
  87:main.c        ****     float blackness_2 = 23999;
  88:main.c        ****     float blackDiff = 0.0;
  89:main.c        ****     float diffs[3] = {0, 0, 0};
  54              		.loc 1 89 0
  55 0006 0023     		movs	r3, #0
  56 0008 0793     		str	r3, [sp, #28]	@ float
  57 000a 0893     		str	r3, [sp, #32]	@ float
  58              	.LVL1:
  90:main.c        ****     float diff_ave = 0;
  91:main.c        ****     float diff_prev_ave = 0;
  92:main.c        ****     int i;
  93:main.c        ****     float diff_pos = 0;
  94:main.c        ****     float norm_blackness_2 = 0;
  95:main.c        ****  
  96:main.c        ****     // Initialize various starting thingies
  97:main.c        ****     struct sensors_ ref;
  98:main.c        ****     struct sensors_ dig;
  99:main.c        ****     CyGlobalIntEnable; 
  59              		.loc 1 99 0
  60              	@ 99 "main.c" 1
  61 000c 62B6     		CPSIE   i
  62              	@ 0 "" 2
 100:main.c        ****     UART_1_Start();
  63              		.loc 1 100 0
  64              		.thumb
  65 000e FFF7FEFF 		bl	UART_1_Start
  66              	.LVL2:
 101:main.c        ****     ADC_Battery_Start();   
  67              		.loc 1 101 0
  68 0012 FFF7FEFF 		bl	ADC_Battery_Start
  69              	.LVL3:
 102:main.c        ****     
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 4


 103:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
  70              		.loc 1 103 0
  71 0016 FFF7FEFF 		bl	Measure_Voltage
  72              	.LVL4:
 104:main.c        ****     
 105:main.c        ****     motor_start();
  73              		.loc 1 105 0
  74 001a FFF7FEFF 		bl	motor_start
  75              	.LVL5:
 106:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  76              		.loc 1 106 0
  77 001e 0020     		movs	r0, #0
  78 0020 0146     		mov	r1, r0
  79 0022 FFF7FEFF 		bl	motor_forward
  80              	.LVL6:
 107:main.c        ****     
 108:main.c        ****     // Initialize IR sensors
 109:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  81              		.loc 1 109 0
  82 0026 8348     		ldr	r0, .L26
  83 0028 FFF7FEFF 		bl	sensor_isr_StartEx
  84              	.LVL7:
 110:main.c        ****     reflectance_set_threshold(black_threshold_l3, black_threshold_l1, black_threshold_r1, black_thr
  85              		.loc 1 110 0
  86 002c 45F20820 		movw	r0, #21000
  87 0030 44F25061 		movw	r1, #18000
  88 0034 45F64802 		movw	r2, #22600
  89 0038 45F2FC33 		movw	r3, #21500
  90 003c FFF7FEFF 		bl	reflectance_set_threshold
  91              	.LVL8:
 111:main.c        ****     reflectance_start();
  92              		.loc 1 111 0
  93 0040 FFF7FEFF 		bl	reflectance_start
  94              	.LVL9:
 112:main.c        ****     IR_led_Write(1);
  95              		.loc 1 112 0
  96 0044 0120     		movs	r0, #1
  97 0046 FFF7FEFF 		bl	IR_led_Write
  98              	.LVL10:
 113:main.c        **** 
 114:main.c        ****     BatteryLed_Write(0); // Switch led off 
  99              		.loc 1 114 0
 100 004a 0020     		movs	r0, #0
 101 004c FFF7FEFF 		bl	BatteryLed_Write
 102              	.LVL11:
  52:main.c        ****    
 103              		.loc 1 52 0
 104 0050 0024     		movs	r4, #0
 115:main.c        ****     
 116:main.c        ****     uint8 button; // make button exist
 117:main.c        ****     
 118:main.c        ****     // To start the robot's movement routine, press the button
 119:main.c        ****     while (exit == 0) 
 105              		.loc 1 119 0
 106 0052 06E0     		b	.L3
 107              	.LVL12:
 108              	.L4:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 5


 120:main.c        ****     {
 121:main.c        ****         button = SW1_Read();
 109              		.loc 1 121 0
 110 0054 FFF7FEFF 		bl	SW1_Read
 111              	.LVL13:
 122:main.c        ****         
 123:main.c        ****         if (button == 0) 
 112              		.loc 1 123 0
 113 0058 18B9     		cbnz	r0, .L3
 114              	.LVL14:
 124:main.c        ****         {
 125:main.c        ****             exit = 1;
 126:main.c        ****             CyDelay(10);
 115              		.loc 1 126 0
 116 005a 0A20     		movs	r0, #10
 117              	.LVL15:
 118 005c FFF7FEFF 		bl	CyDelay
 119              	.LVL16:
 125:main.c        ****             CyDelay(10);
 120              		.loc 1 125 0
 121 0060 0124     		movs	r4, #1
 122              	.LVL17:
 123              	.L3:
 119:main.c        ****     {
 124              		.loc 1 119 0
 125 0062 002C     		cmp	r4, #0
 126 0064 F6D0     		beq	.L4
 127:main.c        ****         }
 128:main.c        ****     }
 129:main.c        ****     
 130:main.c        ****     // Start going forward.
 131:main.c        ****     Custom_forward(speed);
 127              		.loc 1 131 0
 128 0066 F020     		movs	r0, #240
 129 0068 FFF7FEFF 		bl	Custom_forward
 130              	.LVL18:
  86:main.c        ****     float blackness_2 = 23999;
 131              		.loc 1 86 0
 132 006c 724D     		ldr	r5, .L26+4
  85:main.c        ****     float blackness_1 = 23999;
 133              		.loc 1 85 0
 134 006e 0023     		movs	r3, #0
 135 0070 0193     		str	r3, [sp, #4]
  84:main.c        ****     int black_threshold = 0;
 136              		.loc 1 84 0
 137 0072 0093     		str	r3, [sp]
  83:main.c        ****     int maxDiff = 0;
 138              		.loc 1 83 0
 139 0074 9846     		mov	r8, r3
  55:main.c        ****     
 140              		.loc 1 55 0
 141 0076 9946     		mov	r9, r3
  49:main.c        ****     
 142              		.loc 1 49 0
 143 0078 9B46     		mov	fp, r3
 132:main.c        ****     
 133:main.c        ****     // Giant loop to run the movement logic in.
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 6


 134:main.c        ****     while(exitMainLoop == 0)
 144              		.loc 1 134 0
 145 007a CEE0     		b	.L5
 146              	.LVL19:
 147              	.L18:
 135:main.c        ****     {    
 136:main.c        ****         
 137:main.c        ****         reflectance_read(&ref); // raw reflectance value ('blackness') from the sensor; 0 - 23 999
 138:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 139:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 140:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 141:main.c        ****         //CyDelay(500); // comment this delay out when doing movement tests / racing !!!
 142:main.c        ****         
 143:main.c        ****         
 144:main.c        ****         
 145:main.c        ****         // Line-following logic.
 146:main.c        ****         // NOTE: due to the calibration of the motor speeds, 240 (255 - 15) is our current max spee
 147:main.c        ****         
 148:main.c        ****         // If-switch between left and right sensor activation (affects turning logic directly below
 149:main.c        ****         if (dig.l1 == 1) 
 150:main.c        ****         {
 151:main.c        ****             dir_flag = 1;
 152:main.c        ****             digital = dig.l1;
 148              		.loc 1 152 0
 149 007c 9846     		mov	r8, r3
 150              	.LVL20:
 153:main.c        ****             
 154:main.c        ****             blackness_1 = ref.l1;
 151              		.loc 1 154 0
 152 007e BDF81600 		ldrh	r0, [sp, #22]
 153 0082 FFF7FEFF 		bl	__aeabi_ui2f
 154              	.LVL21:
 155 0086 0546     		mov	r5, r0
 156              	.LVL22:
 155:main.c        ****             CyDelay(1);
 157              		.loc 1 155 0
 158 0088 0120     		movs	r0, #1
 159              	.LVL23:
 160 008a FFF7FEFF 		bl	CyDelay
 161              	.LVL24:
 156:main.c        ****             
 157:main.c        ****             black_threshold = black_threshold_l1;
 162              		.loc 1 157 0
 163 008e 44F25063 		movw	r3, #18000
 164 0092 0193     		str	r3, [sp, #4]
 158:main.c        ****             maxDiff = maxDiff_l1;
 165              		.loc 1 158 0
 166 0094 43F2BC43 		movw	r3, #13500
 167 0098 0093     		str	r3, [sp]
 151:main.c        ****             digital = dig.l1;
 168              		.loc 1 151 0
 169 009a 4FF00109 		mov	r9, #1
 170 009e 14E0     		b	.L6
 171              	.LVL25:
 172              	.L24:
 159:main.c        ****    
 160:main.c        ****         } else if (dig.r1 == 1) {
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 7


 173              		.loc 1 160 0
 174 00a0 BDF81030 		ldrh	r3, [sp, #16]
 175 00a4 012B     		cmp	r3, #1
 176 00a6 10D1     		bne	.L6
 177              	.LVL26:
 161:main.c        ****         
 162:main.c        ****             dir_flag = 2;
 163:main.c        ****             digital = dig.r1;
 178              		.loc 1 163 0
 179 00a8 9846     		mov	r8, r3
 180              	.LVL27:
 164:main.c        ****             
 165:main.c        ****             blackness_1 = ref.r1;
 181              		.loc 1 165 0
 182 00aa BDF81800 		ldrh	r0, [sp, #24]
 183 00ae FFF7FEFF 		bl	__aeabi_ui2f
 184              	.LVL28:
 185 00b2 0546     		mov	r5, r0
 186              	.LVL29:
 166:main.c        ****             CyDelay(1);
 187              		.loc 1 166 0
 188 00b4 0120     		movs	r0, #1
 189              	.LVL30:
 190 00b6 FFF7FEFF 		bl	CyDelay
 191              	.LVL31:
 167:main.c        ****             
 168:main.c        ****             black_threshold = black_threshold_r1;
 192              		.loc 1 168 0
 193 00ba 45F64803 		movw	r3, #22600
 194 00be 0193     		str	r3, [sp, #4]
 169:main.c        ****             maxDiff = maxDiff_r1;
 195              		.loc 1 169 0
 196 00c0 44F29E63 		movw	r3, #18078
 197 00c4 0093     		str	r3, [sp]
 162:main.c        ****             digital = dig.r1;
 198              		.loc 1 162 0
 199 00c6 4FF00209 		mov	r9, #2
 200              	.LVL32:
 201              	.L6:
 170:main.c        ****             
 171:main.c        ****         }
 172:main.c        ****          
 173:main.c        ****         // When the measured blackness value drops below the threshold, start the appropriate turni
 174:main.c        ****         // Added a further check to weed out the effect of random 'freak' values: the absolute blac
 175:main.c        ****         // the sensors must be greater than 4 000 (the 'natural' difference is about 2 000, so this
 176:main.c        ****         if (digital == 1 /*&& ( abs(ref.l1 - ref.r1) > 3400) */ )
 202              		.loc 1 176 0
 203 00ca B8F1010F 		cmp	r8, #1
 204 00ce 40F09880 		bne	.L7
 205 00d2 00E0     		b	.L14
 206              	.LVL33:
 207              	.L22:
 177:main.c        ****         { 
 178:main.c        **** 
 179:main.c        ****             // When the robot starts to veer off to the left or right, do a corrective turn in the 
 180:main.c        ****             do {
 181:main.c        ****                 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 8


 182:main.c        ****                 // Obtain a second ref value (1 millisecond later).
 183:main.c        ****                 reflectance_read(&ref);
 184:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 185:main.c        ****                 
 186:main.c        ****                 // This if-härdelli is needed solely due to the way that structs work...
 187:main.c        ****                 if (dir_flag == 1) 
 188:main.c        ****                 {
 189:main.c        ****                     digital = dig.l1;
 190:main.c        ****                     blackness_2 = ref.l1;
 191:main.c        ****                 } else {
 192:main.c        ****                     digital = dig.r1;
 193:main.c        ****                     blackness_2 = ref.r1;
 194:main.c        ****                 }
 195:main.c        ****                                
 196:main.c        ****                 // Calculate the difference between the two values.
 197:main.c        ****                 blackDiff = blackness_1 - blackness_2;
 198:main.c        ****                 
 199:main.c        ****                 // Store the value of blackDiff in an array and move the other stored values +1 for
 200:main.c        ****                 // (the stored values of blackDiff will be used to determine turning behavior direc
 201:main.c        ****                 diffs[2] = diffs[1];
 202:main.c        ****                 diffs[1] = diffs[0];
 203:main.c        ****                 diffs[0] = blackDiff;
 204:main.c        ****                 
 205:main.c        ****                 // Use average of 3 diffs for determining behaviour. it should smooth out the rough
 206:main.c        ****                 diff_ave = ( diffs[0] + diffs[1] + diffs[2]) / 3;
 207:main.c        ****                 
 208:main.c        ****                 // Needed for normalizing 'freak' blackness values (explained below).
 209:main.c        ****                 diff_prev_ave = (diffs[2] + diffs[1]) / 2;
 210:main.c        ****                 
 211:main.c        ****                 // Normalize diff_ave (needed for use in the exponential 3rd component of 'turn', t
 212:main.c        ****                 diff_pos = diff_ave;
 213:main.c        ****                 if (diff_pos < 0 ) { diff_pos *= -1.0; }
 214:main.c        ****                 
 215:main.c        ****                 if (diff_pos > 2000.0) { diff_pos = 2000.0; }
 216:main.c        ****                 
 217:main.c        ****                 // Normalize the value of blackness_2 (assigned to a new variable; original blackne
 218:main.c        ****                 // The normalized value is used instead of plain blackness_2 in the first exponenti
 219:main.c        ****                 // This should ensure that random 'freak' sensor values, like 5 000 blackness when 
 220:main.c        ****                 // on the middle component of 'turn'.
 221:main.c        ****                 norm_blackness_2 = blackness_2;
 222:main.c        ****                 
 223:main.c        ****                 //if (norm_blackness_2 < 12000) { norm_blackness_2 = 12000;}
 224:main.c        ****                 
 225:main.c        ****                 // If the latest difference in blackness values is more than 2000 AND the previous 
 226:main.c        ****                 // than 1000, normalize blackness value with the TOTAL diff average (INCLUDING the 
 227:main.c        ****                 if ((blackDiff > 3000 || blackDiff < -3000) && (diff_prev_ave < 1000 || diff_prev_a
 228:main.c        ****                 {
 229:main.c        ****                     norm_blackness_2 -= diff_ave;  // seems like a good way to normalize, as the gr
 230:main.c        ****                     // Subtraction should work for both cases (blackDiff > 0 and < 0)... If a fluke
 231:main.c        ****                     // inevitably dominates the value of diff_ave. Otoh, whether 2000 diff is a goo
 232:main.c        ****                     // up to debate; experiments will be needed.
 233:main.c        ****                 }
 234:main.c        ****                                             
 235:main.c        ****                 // 'Base' turn component. Depends linearly on the last measured & normalized blackn
 236:main.c        ****                 // (simply a ball-park constant, to raise the value of turn globally).           
 237:main.c        ****                 turn = 60 + speed * ( (black_threshold - blackness_2) / black_threshold );
 238:main.c        ****                 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 9


 239:main.c        ****                 // First exponential turn component; depends on the normalized blackness value (cal
 240:main.c        ****                 // '57' is simply a ballpark coefficient, to fit the final value in an appropriate 
 241:main.c        ****                 turn += 40 * powf((black_threshold / blackness_2), 1.3); // max effect on turn is ~
 242:main.c        ****                 // With 16 000 blackness (line edge value), turn += 72.
 243:main.c        ****                 // (The lower values might seem a bit low. They may be raised once the behaviour of
 244:main.c        ****                 
 245:main.c        ****                 // Second exponential turn component. Depends on the positive, normalized average o
 246:main.c        ****                 // raised to the power of 1.35 and calibrated with the value of maxDiff. Again '225
 247:main.c        ****                 turn += 225 * ( powf(diff_pos, 1.35) / maxDiff );
 248:main.c        ****                 // 500 diff: +73 turn; 1000 diff: +130 turn; 2000 diff: +324 turn (=> 240);
 249:main.c        ****                 // NOTE: These values may be TOO large... Experiments are needed.
 250:main.c        ****                 
 251:main.c        ****                 // Ideally, the last component should always dominate, since it's the most critical
 252:main.c        **** 
 253:main.c        ****                 // Minimum final turn amount (with ~20 000 blackness and 0 diff) should be ~59 atm.
 254:main.c        ****                 // (Note that this value combination should actually be impossible to reach under m
 255:main.c        ****                 // With 17 999 blackness and zero diff: 97 final turn.
 256:main.c        ****                 // With 16 000 blackness ('real' line edge) and zero diff: 138 final turn.
 257:main.c        ****                 // With 14 000 blackness (over the edge!) and zero diff: 186 final turn. (along wit
 258:main.c        ****                 
 259:main.c        ****                 // Check for egregious values of 'turn' and correct them if found.
 260:main.c        ****                 if (turn > 240)
 261:main.c        ****                 {
 262:main.c        ****                     turn = 240;
 263:main.c        ****                 }
 264:main.c        ****                 
 265:main.c        ****                 
 266:main.c        ****                 //printf("dir: %d, turn: %d, diff_temp: %f, blackness_2: %f \n", dir_flag, turn, di
 267:main.c        ****                                                                                                    
 268:main.c        ****                 // Execute the turn (right turn if the left sensor activated, left turn if the righ
 269:main.c        ****                 // If diff_ave < 0, the turn is made in the opposite direction (moving towards cent
 270:main.c        ****                 // Between 0 and -300, the opposite turn is milder (75 % of regular turn value), wh
 271:main.c        ****                 // NOTE: Further modification of the opposite turn's turn value (in the Turn method
 272:main.c        ****                 Turn(turn, dir_flag, blackDiff);
 273:main.c        ****                              
 274:main.c        ****                 // Store the value of the second blackness measurement to the variable for the firs
 275:main.c        ****                 // As the loop continues, blackness_2's value is stored in blackness_1 and then bla
 276:main.c        ****                 blackness_1 = blackness_2;
 208              		.loc 1 276 0
 209 00d4 2546     		mov	r5, r4
 210              	.LVL34:
 211              	.L14:
 183:main.c        ****                 reflectance_digital(&dig); // needed to check if the turn should be ended
 212              		.loc 1 183 0
 213 00d6 05A8     		add	r0, sp, #20
 214 00d8 FFF7FEFF 		bl	reflectance_read
 215              	.LVL35:
 184:main.c        ****                 
 216              		.loc 1 184 0
 217 00dc 03A8     		add	r0, sp, #12
 218 00de FFF7FEFF 		bl	reflectance_digital
 219              	.LVL36:
 187:main.c        ****                 {
 220              		.loc 1 187 0
 221 00e2 B9F1010F 		cmp	r9, #1
 222 00e6 07D1     		bne	.L8
 189:main.c        ****                     blackness_2 = ref.l1;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 10


 223              		.loc 1 189 0
 224 00e8 BDF80E80 		ldrh	r8, [sp, #14]
 225              	.LVL37:
 190:main.c        ****                 } else {
 226              		.loc 1 190 0
 227 00ec BDF81600 		ldrh	r0, [sp, #22]
 228 00f0 FFF7FEFF 		bl	__aeabi_ui2f
 229              	.LVL38:
 230 00f4 0446     		mov	r4, r0
 231              	.LVL39:
 232 00f6 06E0     		b	.L9
 233              	.LVL40:
 234              	.L8:
 192:main.c        ****                     blackness_2 = ref.r1;
 235              		.loc 1 192 0
 236 00f8 BDF81080 		ldrh	r8, [sp, #16]
 237              	.LVL41:
 193:main.c        ****                 }
 238              		.loc 1 193 0
 239 00fc BDF81800 		ldrh	r0, [sp, #24]
 240 0100 FFF7FEFF 		bl	__aeabi_ui2f
 241              	.LVL42:
 242 0104 0446     		mov	r4, r0
 243              	.LVL43:
 244              	.L9:
 197:main.c        ****                 
 245              		.loc 1 197 0
 246 0106 2846     		mov	r0, r5
 247              	.LVL44:
 248 0108 2146     		mov	r1, r4
 249 010a FFF7FEFF 		bl	__aeabi_fsub
 250              	.LVL45:
 251 010e 0646     		mov	r6, r0
 252              	.LVL46:
 201:main.c        ****                 diffs[1] = diffs[0];
 253              		.loc 1 201 0
 254 0110 089D     		ldr	r5, [sp, #32]	@ float
 255              	.LVL47:
 202:main.c        ****                 diffs[0] = blackDiff;
 256              		.loc 1 202 0
 257 0112 0799     		ldr	r1, [sp, #28]	@ float
 258 0114 0891     		str	r1, [sp, #32]	@ float
 203:main.c        ****                 
 259              		.loc 1 203 0
 260 0116 0790     		str	r0, [sp, #28]	@ float
 206:main.c        ****                 
 261              		.loc 1 206 0
 262 0118 FFF7FEFF 		bl	__aeabi_fadd
 263              	.LVL48:
 264 011c 0146     		mov	r1, r0
 265 011e 2846     		mov	r0, r5
 266 0120 FFF7FEFF 		bl	__aeabi_fadd
 267              	.LVL49:
 268 0124 4549     		ldr	r1, .L26+8
 269 0126 FFF7FEFF 		bl	__aeabi_fdiv
 270              	.LVL50:
 271 012a 0546     		mov	r5, r0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 11


 272              	.LVL51:
 213:main.c        ****                 
 273              		.loc 1 213 0
 274 012c 0021     		movs	r1, #0
 275 012e FFF7FEFF 		bl	__aeabi_fcmplt
 276              	.LVL52:
 277 0132 08B1     		cbz	r0, .L10
 213:main.c        ****                 
 278              		.loc 1 213 0 is_stmt 0 discriminator 1
 279 0134 05F10045 		add	r5, r5, #-2147483648
 280              	.LVL53:
 281              	.L10:
 215:main.c        ****                 
 282              		.loc 1 215 0 is_stmt 1
 283 0138 2846     		mov	r0, r5
 284 013a 4149     		ldr	r1, .L26+12
 285 013c FFF7FEFF 		bl	__aeabi_fcmpgt
 286              	.LVL54:
 287 0140 00B1     		cbz	r0, .L12
 288 0142 3F4D     		ldr	r5, .L26+12
 289              	.LVL55:
 290              	.L12:
 237:main.c        ****                 
 291              		.loc 1 237 0
 292 0144 0198     		ldr	r0, [sp, #4]
 293 0146 FFF7FEFF 		bl	__aeabi_i2f
 294              	.LVL56:
 295 014a 0746     		mov	r7, r0
 296 014c 2146     		mov	r1, r4
 297 014e FFF7FEFF 		bl	__aeabi_fsub
 298              	.LVL57:
 299 0152 3946     		mov	r1, r7
 300 0154 FFF7FEFF 		bl	__aeabi_fdiv
 301              	.LVL58:
 302 0158 3A49     		ldr	r1, .L26+16
 303 015a FFF7FEFF 		bl	__aeabi_fmul
 304              	.LVL59:
 305 015e 3A49     		ldr	r1, .L26+20
 306 0160 FFF7FEFF 		bl	__aeabi_fadd
 307              	.LVL60:
 308 0164 FFF7FEFF 		bl	__aeabi_f2uiz
 309              	.LVL61:
 310 0168 8246     		mov	r10, r0
 311              	.LVL62:
 241:main.c        ****                 // With 16 000 blackness (line edge value), turn += 72.
 312              		.loc 1 241 0
 313 016a 3846     		mov	r0, r7
 314              	.LVL63:
 315 016c 2146     		mov	r1, r4
 316 016e FFF7FEFF 		bl	__aeabi_fdiv
 317              	.LVL64:
 318 0172 3649     		ldr	r1, .L26+24
 319 0174 FFF7FEFF 		bl	powf
 320              	.LVL65:
 321 0178 3549     		ldr	r1, .L26+28
 322 017a FFF7FEFF 		bl	__aeabi_fmul
 323              	.LVL66:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 12


 324 017e 0746     		mov	r7, r0
 325 0180 5046     		mov	r0, r10
 326 0182 FFF7FEFF 		bl	__aeabi_ui2f
 327              	.LVL67:
 328 0186 3946     		mov	r1, r7
 329 0188 FFF7FEFF 		bl	__aeabi_fadd
 330              	.LVL68:
 331 018c FFF7FEFF 		bl	__aeabi_f2uiz
 332              	.LVL69:
 333 0190 0746     		mov	r7, r0
 334              	.LVL70:
 247:main.c        ****                 // 500 diff: +73 turn; 1000 diff: +130 turn; 2000 diff: +324 turn (=> 240);
 335              		.loc 1 247 0
 336 0192 2846     		mov	r0, r5
 337              	.LVL71:
 338 0194 2F49     		ldr	r1, .L26+32
 339 0196 FFF7FEFF 		bl	powf
 340              	.LVL72:
 341 019a 0546     		mov	r5, r0
 342              	.LVL73:
 343 019c 0098     		ldr	r0, [sp]
 344 019e FFF7FEFF 		bl	__aeabi_i2f
 345              	.LVL74:
 346 01a2 0146     		mov	r1, r0
 347 01a4 2846     		mov	r0, r5
 348 01a6 FFF7FEFF 		bl	__aeabi_fdiv
 349              	.LVL75:
 350 01aa 2B49     		ldr	r1, .L26+36
 351 01ac FFF7FEFF 		bl	__aeabi_fmul
 352              	.LVL76:
 353 01b0 0546     		mov	r5, r0
 354 01b2 3846     		mov	r0, r7
 355 01b4 FFF7FEFF 		bl	__aeabi_ui2f
 356              	.LVL77:
 357 01b8 2946     		mov	r1, r5
 358 01ba FFF7FEFF 		bl	__aeabi_fadd
 359              	.LVL78:
 360 01be FFF7FEFF 		bl	__aeabi_f2uiz
 361              	.LVL79:
 260:main.c        ****                 {
 362              		.loc 1 260 0
 363 01c2 F028     		cmp	r0, #240
 364 01c4 00D9     		bls	.L13
 262:main.c        ****                 }
 365              		.loc 1 262 0
 366 01c6 F020     		movs	r0, #240
 367              	.LVL80:
 368              	.L13:
 272:main.c        ****                              
 369              		.loc 1 272 0
 370 01c8 C0B2     		uxtb	r0, r0
 371              	.LVL81:
 372 01ca 4946     		mov	r1, r9
 373 01cc 3246     		mov	r2, r6
 374 01ce FFF7FEFF 		bl	Turn
 375              	.LVL82:
 277:main.c        ****                 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 13


 278:main.c        ****                 CyDelay(1);
 376              		.loc 1 278 0
 377 01d2 0120     		movs	r0, #1
 378 01d4 FFF7FEFF 		bl	CyDelay
 379              	.LVL83:
 279:main.c        ****                
 280:main.c        ****                          
 281:main.c        ****             } while (digital == 1);
 380              		.loc 1 281 0
 381 01d8 B8F1010F 		cmp	r8, #1
 382 01dc 3FF47AAF 		beq	.L22
 383 01e0 0023     		movs	r3, #0
 384 01e2 06E0     		b	.L15
 385              	.LVL84:
 386              	.L16:
 282:main.c        ****                                                 
 283:main.c        ****             // Since the turn has ended, reset the stored diff values back to zero, so the next tur
 284:main.c        ****             for (i = 0; i < 3; i++)
 285:main.c        ****             {
 286:main.c        ****                 diffs[i] = 0;
 387              		.loc 1 286 0 discriminator 3
 388 01e4 0AAA     		add	r2, sp, #40
 389 01e6 02EB8302 		add	r2, r2, r3, lsl #2
 390 01ea 0021     		movs	r1, #0
 391 01ec 42F80C1C 		str	r1, [r2, #-12]	@ float
 284:main.c        ****             {
 392              		.loc 1 284 0 discriminator 3
 393 01f0 0133     		adds	r3, r3, #1
 394              	.LVL85:
 395              	.L15:
 284:main.c        ****             {
 396              		.loc 1 284 0 is_stmt 0 discriminator 1
 397 01f2 022B     		cmp	r3, #2
 398 01f4 F6DD     		ble	.L16
 399              	.LVL86:
 287:main.c        ****             }
 288:main.c        ****           
 289:main.c        ****             // For added safety, set turn to zero... May not be necessary.
 290:main.c        ****             turn = 0;
 291:main.c        ****             dir_flag = 0; // for safety as well...
 292:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 293:main.c        ****             Custom_forward(speed);
 400              		.loc 1 293 0 is_stmt 1
 401 01f6 F020     		movs	r0, #240
 402 01f8 FFF7FEFF 		bl	Custom_forward
 403              	.LVL87:
 276:main.c        ****                 
 404              		.loc 1 276 0
 405 01fc 2546     		mov	r5, r4
 291:main.c        ****             // Since the turn has ended, continue forward at the designated speed.
 406              		.loc 1 291 0
 407 01fe 4FF00009 		mov	r9, #0
 408              	.LVL88:
 409              	.L7:
 294:main.c        ****                                           
 295:main.c        ****         } 
 296:main.c        ****         
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 14


 297:main.c        ****         /* ENABLE FOR RACE !!!!!!!!!!!!!!!!
 298:main.c        ****         //First let's put line recognition logic here. It may be necessary to have line regocnition
 299:main.c        ****         if (dig.l3 == 0 && dig.r3 == 0){
 300:main.c        ****             inBlack = 1;
 301:main.c        ****         }
 302:main.c        ****         
 303:main.c        ****         if (inBlack == 1 && dig.r3 == 1 && dig.l3 == 1){
 304:main.c        ****             ++countLines;
 305:main.c        ****             inBlack = 0;
 306:main.c        ****         }
 307:main.c        ****         
 308:main.c        ****         //this must change (2=>1), when added moving to starting-line logic.
 309:main.c        ****         if (countLines == 2 && dig.r3 == 0 && dig.l3 == 0){
 310:main.c        ****             motor_forward(0,0);
 311:main.c        ****             exitMainLoop = 1;
 312:main.c        ****         }        
 313:main.c        ****                         
 314:main.c        ****         */
 315:main.c        ****         
 316:main.c        ****         // For measuring the battery voltage at regular intervals. 
 317:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 318:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 319:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 320:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 321:main.c        ****         cycles++;
 410              		.loc 1 321 0
 411 0202 0BF1010B 		add	fp, fp, #1
 412              	.LVL89:
 322:main.c        ****         if (cycles >= 80000)
 413              		.loc 1 322 0
 414 0206 154B     		ldr	r3, .L26+40
 415 0208 9B45     		cmp	fp, r3
 416 020a 03DD     		ble	.L17
 323:main.c        ****         {
 324:main.c        ****             Measure_Voltage();
 417              		.loc 1 324 0
 418 020c FFF7FEFF 		bl	Measure_Voltage
 419              	.LVL90:
 325:main.c        ****             cycles = 0;
 420              		.loc 1 325 0
 421 0210 4FF0000B 		mov	fp, #0
 422              	.LVL91:
 423              	.L17:
 326:main.c        ****         }
 327:main.c        ****         
 328:main.c        ****         CyDelay(1);   
 424              		.loc 1 328 0
 425 0214 0120     		movs	r0, #1
 426 0216 FFF7FEFF 		bl	CyDelay
 427              	.LVL92:
 428              	.L5:
 137:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 429              		.loc 1 137 0
 430 021a 05A8     		add	r0, sp, #20
 431 021c FFF7FEFF 		bl	reflectance_read
 432              	.LVL93:
 139:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 15


 433              		.loc 1 139 0
 434 0220 03A8     		add	r0, sp, #12
 435 0222 FFF7FEFF 		bl	reflectance_digital
 436              	.LVL94:
 149:main.c        ****         {
 437              		.loc 1 149 0
 438 0226 BDF80E30 		ldrh	r3, [sp, #14]
 439 022a 012B     		cmp	r3, #1
 440 022c 7FF438AF 		bne	.L24
 441 0230 24E7     		b	.L18
 442              	.L27:
 443 0232 00BF     		.align	2
 444              	.L26:
 445 0234 00000000 		.word	sensor_isr_handler
 446 0238 007EBB46 		.word	1186692608
 447 023c 00004040 		.word	1077936128
 448 0240 0000FA44 		.word	1157234688
 449 0244 00007043 		.word	1131413504
 450 0248 00007042 		.word	1114636288
 451 024c 6666A63F 		.word	1067869798
 452 0250 00002042 		.word	1109393408
 453 0254 CDCCAC3F 		.word	1068289229
 454 0258 00006143 		.word	1130430464
 455 025c 7F380100 		.word	79999
 456              		.cfi_endproc
 457              	.LFE63:
 458              		.size	main, .-main
 459              		.section	.text._write,"ax",%progbits
 460              		.align	2
 461              		.global	_write
 462              		.thumb
 463              		.thumb_func
 464              		.type	_write, %function
 465              	_write:
 466              	.LFB64:
 329:main.c        ****     }  
 330:main.c        ****     
 331:main.c        ****     //empty loop to end with
 332:main.c        ****     while(1) {}
 333:main.c        **** }
 334:main.c        ****     
 335:main.c        **** // ================================================================================================
 336:main.c        **** // ================================================================================================
 337:main.c        **** 
 338:main.c        **** 
 339:main.c        **** //*/
 340:main.c        **** 
 341:main.c        **** /*//ultra sonic sensor//
 342:main.c        **** int main()
 343:main.c        **** {
 344:main.c        ****     CyGlobalIntEnable; 
 345:main.c        ****     UART_1_Start();
 346:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 347:main.c        ****     while(1) {
 348:main.c        ****         //If you want to print out the value  
 349:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 350:main.c        ****         CyDelay(1000);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 16


 351:main.c        ****     }
 352:main.c        **** }   
 353:main.c        **** //*/
 354:main.c        **** 
 355:main.c        **** 
 356:main.c        **** /*//nunchuk//
 357:main.c        **** int main()
 358:main.c        **** {
 359:main.c        ****     CyGlobalIntEnable; 
 360:main.c        ****     UART_1_Start();
 361:main.c        ****   
 362:main.c        ****     nunchuk_start();
 363:main.c        ****     nunchuk_init();
 364:main.c        ****     
 365:main.c        ****     for(;;)
 366:main.c        ****     {    
 367:main.c        ****         nunchuk_read();
 368:main.c        ****     }
 369:main.c        **** }   
 370:main.c        **** //*/
 371:main.c        **** 
 372:main.c        **** 
 373:main.c        **** /*//IR receiver//
 374:main.c        **** int main()
 375:main.c        **** {
 376:main.c        ****     CyGlobalIntEnable; 
 377:main.c        ****     UART_1_Start();
 378:main.c        ****     
 379:main.c        ****     unsigned int IR_val; 
 380:main.c        ****     
 381:main.c        ****     for(;;)
 382:main.c        ****     {
 383:main.c        ****        IR_val = get_IR();
 384:main.c        ****        printf("%x\r\n\n",IR_val);
 385:main.c        ****     }    
 386:main.c        ****  }   
 387:main.c        **** //*/
 388:main.c        **** 
 389:main.c        **** 
 390:main.c        **** /*//Ambient light sensor//
 391:main.c        **** int main()
 392:main.c        **** {
 393:main.c        ****     CyGlobalIntEnable; 
 394:main.c        ****     UART_1_Start();
 395:main.c        ****     
 396:main.c        ****     I2C_Start();
 397:main.c        ****     
 398:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 399:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 400:main.c        ****     
 401:main.c        ****     for(;;)
 402:main.c        ****     {    
 403:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 404:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 405:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 406:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 407:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 17


 408:main.c        ****         
 409:main.c        ****         uint8 CH0, CH1;
 410:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 411:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 412:main.c        **** 
 413:main.c        ****         double Ch0 = CH0;
 414:main.c        ****         double Ch1 = CH1;
 415:main.c        ****         
 416:main.c        ****         double data = 0;
 417:main.c        ****         data = getLux(Ch0,Ch1);
 418:main.c        ****         
 419:main.c        ****         // If you want to print out data
 420:main.c        ****         //printf("%lf\r\n",data);    
 421:main.c        ****     }    
 422:main.c        ****  }   
 423:main.c        **** //*/
 424:main.c        **** 
 425:main.c        **** 
 426:main.c        **** /*//accelerometer//
 427:main.c        **** int main()
 428:main.c        **** {
 429:main.c        ****     CyGlobalIntEnable; 
 430:main.c        ****     UART_1_Start();
 431:main.c        ****   
 432:main.c        ****     I2C_Start();
 433:main.c        ****   
 434:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 435:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 436:main.c        ****     
 437:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 438:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 439:main.c        ****     
 440:main.c        ****     
 441:main.c        ****     for(;;)
 442:main.c        ****     {
 443:main.c        ****         //print out accelerometer output
 444:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 445:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 446:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 447:main.c        ****         
 448:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 449:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 450:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 451:main.c        ****         
 452:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 453:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 454:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 455:main.c        ****         
 456:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 457:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 458:main.c        ****         printf("\n");
 459:main.c        ****         
 460:main.c        ****         CyDelay(50);
 461:main.c        ****     }
 462:main.c        **** }   
 463:main.c        **** //*/
 464:main.c        **** 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 18


 465:main.c        **** 
 466:main.c        **** /*//reflectance//
 467:main.c        **** int main()
 468:main.c        **** {
 469:main.c        ****     struct sensors_ ref;
 470:main.c        ****     struct sensors_ dig;
 471:main.c        ****     CyGlobalIntEnable; 
 472:main.c        ****     UART_1_Start();
 473:main.c        ****   
 474:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 475:main.c        ****     
 476:main.c        ****     reflectance_start();
 477:main.c        **** 
 478:main.c        ****     IR_led_Write(1);
 479:main.c        ****     for(;;)
 480:main.c        ****     {
 481:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 482:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 483:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 484:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 485:main.c        ****         
 486:main.c        ****         CyDelay(500);
 487:main.c        ****     }
 488:main.c        **** }   
 489:main.c        **** //*/
 490:main.c        **** 
 491:main.c        ****  /* //motor//
 492:main.c        **** int main()
 493:main.c        **** {
 494:main.c        ****     CyGlobalIntEnable; 
 495:main.c        ****     UART_1_Start();
 496:main.c        **** 
 497:main.c        ****     motor_start();              // motor start
 498:main.c        **** 
 499:main.c        ****     motor_forward(100,2000);     // moving forward
 500:main.c        ****     motor_turn(200,50,2000);     // turn
 501:main.c        ****     motor_turn(50,200,2000);     // turn
 502:main.c        ****     motor_backward(100,2000);    // movinb backward
 503:main.c        ****        
 504:main.c        ****     motor_stop();               // motor stop
 505:main.c        ****     
 506:main.c        ****     for(;;)
 507:main.c        ****     {
 508:main.c        **** 
 509:main.c        ****     }
 510:main.c        **** }
 511:main.c        **** //*/
 512:main.c        ****     
 513:main.c        **** 
 514:main.c        **** /*//gyroscope//
 515:main.c        **** int main()
 516:main.c        **** {
 517:main.c        ****     CyGlobalIntEnable; 
 518:main.c        ****     UART_1_Start();
 519:main.c        ****   
 520:main.c        ****     I2C_Start();
 521:main.c        ****   
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 19


 522:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 523:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 524:main.c        ****     
 525:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 526:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 527:main.c        ****     
 528:main.c        ****     for(;;)
 529:main.c        ****     {
 530:main.c        ****         //print out gyroscope output
 531:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 532:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 533:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 534:main.c        ****         
 535:main.c        ****         
 536:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 537:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 538:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 539:main.c        ****         
 540:main.c        ****         
 541:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 542:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 543:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 544:main.c        ****      
 545:main.c        ****         // If you want to print value
 546:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 547:main.c        ****         CyDelay(50);
 548:main.c        ****     }
 549:main.c        **** }   
 550:main.c        **** //*/
 551:main.c        **** 
 552:main.c        **** 
 553:main.c        **** /*//magnetometer//
 554:main.c        **** int main()
 555:main.c        **** {
 556:main.c        ****     CyGlobalIntEnable; 
 557:main.c        ****     UART_1_Start();
 558:main.c        ****   
 559:main.c        ****     I2C_Start();
 560:main.c        ****    
 561:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 562:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 563:main.c        ****     
 564:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 565:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 566:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 567:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 568:main.c        ****     
 569:main.c        ****     
 570:main.c        ****     for(;;)
 571:main.c        ****     {
 572:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 573:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 574:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 575:main.c        ****         
 576:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 577:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 578:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 20


 579:main.c        ****         
 580:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 581:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 582:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 583:main.c        ****         
 584:main.c        ****         heading(X_AXIS, Y_AXIS);
 585:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 586:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 587:main.c        ****         CyDelay(50);      
 588:main.c        ****     }
 589:main.c        **** }   
 590:main.c        **** //*/
 591:main.c        **** 
 592:main.c        **** 
 593:main.c        **** /*
 594:main.c        **** 
 595:main.c        **** 
 596:main.c        ****     <p>
 597:main.c        ****     <B>Sensors</B><br>
 598:main.c        ****     &nbsp;Included: <br>
 599:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 600:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 601:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 602:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 603:main.c        ****     &nbsp;Wii nunchuck<br>
 604:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 605:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 606:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 607:main.c        ****     &nbsp;IR LED <br><br><br>
 608:main.c        ****     </p>
 609:main.c        ****     
 610:main.c        ****     <p>
 611:main.c        ****     <B>Communication</B><br>
 612:main.c        ****     I2C, UART, Serial<br>
 613:main.c        ****     </p>
 614:main.c        **** 
 615:main.c        **** */
 616:main.c        **** 
 617:main.c        **** 
 618:main.c        **** #if 0
 619:main.c        **** int rread(void)
 620:main.c        **** {
 621:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 622:main.c        ****     SC0_Write(1);
 623:main.c        ****     CyDelayUs(10);
 624:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 625:main.c        ****     Timer_1_Start();
 626:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 627:main.c        ****     uint16_t end = 0;
 628:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 629:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 630:main.c        ****             end = Timer_1_ReadCounter();
 631:main.c        ****         }
 632:main.c        ****     }
 633:main.c        ****     Timer_1_Stop();
 634:main.c        ****     
 635:main.c        ****     return (start - end);
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 21


 636:main.c        **** }
 637:main.c        **** #endif
 638:main.c        **** 
 639:main.c        **** /* Don't remove the functions below */
 640:main.c        **** int _write(int file, char *ptr, int len)
 641:main.c        **** {
 467              		.loc 1 641 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              	.LVL95:
 472 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 473              		.cfi_def_cfa_offset 24
 474              		.cfi_offset 3, -24
 475              		.cfi_offset 4, -20
 476              		.cfi_offset 5, -16
 477              		.cfi_offset 6, -12
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 0C46     		mov	r4, r1
 481 0004 1746     		mov	r7, r2
 482              	.LVL96:
 642:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 643:main.c        **** 	int n;
 644:main.c        **** 	for(n = 0; n < len; n++) {
 483              		.loc 1 644 0
 484 0006 0025     		movs	r5, #0
 485 0008 0BE0     		b	.L29
 486              	.LVL97:
 487              	.L31:
 645:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 488              		.loc 1 645 0
 489 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 490 000c 0A2B     		cmp	r3, #10
 491 000e 02D1     		bne	.L30
 492              		.loc 1 645 0 is_stmt 0 discriminator 1
 493 0010 0D20     		movs	r0, #13
 494 0012 FFF7FEFF 		bl	UART_1_PutChar
 495              	.LVL98:
 496              	.L30:
 646:main.c        **** 		UART_1_PutChar(*ptr++);
 497              		.loc 1 646 0 is_stmt 1 discriminator 2
 498 0016 661C     		adds	r6, r4, #1
 499              	.LVL99:
 500 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 501 001a FFF7FEFF 		bl	UART_1_PutChar
 502              	.LVL100:
 644:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 503              		.loc 1 644 0 discriminator 2
 504 001e 0135     		adds	r5, r5, #1
 505              	.LVL101:
 506              		.loc 1 646 0 discriminator 2
 507 0020 3446     		mov	r4, r6
 508              	.LVL102:
 509              	.L29:
 644:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 510              		.loc 1 644 0 discriminator 1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 22


 511 0022 BD42     		cmp	r5, r7
 512 0024 F1DB     		blt	.L31
 647:main.c        **** 	}
 648:main.c        **** 	return len;
 649:main.c        **** }
 513              		.loc 1 649 0
 514 0026 3846     		mov	r0, r7
 515 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 516              		.cfi_endproc
 517              	.LFE64:
 518              		.size	_write, .-_write
 519 002a 00BF     		.section	.text._read,"ax",%progbits
 520              		.align	2
 521              		.global	_read
 522              		.thumb
 523              		.thumb_func
 524              		.type	_read, %function
 525              	_read:
 526              	.LFB65:
 650:main.c        **** 
 651:main.c        **** int _read (int file, char *ptr, int count)
 652:main.c        **** {
 527              		.loc 1 652 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              	.LVL103:
 532 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 533              		.cfi_def_cfa_offset 24
 534              		.cfi_offset 3, -24
 535              		.cfi_offset 4, -20
 536              		.cfi_offset 5, -16
 537              		.cfi_offset 6, -12
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 0F46     		mov	r7, r1
 541 0004 1446     		mov	r4, r2
 542              	.LVL104:
 653:main.c        ****     int chs = 0;
 543              		.loc 1 653 0
 544 0006 0026     		movs	r6, #0
 654:main.c        ****     char ch;
 655:main.c        ****  
 656:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 657:main.c        ****     while(count > 0) {
 545              		.loc 1 657 0
 546 0008 12E0     		b	.L35
 547              	.LVL105:
 548              	.L38:
 658:main.c        ****         ch = UART_1_GetChar();
 549              		.loc 1 658 0
 550 000a FFF7FEFF 		bl	UART_1_GetChar
 551              	.LVL106:
 659:main.c        ****         if(ch != 0) {
 552              		.loc 1 659 0
 553 000e 0546     		mov	r5, r0
 554 0010 70B1     		cbz	r0, .L35
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 23


 660:main.c        ****             UART_1_PutChar(ch);
 555              		.loc 1 660 0
 556 0012 FFF7FEFF 		bl	UART_1_PutChar
 557              	.LVL107:
 661:main.c        ****             chs++;
 558              		.loc 1 661 0
 559 0016 0136     		adds	r6, r6, #1
 560              	.LVL108:
 662:main.c        ****             if(ch == '\r') {
 561              		.loc 1 662 0
 562 0018 0D2D     		cmp	r5, #13
 563 001a 03D1     		bne	.L36
 564              	.LVL109:
 663:main.c        ****                 ch = '\n';
 664:main.c        ****                 UART_1_PutChar(ch);
 565              		.loc 1 664 0
 566 001c 0A20     		movs	r0, #10
 567 001e FFF7FEFF 		bl	UART_1_PutChar
 568              	.LVL110:
 663:main.c        ****                 ch = '\n';
 569              		.loc 1 663 0
 570 0022 0A25     		movs	r5, #10
 571              	.LVL111:
 572              	.L36:
 665:main.c        ****             }
 666:main.c        ****             *ptr++ = ch;
 573              		.loc 1 666 0
 574 0024 7B1C     		adds	r3, r7, #1
 575              	.LVL112:
 576 0026 3D70     		strb	r5, [r7]
 667:main.c        ****             count--;
 577              		.loc 1 667 0
 578 0028 013C     		subs	r4, r4, #1
 579              	.LVL113:
 668:main.c        ****             if(ch == '\n') break;
 580              		.loc 1 668 0
 581 002a 0A2D     		cmp	r5, #10
 582 002c 02D0     		beq	.L37
 666:main.c        ****             count--;
 583              		.loc 1 666 0
 584 002e 1F46     		mov	r7, r3
 585              	.LVL114:
 586              	.L35:
 657:main.c        ****         ch = UART_1_GetChar();
 587              		.loc 1 657 0
 588 0030 002C     		cmp	r4, #0
 589 0032 EADC     		bgt	.L38
 590              	.LVL115:
 591              	.L37:
 669:main.c        ****         }
 670:main.c        ****     }
 671:main.c        ****     return chs;
 672:main.c        **** }
 592              		.loc 1 672 0
 593 0034 3046     		mov	r0, r6
 594 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 595              		.cfi_endproc
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 24


 596              	.LFE65:
 597              		.size	_read, .-_read
 598              		.text
 599              	.Letext0:
 600              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 601              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 602              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 603              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 604              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 605              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 606              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 607              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 608              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 609              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 610              		.file 12 "Generated_Source\\PSoC5/SW1.h"
 611              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 612              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9
 613              		.section	.debug_info,"",%progbits
 614              	.Ldebug_info0:
 615 0000 2F070000 		.4byte	0x72f
 616 0004 0400     		.2byte	0x4
 617 0006 00000000 		.4byte	.Ldebug_abbrev0
 618 000a 04       		.byte	0x4
 619 000b 01       		.uleb128 0x1
 620 000c 56000000 		.4byte	.LASF73
 621 0010 01       		.byte	0x1
 622 0011 78030000 		.4byte	.LASF74
 623 0015 0E030000 		.4byte	.LASF75
 624 0019 00000000 		.4byte	.Ldebug_ranges0+0
 625 001d 00000000 		.4byte	0
 626 0021 00000000 		.4byte	.Ldebug_line0
 627 0025 02       		.uleb128 0x2
 628 0026 04       		.byte	0x4
 629 0027 04       		.byte	0x4
 630 0028 5B010000 		.4byte	.LASF0
 631 002c 02       		.uleb128 0x2
 632 002d 01       		.byte	0x1
 633 002e 06       		.byte	0x6
 634 002f 70020000 		.4byte	.LASF1
 635 0033 02       		.uleb128 0x2
 636 0034 01       		.byte	0x1
 637 0035 08       		.byte	0x8
 638 0036 EB010000 		.4byte	.LASF2
 639 003a 02       		.uleb128 0x2
 640 003b 02       		.byte	0x2
 641 003c 05       		.byte	0x5
 642 003d 0F000000 		.4byte	.LASF3
 643 0041 03       		.uleb128 0x3
 644 0042 40000000 		.4byte	.LASF5
 645 0046 02       		.byte	0x2
 646 0047 2B       		.byte	0x2b
 647 0048 4C000000 		.4byte	0x4c
 648 004c 02       		.uleb128 0x2
 649 004d 02       		.byte	0x2
 650 004e 07       		.byte	0x7
 651 004f C7020000 		.4byte	.LASF4
 652 0053 03       		.uleb128 0x3
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 25


 653 0054 CB030000 		.4byte	.LASF6
 654 0058 02       		.byte	0x2
 655 0059 3F       		.byte	0x3f
 656 005a 5E000000 		.4byte	0x5e
 657 005e 02       		.uleb128 0x2
 658 005f 04       		.byte	0x4
 659 0060 05       		.byte	0x5
 660 0061 F3020000 		.4byte	.LASF7
 661 0065 02       		.uleb128 0x2
 662 0066 04       		.byte	0x4
 663 0067 07       		.byte	0x7
 664 0068 8A030000 		.4byte	.LASF8
 665 006c 02       		.uleb128 0x2
 666 006d 08       		.byte	0x8
 667 006e 05       		.byte	0x5
 668 006f 61010000 		.4byte	.LASF9
 669 0073 02       		.uleb128 0x2
 670 0074 08       		.byte	0x8
 671 0075 07       		.byte	0x7
 672 0076 8F020000 		.4byte	.LASF10
 673 007a 04       		.uleb128 0x4
 674 007b 04       		.byte	0x4
 675 007c 05       		.byte	0x5
 676 007d 696E7400 		.ascii	"int\000"
 677 0081 02       		.uleb128 0x2
 678 0082 04       		.byte	0x4
 679 0083 07       		.byte	0x7
 680 0084 A6020000 		.4byte	.LASF11
 681 0088 03       		.uleb128 0x3
 682 0089 B3020000 		.4byte	.LASF12
 683 008d 03       		.byte	0x3
 684 008e 21       		.byte	0x21
 685 008f 41000000 		.4byte	0x41
 686 0093 03       		.uleb128 0x3
 687 0094 06030000 		.4byte	.LASF13
 688 0098 03       		.byte	0x3
 689 0099 2C       		.byte	0x2c
 690 009a 53000000 		.4byte	0x53
 691 009e 05       		.uleb128 0x5
 692 009f 1F010000 		.4byte	.LASF14
 693 00a3 04       		.byte	0x4
 694 00a4 9201     		.2byte	0x192
 695 00a6 33000000 		.4byte	0x33
 696 00aa 05       		.uleb128 0x5
 697 00ab 71030000 		.4byte	.LASF15
 698 00af 04       		.byte	0x4
 699 00b0 9401     		.2byte	0x194
 700 00b2 65000000 		.4byte	0x65
 701 00b6 02       		.uleb128 0x2
 702 00b7 08       		.byte	0x8
 703 00b8 04       		.byte	0x4
 704 00b9 15040000 		.4byte	.LASF16
 705 00bd 02       		.uleb128 0x2
 706 00be 01       		.byte	0x1
 707 00bf 08       		.byte	0x8
 708 00c0 9D010000 		.4byte	.LASF17
 709 00c4 05       		.uleb128 0x5
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 26


 710 00c5 28020000 		.4byte	.LASF18
 711 00c9 04       		.byte	0x4
 712 00ca 4E02     		.2byte	0x24e
 713 00cc D0000000 		.4byte	0xd0
 714 00d0 06       		.uleb128 0x6
 715 00d1 04       		.byte	0x4
 716 00d2 D6000000 		.4byte	0xd6
 717 00d6 07       		.uleb128 0x7
 718 00d7 02       		.uleb128 0x2
 719 00d8 04       		.byte	0x4
 720 00d9 07       		.byte	0x7
 721 00da 19000000 		.4byte	.LASF19
 722 00de 06       		.uleb128 0x6
 723 00df 04       		.byte	0x4
 724 00e0 BD000000 		.4byte	0xbd
 725 00e4 02       		.uleb128 0x2
 726 00e5 08       		.byte	0x8
 727 00e6 04       		.byte	0x4
 728 00e7 0A020000 		.4byte	.LASF20
 729 00eb 08       		.uleb128 0x8
 730 00ec F0000000 		.4byte	.LASF76
 731 00f0 08       		.byte	0x8
 732 00f1 05       		.byte	0x5
 733 00f2 11       		.byte	0x11
 734 00f3 24010000 		.4byte	0x124
 735 00f7 09       		.uleb128 0x9
 736 00f8 6C3300   		.ascii	"l3\000"
 737 00fb 05       		.byte	0x5
 738 00fc 12       		.byte	0x12
 739 00fd 88000000 		.4byte	0x88
 740 0101 00       		.byte	0
 741 0102 09       		.uleb128 0x9
 742 0103 6C3100   		.ascii	"l1\000"
 743 0106 05       		.byte	0x5
 744 0107 14       		.byte	0x14
 745 0108 88000000 		.4byte	0x88
 746 010c 02       		.byte	0x2
 747 010d 09       		.uleb128 0x9
 748 010e 723100   		.ascii	"r1\000"
 749 0111 05       		.byte	0x5
 750 0112 15       		.byte	0x15
 751 0113 88000000 		.4byte	0x88
 752 0117 04       		.byte	0x4
 753 0118 09       		.uleb128 0x9
 754 0119 723300   		.ascii	"r3\000"
 755 011c 05       		.byte	0x5
 756 011d 17       		.byte	0x17
 757 011e 88000000 		.4byte	0x88
 758 0122 06       		.byte	0x6
 759 0123 00       		.byte	0
 760 0124 0A       		.uleb128 0xa
 761 0125 34000000 		.4byte	.LASF77
 762 0129 01       		.byte	0x1
 763 012a 2E       		.byte	0x2e
 764 012b 7A000000 		.4byte	0x7a
 765 012f 00000000 		.4byte	.LFB63
 766 0133 60020000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 27


 767 0137 01       		.uleb128 0x1
 768 0138 9C       		.byte	0x9c
 769 0139 C7040000 		.4byte	0x4c7
 770 013d 0B       		.uleb128 0xb
 771 013e 2D000000 		.4byte	.LASF21
 772 0142 01       		.byte	0x1
 773 0143 31       		.byte	0x31
 774 0144 7A000000 		.4byte	0x7a
 775 0148 00000000 		.4byte	.LLST0
 776 014c 0B       		.uleb128 0xb
 777 014d F9010000 		.4byte	.LASF22
 778 0151 01       		.byte	0x1
 779 0152 34       		.byte	0x34
 780 0153 7A000000 		.4byte	0x7a
 781 0157 36000000 		.4byte	.LLST1
 782 015b 0B       		.uleb128 0xb
 783 015c BC030000 		.4byte	.LASF23
 784 0160 01       		.byte	0x1
 785 0161 37       		.byte	0x37
 786 0162 7A000000 		.4byte	0x7a
 787 0166 6C000000 		.4byte	.LLST2
 788 016a 0C       		.uleb128 0xc
 789 016b E8020000 		.4byte	.LASF24
 790 016f 01       		.byte	0x1
 791 0170 3A       		.byte	0x3a
 792 0171 7A000000 		.4byte	0x7a
 793 0175 00       		.byte	0
 794 0176 0C       		.uleb128 0xc
 795 0177 35020000 		.4byte	.LASF25
 796 017b 01       		.byte	0x1
 797 017c 3B       		.byte	0x3b
 798 017d 7A000000 		.4byte	0x7a
 799 0181 00       		.byte	0
 800 0182 0C       		.uleb128 0xc
 801 0183 B2010000 		.4byte	.LASF26
 802 0187 01       		.byte	0x1
 803 0188 3C       		.byte	0x3c
 804 0189 7A000000 		.4byte	0x7a
 805 018d 00       		.byte	0
 806 018e 0B       		.uleb128 0xb
 807 018f BC020000 		.4byte	.LASF27
 808 0193 01       		.byte	0x1
 809 0194 3F       		.byte	0x3f
 810 0195 AA000000 		.4byte	0xaa
 811 0199 C5000000 		.4byte	.LLST3
 812 019d 0D       		.uleb128 0xd
 813 019e C1020000 		.4byte	.LASF28
 814 01a2 01       		.byte	0x1
 815 01a3 42       		.byte	0x42
 816 01a4 9E000000 		.4byte	0x9e
 817 01a8 70       		.sleb128 -16
 818 01a9 0E       		.uleb128 0xe
 819 01aa 0C010000 		.4byte	.LASF29
 820 01ae 01       		.byte	0x1
 821 01af 45       		.byte	0x45
 822 01b0 7A000000 		.4byte	0x7a
 823 01b4 0852     		.2byte	0x5208
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 28


 824 01b6 0E       		.uleb128 0xe
 825 01b7 F9000000 		.4byte	.LASF30
 826 01bb 01       		.byte	0x1
 827 01bc 46       		.byte	0x46
 828 01bd 7A000000 		.4byte	0x7a
 829 01c1 5046     		.2byte	0x4650
 830 01c3 0E       		.uleb128 0xe
 831 01c4 D5030000 		.4byte	.LASF31
 832 01c8 01       		.byte	0x1
 833 01c9 47       		.byte	0x47
 834 01ca 7A000000 		.4byte	0x7a
 835 01ce 4858     		.2byte	0x5848
 836 01d0 0E       		.uleb128 0xe
 837 01d1 F1030000 		.4byte	.LASF32
 838 01d5 01       		.byte	0x1
 839 01d6 48       		.byte	0x48
 840 01d7 7A000000 		.4byte	0x7a
 841 01db FC53     		.2byte	0x53fc
 842 01dd 0E       		.uleb128 0xe
 843 01de 2F040000 		.4byte	.LASF33
 844 01e2 01       		.byte	0x1
 845 01e3 4A       		.byte	0x4a
 846 01e4 7A000000 		.4byte	0x7a
 847 01e8 A116     		.2byte	0x16a1
 848 01ea 0E       		.uleb128 0xe
 849 01eb 1C040000 		.4byte	.LASF34
 850 01ef 01       		.byte	0x1
 851 01f0 4B       		.byte	0x4b
 852 01f1 7A000000 		.4byte	0x7a
 853 01f5 9411     		.2byte	0x1194
 854 01f7 0E       		.uleb128 0xe
 855 01f8 5D020000 		.4byte	.LASF35
 856 01fc 01       		.byte	0x1
 857 01fd 4C       		.byte	0x4c
 858 01fe 7A000000 		.4byte	0x7a
 859 0202 AA11     		.2byte	0x11aa
 860 0204 0E       		.uleb128 0xe
 861 0205 7C020000 		.4byte	.LASF36
 862 0209 01       		.byte	0x1
 863 020a 4D       		.byte	0x4d
 864 020b 7A000000 		.4byte	0x7a
 865 020f 9518     		.2byte	0x1895
 866 0211 0E       		.uleb128 0xe
 867 0212 22000000 		.4byte	.LASF37
 868 0216 01       		.byte	0x1
 869 0217 4F       		.byte	0x4f
 870 0218 7A000000 		.4byte	0x7a
 871 021c BC34     		.2byte	0x34bc
 872 021e 0E       		.uleb128 0xe
 873 021f 7F030000 		.4byte	.LASF38
 874 0223 01       		.byte	0x1
 875 0224 50       		.byte	0x50
 876 0225 7A000000 		.4byte	0x7a
 877 0229 9E46     		.2byte	0x469e
 878 022b 0B       		.uleb128 0xb
 879 022c B4030000 		.4byte	.LASF39
 880 0230 01       		.byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 29


 881 0231 53       		.byte	0x53
 882 0232 7A000000 		.4byte	0x7a
 883 0236 1C010000 		.4byte	.LLST4
 884 023a 0B       		.uleb128 0xb
 885 023b 4F030000 		.4byte	.LASF40
 886 023f 01       		.byte	0x1
 887 0240 54       		.byte	0x54
 888 0241 7A000000 		.4byte	0x7a
 889 0245 51010000 		.4byte	.LLST5
 890 0249 0B       		.uleb128 0xb
 891 024a A2010000 		.4byte	.LASF41
 892 024e 01       		.byte	0x1
 893 024f 55       		.byte	0x55
 894 0250 7A000000 		.4byte	0x7a
 895 0254 A5010000 		.4byte	.LLST6
 896 0258 0B       		.uleb128 0xb
 897 0259 FE010000 		.4byte	.LASF42
 898 025d 01       		.byte	0x1
 899 025e 56       		.byte	0x56
 900 025f 25000000 		.4byte	0x25
 901 0263 FC010000 		.4byte	.LLST7
 902 0267 0B       		.uleb128 0xb
 903 0268 6F010000 		.4byte	.LASF43
 904 026c 01       		.byte	0x1
 905 026d 57       		.byte	0x57
 906 026e 25000000 		.4byte	0x25
 907 0272 77020000 		.4byte	.LLST8
 908 0276 0B       		.uleb128 0xb
 909 0277 FC020000 		.4byte	.LASF44
 910 027b 01       		.byte	0x1
 911 027c 58       		.byte	0x58
 912 027d 25000000 		.4byte	0x25
 913 0281 BB020000 		.4byte	.LLST9
 914 0285 0F       		.uleb128 0xf
 915 0286 50000000 		.4byte	.LASF45
 916 028a 01       		.byte	0x1
 917 028b 59       		.byte	0x59
 918 028c C7040000 		.4byte	0x4c7
 919 0290 02       		.uleb128 0x2
 920 0291 91       		.byte	0x91
 921 0292 4C       		.sleb128 -52
 922 0293 0B       		.uleb128 0xb
 923 0294 BF010000 		.4byte	.LASF46
 924 0298 01       		.byte	0x1
 925 0299 5A       		.byte	0x5a
 926 029a 25000000 		.4byte	0x25
 927 029e F4020000 		.4byte	.LLST10
 928 02a2 0B       		.uleb128 0xb
 929 02a3 7B010000 		.4byte	.LASF47
 930 02a7 01       		.byte	0x1
 931 02a8 5B       		.byte	0x5b
 932 02a9 25000000 		.4byte	0x25
 933 02ad 22030000 		.4byte	.LLST11
 934 02b1 10       		.uleb128 0x10
 935 02b2 6900     		.ascii	"i\000"
 936 02b4 01       		.byte	0x1
 937 02b5 5C       		.byte	0x5c
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 30


 938 02b6 7A000000 		.4byte	0x7a
 939 02ba 3A030000 		.4byte	.LLST12
 940 02be 0B       		.uleb128 0xb
 941 02bf E8030000 		.4byte	.LASF48
 942 02c3 01       		.byte	0x1
 943 02c4 5D       		.byte	0x5d
 944 02c5 25000000 		.4byte	0x25
 945 02c9 4D030000 		.4byte	.LLST13
 946 02cd 0B       		.uleb128 0xb
 947 02ce 04040000 		.4byte	.LASF49
 948 02d2 01       		.byte	0x1
 949 02d3 5E       		.byte	0x5e
 950 02d4 25000000 		.4byte	0x25
 951 02d8 7B030000 		.4byte	.LLST14
 952 02dc 11       		.uleb128 0x11
 953 02dd 72656600 		.ascii	"ref\000"
 954 02e1 01       		.byte	0x1
 955 02e2 61       		.byte	0x61
 956 02e3 EB000000 		.4byte	0xeb
 957 02e7 02       		.uleb128 0x2
 958 02e8 91       		.byte	0x91
 959 02e9 44       		.sleb128 -60
 960 02ea 11       		.uleb128 0x11
 961 02eb 64696700 		.ascii	"dig\000"
 962 02ef 01       		.byte	0x1
 963 02f0 62       		.byte	0x62
 964 02f1 EB000000 		.4byte	0xeb
 965 02f5 03       		.uleb128 0x3
 966 02f6 91       		.byte	0x91
 967 02f7 BC7F     		.sleb128 -68
 968 02f9 0B       		.uleb128 0xb
 969 02fa C8010000 		.4byte	.LASF50
 970 02fe 01       		.byte	0x1
 971 02ff 74       		.byte	0x74
 972 0300 9E000000 		.4byte	0x9e
 973 0304 A9030000 		.4byte	.LLST15
 974 0308 12       		.uleb128 0x12
 975 0309 12000000 		.4byte	.LVL2
 976 030d F3050000 		.4byte	0x5f3
 977 0311 12       		.uleb128 0x12
 978 0312 16000000 		.4byte	.LVL3
 979 0316 FA050000 		.4byte	0x5fa
 980 031a 12       		.uleb128 0x12
 981 031b 1A000000 		.4byte	.LVL4
 982 031f 01060000 		.4byte	0x601
 983 0323 12       		.uleb128 0x12
 984 0324 1E000000 		.4byte	.LVL5
 985 0328 0E060000 		.4byte	0x60e
 986 032c 13       		.uleb128 0x13
 987 032d 26000000 		.4byte	.LVL6
 988 0331 1B060000 		.4byte	0x61b
 989 0335 44030000 		.4byte	0x344
 990 0339 14       		.uleb128 0x14
 991 033a 01       		.uleb128 0x1
 992 033b 51       		.byte	0x51
 993 033c 01       		.uleb128 0x1
 994 033d 30       		.byte	0x30
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 31


 995 033e 14       		.uleb128 0x14
 996 033f 01       		.uleb128 0x1
 997 0340 50       		.byte	0x50
 998 0341 01       		.uleb128 0x1
 999 0342 30       		.byte	0x30
 1000 0343 00       		.byte	0
 1001 0344 12       		.uleb128 0x12
 1002 0345 2C000000 		.4byte	.LVL7
 1003 0349 31060000 		.4byte	0x631
 1004 034d 13       		.uleb128 0x13
 1005 034e 40000000 		.4byte	.LVL8
 1006 0352 42060000 		.4byte	0x642
 1007 0356 77030000 		.4byte	0x377
 1008 035a 14       		.uleb128 0x14
 1009 035b 01       		.uleb128 0x1
 1010 035c 53       		.byte	0x53
 1011 035d 03       		.uleb128 0x3
 1012 035e 0A       		.byte	0xa
 1013 035f FC53     		.2byte	0x53fc
 1014 0361 14       		.uleb128 0x14
 1015 0362 01       		.uleb128 0x1
 1016 0363 52       		.byte	0x52
 1017 0364 03       		.uleb128 0x3
 1018 0365 0A       		.byte	0xa
 1019 0366 4858     		.2byte	0x5848
 1020 0368 14       		.uleb128 0x14
 1021 0369 01       		.uleb128 0x1
 1022 036a 51       		.byte	0x51
 1023 036b 03       		.uleb128 0x3
 1024 036c 0A       		.byte	0xa
 1025 036d 5046     		.2byte	0x4650
 1026 036f 14       		.uleb128 0x14
 1027 0370 01       		.uleb128 0x1
 1028 0371 50       		.byte	0x50
 1029 0372 03       		.uleb128 0x3
 1030 0373 0A       		.byte	0xa
 1031 0374 0852     		.2byte	0x5208
 1032 0376 00       		.byte	0
 1033 0377 12       		.uleb128 0x12
 1034 0378 44000000 		.4byte	.LVL9
 1035 037c 62060000 		.4byte	0x662
 1036 0380 13       		.uleb128 0x13
 1037 0381 4A000000 		.4byte	.LVL10
 1038 0385 69060000 		.4byte	0x669
 1039 0389 93030000 		.4byte	0x393
 1040 038d 14       		.uleb128 0x14
 1041 038e 01       		.uleb128 0x1
 1042 038f 50       		.byte	0x50
 1043 0390 01       		.uleb128 0x1
 1044 0391 31       		.byte	0x31
 1045 0392 00       		.byte	0
 1046 0393 13       		.uleb128 0x13
 1047 0394 50000000 		.4byte	.LVL11
 1048 0398 7A060000 		.4byte	0x67a
 1049 039c A6030000 		.4byte	0x3a6
 1050 03a0 14       		.uleb128 0x14
 1051 03a1 01       		.uleb128 0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 32


 1052 03a2 50       		.byte	0x50
 1053 03a3 01       		.uleb128 0x1
 1054 03a4 30       		.byte	0x30
 1055 03a5 00       		.byte	0
 1056 03a6 12       		.uleb128 0x12
 1057 03a7 58000000 		.4byte	.LVL13
 1058 03ab 8B060000 		.4byte	0x68b
 1059 03af 13       		.uleb128 0x13
 1060 03b0 60000000 		.4byte	.LVL16
 1061 03b4 96060000 		.4byte	0x696
 1062 03b8 C2030000 		.4byte	0x3c2
 1063 03bc 14       		.uleb128 0x14
 1064 03bd 01       		.uleb128 0x1
 1065 03be 50       		.byte	0x50
 1066 03bf 01       		.uleb128 0x1
 1067 03c0 3A       		.byte	0x3a
 1068 03c1 00       		.byte	0
 1069 03c2 13       		.uleb128 0x13
 1070 03c3 6C000000 		.4byte	.LVL18
 1071 03c7 A7060000 		.4byte	0x6a7
 1072 03cb D6030000 		.4byte	0x3d6
 1073 03cf 14       		.uleb128 0x14
 1074 03d0 01       		.uleb128 0x1
 1075 03d1 50       		.byte	0x50
 1076 03d2 02       		.uleb128 0x2
 1077 03d3 09       		.byte	0x9
 1078 03d4 F0       		.byte	0xf0
 1079 03d5 00       		.byte	0
 1080 03d6 13       		.uleb128 0x13
 1081 03d7 8E000000 		.4byte	.LVL24
 1082 03db 96060000 		.4byte	0x696
 1083 03df E9030000 		.4byte	0x3e9
 1084 03e3 14       		.uleb128 0x14
 1085 03e4 01       		.uleb128 0x1
 1086 03e5 50       		.byte	0x50
 1087 03e6 01       		.uleb128 0x1
 1088 03e7 31       		.byte	0x31
 1089 03e8 00       		.byte	0
 1090 03e9 13       		.uleb128 0x13
 1091 03ea BA000000 		.4byte	.LVL31
 1092 03ee 96060000 		.4byte	0x696
 1093 03f2 FC030000 		.4byte	0x3fc
 1094 03f6 14       		.uleb128 0x14
 1095 03f7 01       		.uleb128 0x1
 1096 03f8 50       		.byte	0x50
 1097 03f9 01       		.uleb128 0x1
 1098 03fa 31       		.byte	0x31
 1099 03fb 00       		.byte	0
 1100 03fc 13       		.uleb128 0x13
 1101 03fd DC000000 		.4byte	.LVL35
 1102 0401 B8060000 		.4byte	0x6b8
 1103 0405 10040000 		.4byte	0x410
 1104 0409 14       		.uleb128 0x14
 1105 040a 01       		.uleb128 0x1
 1106 040b 50       		.byte	0x50
 1107 040c 02       		.uleb128 0x2
 1108 040d 91       		.byte	0x91
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 33


 1109 040e 44       		.sleb128 -60
 1110 040f 00       		.byte	0
 1111 0410 13       		.uleb128 0x13
 1112 0411 E2000000 		.4byte	.LVL36
 1113 0415 CF060000 		.4byte	0x6cf
 1114 0419 25040000 		.4byte	0x425
 1115 041d 14       		.uleb128 0x14
 1116 041e 01       		.uleb128 0x1
 1117 041f 50       		.byte	0x50
 1118 0420 03       		.uleb128 0x3
 1119 0421 91       		.byte	0x91
 1120 0422 BC7F     		.sleb128 -68
 1121 0424 00       		.byte	0
 1122 0425 12       		.uleb128 0x12
 1123 0426 78010000 		.4byte	.LVL65
 1124 042a E0060000 		.4byte	0x6e0
 1125 042e 13       		.uleb128 0x13
 1126 042f 9A010000 		.4byte	.LVL72
 1127 0433 E0060000 		.4byte	0x6e0
 1128 0437 43040000 		.4byte	0x443
 1129 043b 14       		.uleb128 0x14
 1130 043c 01       		.uleb128 0x1
 1131 043d 50       		.byte	0x50
 1132 043e 03       		.uleb128 0x3
 1133 043f F5       		.byte	0xf5
 1134 0440 05       		.uleb128 0x5
 1135 0441 25       		.uleb128 0x25
 1136 0442 00       		.byte	0
 1137 0443 13       		.uleb128 0x13
 1138 0444 D2010000 		.4byte	.LVL82
 1139 0448 FB060000 		.4byte	0x6fb
 1140 044c 5E040000 		.4byte	0x45e
 1141 0450 14       		.uleb128 0x14
 1142 0451 01       		.uleb128 0x1
 1143 0452 52       		.byte	0x52
 1144 0453 03       		.uleb128 0x3
 1145 0454 F5       		.byte	0xf5
 1146 0455 06       		.uleb128 0x6
 1147 0456 25       		.uleb128 0x25
 1148 0457 14       		.uleb128 0x14
 1149 0458 01       		.uleb128 0x1
 1150 0459 51       		.byte	0x51
 1151 045a 02       		.uleb128 0x2
 1152 045b 79       		.byte	0x79
 1153 045c 00       		.sleb128 0
 1154 045d 00       		.byte	0
 1155 045e 13       		.uleb128 0x13
 1156 045f D8010000 		.4byte	.LVL83
 1157 0463 96060000 		.4byte	0x696
 1158 0467 71040000 		.4byte	0x471
 1159 046b 14       		.uleb128 0x14
 1160 046c 01       		.uleb128 0x1
 1161 046d 50       		.byte	0x50
 1162 046e 01       		.uleb128 0x1
 1163 046f 31       		.byte	0x31
 1164 0470 00       		.byte	0
 1165 0471 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 34


 1166 0472 FC010000 		.4byte	.LVL87
 1167 0476 A7060000 		.4byte	0x6a7
 1168 047a 85040000 		.4byte	0x485
 1169 047e 14       		.uleb128 0x14
 1170 047f 01       		.uleb128 0x1
 1171 0480 50       		.byte	0x50
 1172 0481 02       		.uleb128 0x2
 1173 0482 09       		.byte	0x9
 1174 0483 F0       		.byte	0xf0
 1175 0484 00       		.byte	0
 1176 0485 12       		.uleb128 0x12
 1177 0486 10020000 		.4byte	.LVL90
 1178 048a 01060000 		.4byte	0x601
 1179 048e 13       		.uleb128 0x13
 1180 048f 1A020000 		.4byte	.LVL92
 1181 0493 96060000 		.4byte	0x696
 1182 0497 A1040000 		.4byte	0x4a1
 1183 049b 14       		.uleb128 0x14
 1184 049c 01       		.uleb128 0x1
 1185 049d 50       		.byte	0x50
 1186 049e 01       		.uleb128 0x1
 1187 049f 31       		.byte	0x31
 1188 04a0 00       		.byte	0
 1189 04a1 13       		.uleb128 0x13
 1190 04a2 20020000 		.4byte	.LVL93
 1191 04a6 B8060000 		.4byte	0x6b8
 1192 04aa B5040000 		.4byte	0x4b5
 1193 04ae 14       		.uleb128 0x14
 1194 04af 01       		.uleb128 0x1
 1195 04b0 50       		.byte	0x50
 1196 04b1 02       		.uleb128 0x2
 1197 04b2 91       		.byte	0x91
 1198 04b3 44       		.sleb128 -60
 1199 04b4 00       		.byte	0
 1200 04b5 15       		.uleb128 0x15
 1201 04b6 26020000 		.4byte	.LVL94
 1202 04ba CF060000 		.4byte	0x6cf
 1203 04be 14       		.uleb128 0x14
 1204 04bf 01       		.uleb128 0x1
 1205 04c0 50       		.byte	0x50
 1206 04c1 03       		.uleb128 0x3
 1207 04c2 91       		.byte	0x91
 1208 04c3 BC7F     		.sleb128 -68
 1209 04c5 00       		.byte	0
 1210 04c6 00       		.byte	0
 1211 04c7 16       		.uleb128 0x16
 1212 04c8 25000000 		.4byte	0x25
 1213 04cc D7040000 		.4byte	0x4d7
 1214 04d0 17       		.uleb128 0x17
 1215 04d1 D7000000 		.4byte	0xd7
 1216 04d5 02       		.byte	0x2
 1217 04d6 00       		.byte	0
 1218 04d7 18       		.uleb128 0x18
 1219 04d8 39000000 		.4byte	.LASF52
 1220 04dc 01       		.byte	0x1
 1221 04dd 8002     		.2byte	0x280
 1222 04df 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 35


 1223 04e3 00000000 		.4byte	.LFB64
 1224 04e7 2A000000 		.4byte	.LFE64-.LFB64
 1225 04eb 01       		.uleb128 0x1
 1226 04ec 9C       		.byte	0x9c
 1227 04ed 4C050000 		.4byte	0x54c
 1228 04f1 19       		.uleb128 0x19
 1229 04f2 4B000000 		.4byte	.LASF51
 1230 04f6 01       		.byte	0x1
 1231 04f7 8002     		.2byte	0x280
 1232 04f9 7A000000 		.4byte	0x7a
 1233 04fd BC030000 		.4byte	.LLST16
 1234 0501 1A       		.uleb128 0x1a
 1235 0502 70747200 		.ascii	"ptr\000"
 1236 0506 01       		.byte	0x1
 1237 0507 8002     		.2byte	0x280
 1238 0509 DE000000 		.4byte	0xde
 1239 050d DD030000 		.4byte	.LLST17
 1240 0511 1A       		.uleb128 0x1a
 1241 0512 6C656E00 		.ascii	"len\000"
 1242 0516 01       		.byte	0x1
 1243 0517 8002     		.2byte	0x280
 1244 0519 7A000000 		.4byte	0x7a
 1245 051d 11040000 		.4byte	.LLST18
 1246 0521 1B       		.uleb128 0x1b
 1247 0522 6E00     		.ascii	"n\000"
 1248 0524 01       		.byte	0x1
 1249 0525 8302     		.2byte	0x283
 1250 0527 7A000000 		.4byte	0x7a
 1251 052b 2F040000 		.4byte	.LLST19
 1252 052f 13       		.uleb128 0x13
 1253 0530 16000000 		.4byte	.LVL98
 1254 0534 16070000 		.4byte	0x716
 1255 0538 42050000 		.4byte	0x542
 1256 053c 14       		.uleb128 0x14
 1257 053d 01       		.uleb128 0x1
 1258 053e 50       		.byte	0x50
 1259 053f 01       		.uleb128 0x1
 1260 0540 3D       		.byte	0x3d
 1261 0541 00       		.byte	0
 1262 0542 12       		.uleb128 0x12
 1263 0543 1E000000 		.4byte	.LVL100
 1264 0547 16070000 		.4byte	0x716
 1265 054b 00       		.byte	0
 1266 054c 18       		.uleb128 0x18
 1267 054d 57020000 		.4byte	.LASF53
 1268 0551 01       		.byte	0x1
 1269 0552 8B02     		.2byte	0x28b
 1270 0554 7A000000 		.4byte	0x7a
 1271 0558 00000000 		.4byte	.LFB65
 1272 055c 38000000 		.4byte	.LFE65-.LFB65
 1273 0560 01       		.uleb128 0x1
 1274 0561 9C       		.byte	0x9c
 1275 0562 E2050000 		.4byte	0x5e2
 1276 0566 19       		.uleb128 0x19
 1277 0567 4B000000 		.4byte	.LASF51
 1278 056b 01       		.byte	0x1
 1279 056c 8B02     		.2byte	0x28b
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 36


 1280 056e 7A000000 		.4byte	0x7a
 1281 0572 4E040000 		.4byte	.LLST20
 1282 0576 1A       		.uleb128 0x1a
 1283 0577 70747200 		.ascii	"ptr\000"
 1284 057b 01       		.byte	0x1
 1285 057c 8B02     		.2byte	0x28b
 1286 057e DE000000 		.4byte	0xde
 1287 0582 6F040000 		.4byte	.LLST21
 1288 0586 19       		.uleb128 0x19
 1289 0587 C5030000 		.4byte	.LASF54
 1290 058b 01       		.byte	0x1
 1291 058c 8B02     		.2byte	0x28b
 1292 058e 7A000000 		.4byte	0x7a
 1293 0592 A3040000 		.4byte	.LLST22
 1294 0596 1B       		.uleb128 0x1b
 1295 0597 63687300 		.ascii	"chs\000"
 1296 059b 01       		.byte	0x1
 1297 059c 8D02     		.2byte	0x28d
 1298 059e 7A000000 		.4byte	0x7a
 1299 05a2 C1040000 		.4byte	.LLST23
 1300 05a6 1B       		.uleb128 0x1b
 1301 05a7 636800   		.ascii	"ch\000"
 1302 05aa 01       		.byte	0x1
 1303 05ab 8E02     		.2byte	0x28e
 1304 05ad BD000000 		.4byte	0xbd
 1305 05b1 E0040000 		.4byte	.LLST24
 1306 05b5 12       		.uleb128 0x12
 1307 05b6 0E000000 		.4byte	.LVL106
 1308 05ba 27070000 		.4byte	0x727
 1309 05be 13       		.uleb128 0x13
 1310 05bf 16000000 		.4byte	.LVL107
 1311 05c3 16070000 		.4byte	0x716
 1312 05c7 D2050000 		.4byte	0x5d2
 1313 05cb 14       		.uleb128 0x14
 1314 05cc 01       		.uleb128 0x1
 1315 05cd 50       		.byte	0x50
 1316 05ce 02       		.uleb128 0x2
 1317 05cf 75       		.byte	0x75
 1318 05d0 00       		.sleb128 0
 1319 05d1 00       		.byte	0
 1320 05d2 15       		.uleb128 0x15
 1321 05d3 22000000 		.4byte	.LVL110
 1322 05d7 16070000 		.4byte	0x716
 1323 05db 14       		.uleb128 0x14
 1324 05dc 01       		.uleb128 0x1
 1325 05dd 50       		.byte	0x50
 1326 05de 01       		.uleb128 0x1
 1327 05df 3A       		.byte	0x3a
 1328 05e0 00       		.byte	0
 1329 05e1 00       		.byte	0
 1330 05e2 1C       		.uleb128 0x1c
 1331 05e3 42040000 		.4byte	.LASF78
 1332 05e7 0D       		.byte	0xd
 1333 05e8 9606     		.2byte	0x696
 1334 05ea EE050000 		.4byte	0x5ee
 1335 05ee 1D       		.uleb128 0x1d
 1336 05ef 93000000 		.4byte	0x93
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 37


 1337 05f3 1E       		.uleb128 0x1e
 1338 05f4 CF010000 		.4byte	.LASF55
 1339 05f8 06       		.byte	0x6
 1340 05f9 54       		.byte	0x54
 1341 05fa 1E       		.uleb128 0x1e
 1342 05fb 16020000 		.4byte	.LASF56
 1343 05ff 07       		.byte	0x7
 1344 0600 34       		.byte	0x34
 1345 0601 1F       		.uleb128 0x1f
 1346 0602 25010000 		.4byte	.LASF57
 1347 0606 01       		.byte	0x1
 1348 0607 2A       		.byte	0x2a
 1349 0608 0E060000 		.4byte	0x60e
 1350 060c 20       		.uleb128 0x20
 1351 060d 00       		.byte	0
 1352 060e 1F       		.uleb128 0x1f
 1353 060f E4000000 		.4byte	.LASF58
 1354 0613 01       		.byte	0x1
 1355 0614 25       		.byte	0x25
 1356 0615 1B060000 		.4byte	0x61b
 1357 0619 20       		.uleb128 0x20
 1358 061a 00       		.byte	0
 1359 061b 21       		.uleb128 0x21
 1360 061c DA020000 		.4byte	.LASF59
 1361 0620 01       		.byte	0x1
 1362 0621 26       		.byte	0x26
 1363 0622 31060000 		.4byte	0x631
 1364 0626 22       		.uleb128 0x22
 1365 0627 9E000000 		.4byte	0x9e
 1366 062b 22       		.uleb128 0x22
 1367 062c AA000000 		.4byte	0xaa
 1368 0630 00       		.byte	0
 1369 0631 21       		.uleb128 0x21
 1370 0632 9C030000 		.4byte	.LASF60
 1371 0636 08       		.byte	0x8
 1372 0637 18       		.byte	0x18
 1373 0638 42060000 		.4byte	0x642
 1374 063c 22       		.uleb128 0x22
 1375 063d C4000000 		.4byte	0xc4
 1376 0641 00       		.byte	0
 1377 0642 21       		.uleb128 0x21
 1378 0643 3D020000 		.4byte	.LASF61
 1379 0647 01       		.byte	0x1
 1380 0648 29       		.byte	0x29
 1381 0649 62060000 		.4byte	0x662
 1382 064d 22       		.uleb128 0x22
 1383 064e 88000000 		.4byte	0x88
 1384 0652 22       		.uleb128 0x22
 1385 0653 88000000 		.4byte	0x88
 1386 0657 22       		.uleb128 0x22
 1387 0658 88000000 		.4byte	0x88
 1388 065c 22       		.uleb128 0x22
 1389 065d 88000000 		.4byte	0x88
 1390 0661 00       		.byte	0
 1391 0662 1E       		.uleb128 0x1e
 1392 0663 35010000 		.4byte	.LASF62
 1393 0667 05       		.byte	0x5
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 38


 1394 0668 1A       		.byte	0x1a
 1395 0669 21       		.uleb128 0x21
 1396 066a 68040000 		.4byte	.LASF63
 1397 066e 09       		.byte	0x9
 1398 066f 26       		.byte	0x26
 1399 0670 7A060000 		.4byte	0x67a
 1400 0674 22       		.uleb128 0x22
 1401 0675 9E000000 		.4byte	0x9e
 1402 0679 00       		.byte	0
 1403 067a 21       		.uleb128 0x21
 1404 067b 57030000 		.4byte	.LASF64
 1405 067f 0A       		.byte	0xa
 1406 0680 26       		.byte	0x26
 1407 0681 8B060000 		.4byte	0x68b
 1408 0685 22       		.uleb128 0x22
 1409 0686 9E000000 		.4byte	0x9e
 1410 068a 00       		.byte	0
 1411 068b 23       		.uleb128 0x23
 1412 068c 68030000 		.4byte	.LASF71
 1413 0690 0C       		.byte	0xc
 1414 0691 29       		.byte	0x29
 1415 0692 9E000000 		.4byte	0x9e
 1416 0696 21       		.uleb128 0x21
 1417 0697 4F040000 		.4byte	.LASF65
 1418 069b 0B       		.byte	0xb
 1419 069c 76       		.byte	0x76
 1420 069d A7060000 		.4byte	0x6a7
 1421 06a1 22       		.uleb128 0x22
 1422 06a2 AA000000 		.4byte	0xaa
 1423 06a6 00       		.byte	0
 1424 06a7 21       		.uleb128 0x21
 1425 06a8 DC010000 		.4byte	.LASF66
 1426 06ac 01       		.byte	0x1
 1427 06ad 27       		.byte	0x27
 1428 06ae B8060000 		.4byte	0x6b8
 1429 06b2 22       		.uleb128 0x22
 1430 06b3 9E000000 		.4byte	0x9e
 1431 06b7 00       		.byte	0
 1432 06b8 21       		.uleb128 0x21
 1433 06b9 57040000 		.4byte	.LASF67
 1434 06bd 05       		.byte	0x5
 1435 06be 1B       		.byte	0x1b
 1436 06bf C9060000 		.4byte	0x6c9
 1437 06c3 22       		.uleb128 0x22
 1438 06c4 C9060000 		.4byte	0x6c9
 1439 06c8 00       		.byte	0
 1440 06c9 06       		.uleb128 0x6
 1441 06ca 04       		.byte	0x4
 1442 06cb EB000000 		.4byte	0xeb
 1443 06cf 21       		.uleb128 0x21
 1444 06d0 89010000 		.4byte	.LASF68
 1445 06d4 05       		.byte	0x5
 1446 06d5 1C       		.byte	0x1c
 1447 06d6 E0060000 		.4byte	0x6e0
 1448 06da 22       		.uleb128 0x22
 1449 06db C9060000 		.4byte	0x6c9
 1450 06df 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 39


 1451 06e0 24       		.uleb128 0x24
 1452 06e1 47010000 		.4byte	.LASF79
 1453 06e5 0E       		.byte	0xe
 1454 06e6 5301     		.2byte	0x153
 1455 06e8 25000000 		.4byte	0x25
 1456 06ec FB060000 		.4byte	0x6fb
 1457 06f0 22       		.uleb128 0x22
 1458 06f1 25000000 		.4byte	0x25
 1459 06f5 22       		.uleb128 0x22
 1460 06f6 25000000 		.4byte	0x25
 1461 06fa 00       		.byte	0
 1462 06fb 21       		.uleb128 0x21
 1463 06fc AF030000 		.4byte	.LASF69
 1464 0700 01       		.byte	0x1
 1465 0701 2B       		.byte	0x2b
 1466 0702 16070000 		.4byte	0x716
 1467 0706 22       		.uleb128 0x22
 1468 0707 9E000000 		.4byte	0x9e
 1469 070b 22       		.uleb128 0x22
 1470 070c 7A000000 		.4byte	0x7a
 1471 0710 22       		.uleb128 0x22
 1472 0711 25000000 		.4byte	0x25
 1473 0715 00       		.byte	0
 1474 0716 21       		.uleb128 0x21
 1475 0717 4C010000 		.4byte	.LASF70
 1476 071b 06       		.byte	0x6
 1477 071c 8A       		.byte	0x8a
 1478 071d 27070000 		.4byte	0x727
 1479 0721 22       		.uleb128 0x22
 1480 0722 9E000000 		.4byte	0x9e
 1481 0726 00       		.byte	0
 1482 0727 23       		.uleb128 0x23
 1483 0728 00000000 		.4byte	.LASF72
 1484 072c 06       		.byte	0x6
 1485 072d 71       		.byte	0x71
 1486 072e 9E000000 		.4byte	0x9e
 1487 0732 00       		.byte	0
 1488              		.section	.debug_abbrev,"",%progbits
 1489              	.Ldebug_abbrev0:
 1490 0000 01       		.uleb128 0x1
 1491 0001 11       		.uleb128 0x11
 1492 0002 01       		.byte	0x1
 1493 0003 25       		.uleb128 0x25
 1494 0004 0E       		.uleb128 0xe
 1495 0005 13       		.uleb128 0x13
 1496 0006 0B       		.uleb128 0xb
 1497 0007 03       		.uleb128 0x3
 1498 0008 0E       		.uleb128 0xe
 1499 0009 1B       		.uleb128 0x1b
 1500 000a 0E       		.uleb128 0xe
 1501 000b 55       		.uleb128 0x55
 1502 000c 17       		.uleb128 0x17
 1503 000d 11       		.uleb128 0x11
 1504 000e 01       		.uleb128 0x1
 1505 000f 10       		.uleb128 0x10
 1506 0010 17       		.uleb128 0x17
 1507 0011 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 40


 1508 0012 00       		.byte	0
 1509 0013 02       		.uleb128 0x2
 1510 0014 24       		.uleb128 0x24
 1511 0015 00       		.byte	0
 1512 0016 0B       		.uleb128 0xb
 1513 0017 0B       		.uleb128 0xb
 1514 0018 3E       		.uleb128 0x3e
 1515 0019 0B       		.uleb128 0xb
 1516 001a 03       		.uleb128 0x3
 1517 001b 0E       		.uleb128 0xe
 1518 001c 00       		.byte	0
 1519 001d 00       		.byte	0
 1520 001e 03       		.uleb128 0x3
 1521 001f 16       		.uleb128 0x16
 1522 0020 00       		.byte	0
 1523 0021 03       		.uleb128 0x3
 1524 0022 0E       		.uleb128 0xe
 1525 0023 3A       		.uleb128 0x3a
 1526 0024 0B       		.uleb128 0xb
 1527 0025 3B       		.uleb128 0x3b
 1528 0026 0B       		.uleb128 0xb
 1529 0027 49       		.uleb128 0x49
 1530 0028 13       		.uleb128 0x13
 1531 0029 00       		.byte	0
 1532 002a 00       		.byte	0
 1533 002b 04       		.uleb128 0x4
 1534 002c 24       		.uleb128 0x24
 1535 002d 00       		.byte	0
 1536 002e 0B       		.uleb128 0xb
 1537 002f 0B       		.uleb128 0xb
 1538 0030 3E       		.uleb128 0x3e
 1539 0031 0B       		.uleb128 0xb
 1540 0032 03       		.uleb128 0x3
 1541 0033 08       		.uleb128 0x8
 1542 0034 00       		.byte	0
 1543 0035 00       		.byte	0
 1544 0036 05       		.uleb128 0x5
 1545 0037 16       		.uleb128 0x16
 1546 0038 00       		.byte	0
 1547 0039 03       		.uleb128 0x3
 1548 003a 0E       		.uleb128 0xe
 1549 003b 3A       		.uleb128 0x3a
 1550 003c 0B       		.uleb128 0xb
 1551 003d 3B       		.uleb128 0x3b
 1552 003e 05       		.uleb128 0x5
 1553 003f 49       		.uleb128 0x49
 1554 0040 13       		.uleb128 0x13
 1555 0041 00       		.byte	0
 1556 0042 00       		.byte	0
 1557 0043 06       		.uleb128 0x6
 1558 0044 0F       		.uleb128 0xf
 1559 0045 00       		.byte	0
 1560 0046 0B       		.uleb128 0xb
 1561 0047 0B       		.uleb128 0xb
 1562 0048 49       		.uleb128 0x49
 1563 0049 13       		.uleb128 0x13
 1564 004a 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 41


 1565 004b 00       		.byte	0
 1566 004c 07       		.uleb128 0x7
 1567 004d 15       		.uleb128 0x15
 1568 004e 00       		.byte	0
 1569 004f 27       		.uleb128 0x27
 1570 0050 19       		.uleb128 0x19
 1571 0051 00       		.byte	0
 1572 0052 00       		.byte	0
 1573 0053 08       		.uleb128 0x8
 1574 0054 13       		.uleb128 0x13
 1575 0055 01       		.byte	0x1
 1576 0056 03       		.uleb128 0x3
 1577 0057 0E       		.uleb128 0xe
 1578 0058 0B       		.uleb128 0xb
 1579 0059 0B       		.uleb128 0xb
 1580 005a 3A       		.uleb128 0x3a
 1581 005b 0B       		.uleb128 0xb
 1582 005c 3B       		.uleb128 0x3b
 1583 005d 0B       		.uleb128 0xb
 1584 005e 01       		.uleb128 0x1
 1585 005f 13       		.uleb128 0x13
 1586 0060 00       		.byte	0
 1587 0061 00       		.byte	0
 1588 0062 09       		.uleb128 0x9
 1589 0063 0D       		.uleb128 0xd
 1590 0064 00       		.byte	0
 1591 0065 03       		.uleb128 0x3
 1592 0066 08       		.uleb128 0x8
 1593 0067 3A       		.uleb128 0x3a
 1594 0068 0B       		.uleb128 0xb
 1595 0069 3B       		.uleb128 0x3b
 1596 006a 0B       		.uleb128 0xb
 1597 006b 49       		.uleb128 0x49
 1598 006c 13       		.uleb128 0x13
 1599 006d 38       		.uleb128 0x38
 1600 006e 0B       		.uleb128 0xb
 1601 006f 00       		.byte	0
 1602 0070 00       		.byte	0
 1603 0071 0A       		.uleb128 0xa
 1604 0072 2E       		.uleb128 0x2e
 1605 0073 01       		.byte	0x1
 1606 0074 3F       		.uleb128 0x3f
 1607 0075 19       		.uleb128 0x19
 1608 0076 03       		.uleb128 0x3
 1609 0077 0E       		.uleb128 0xe
 1610 0078 3A       		.uleb128 0x3a
 1611 0079 0B       		.uleb128 0xb
 1612 007a 3B       		.uleb128 0x3b
 1613 007b 0B       		.uleb128 0xb
 1614 007c 49       		.uleb128 0x49
 1615 007d 13       		.uleb128 0x13
 1616 007e 11       		.uleb128 0x11
 1617 007f 01       		.uleb128 0x1
 1618 0080 12       		.uleb128 0x12
 1619 0081 06       		.uleb128 0x6
 1620 0082 40       		.uleb128 0x40
 1621 0083 18       		.uleb128 0x18
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 42


 1622 0084 9642     		.uleb128 0x2116
 1623 0086 19       		.uleb128 0x19
 1624 0087 01       		.uleb128 0x1
 1625 0088 13       		.uleb128 0x13
 1626 0089 00       		.byte	0
 1627 008a 00       		.byte	0
 1628 008b 0B       		.uleb128 0xb
 1629 008c 34       		.uleb128 0x34
 1630 008d 00       		.byte	0
 1631 008e 03       		.uleb128 0x3
 1632 008f 0E       		.uleb128 0xe
 1633 0090 3A       		.uleb128 0x3a
 1634 0091 0B       		.uleb128 0xb
 1635 0092 3B       		.uleb128 0x3b
 1636 0093 0B       		.uleb128 0xb
 1637 0094 49       		.uleb128 0x49
 1638 0095 13       		.uleb128 0x13
 1639 0096 02       		.uleb128 0x2
 1640 0097 17       		.uleb128 0x17
 1641 0098 00       		.byte	0
 1642 0099 00       		.byte	0
 1643 009a 0C       		.uleb128 0xc
 1644 009b 34       		.uleb128 0x34
 1645 009c 00       		.byte	0
 1646 009d 03       		.uleb128 0x3
 1647 009e 0E       		.uleb128 0xe
 1648 009f 3A       		.uleb128 0x3a
 1649 00a0 0B       		.uleb128 0xb
 1650 00a1 3B       		.uleb128 0x3b
 1651 00a2 0B       		.uleb128 0xb
 1652 00a3 49       		.uleb128 0x49
 1653 00a4 13       		.uleb128 0x13
 1654 00a5 1C       		.uleb128 0x1c
 1655 00a6 0B       		.uleb128 0xb
 1656 00a7 00       		.byte	0
 1657 00a8 00       		.byte	0
 1658 00a9 0D       		.uleb128 0xd
 1659 00aa 34       		.uleb128 0x34
 1660 00ab 00       		.byte	0
 1661 00ac 03       		.uleb128 0x3
 1662 00ad 0E       		.uleb128 0xe
 1663 00ae 3A       		.uleb128 0x3a
 1664 00af 0B       		.uleb128 0xb
 1665 00b0 3B       		.uleb128 0x3b
 1666 00b1 0B       		.uleb128 0xb
 1667 00b2 49       		.uleb128 0x49
 1668 00b3 13       		.uleb128 0x13
 1669 00b4 1C       		.uleb128 0x1c
 1670 00b5 0D       		.uleb128 0xd
 1671 00b6 00       		.byte	0
 1672 00b7 00       		.byte	0
 1673 00b8 0E       		.uleb128 0xe
 1674 00b9 34       		.uleb128 0x34
 1675 00ba 00       		.byte	0
 1676 00bb 03       		.uleb128 0x3
 1677 00bc 0E       		.uleb128 0xe
 1678 00bd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 43


 1679 00be 0B       		.uleb128 0xb
 1680 00bf 3B       		.uleb128 0x3b
 1681 00c0 0B       		.uleb128 0xb
 1682 00c1 49       		.uleb128 0x49
 1683 00c2 13       		.uleb128 0x13
 1684 00c3 1C       		.uleb128 0x1c
 1685 00c4 05       		.uleb128 0x5
 1686 00c5 00       		.byte	0
 1687 00c6 00       		.byte	0
 1688 00c7 0F       		.uleb128 0xf
 1689 00c8 34       		.uleb128 0x34
 1690 00c9 00       		.byte	0
 1691 00ca 03       		.uleb128 0x3
 1692 00cb 0E       		.uleb128 0xe
 1693 00cc 3A       		.uleb128 0x3a
 1694 00cd 0B       		.uleb128 0xb
 1695 00ce 3B       		.uleb128 0x3b
 1696 00cf 0B       		.uleb128 0xb
 1697 00d0 49       		.uleb128 0x49
 1698 00d1 13       		.uleb128 0x13
 1699 00d2 02       		.uleb128 0x2
 1700 00d3 18       		.uleb128 0x18
 1701 00d4 00       		.byte	0
 1702 00d5 00       		.byte	0
 1703 00d6 10       		.uleb128 0x10
 1704 00d7 34       		.uleb128 0x34
 1705 00d8 00       		.byte	0
 1706 00d9 03       		.uleb128 0x3
 1707 00da 08       		.uleb128 0x8
 1708 00db 3A       		.uleb128 0x3a
 1709 00dc 0B       		.uleb128 0xb
 1710 00dd 3B       		.uleb128 0x3b
 1711 00de 0B       		.uleb128 0xb
 1712 00df 49       		.uleb128 0x49
 1713 00e0 13       		.uleb128 0x13
 1714 00e1 02       		.uleb128 0x2
 1715 00e2 17       		.uleb128 0x17
 1716 00e3 00       		.byte	0
 1717 00e4 00       		.byte	0
 1718 00e5 11       		.uleb128 0x11
 1719 00e6 34       		.uleb128 0x34
 1720 00e7 00       		.byte	0
 1721 00e8 03       		.uleb128 0x3
 1722 00e9 08       		.uleb128 0x8
 1723 00ea 3A       		.uleb128 0x3a
 1724 00eb 0B       		.uleb128 0xb
 1725 00ec 3B       		.uleb128 0x3b
 1726 00ed 0B       		.uleb128 0xb
 1727 00ee 49       		.uleb128 0x49
 1728 00ef 13       		.uleb128 0x13
 1729 00f0 02       		.uleb128 0x2
 1730 00f1 18       		.uleb128 0x18
 1731 00f2 00       		.byte	0
 1732 00f3 00       		.byte	0
 1733 00f4 12       		.uleb128 0x12
 1734 00f5 898201   		.uleb128 0x4109
 1735 00f8 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 44


 1736 00f9 11       		.uleb128 0x11
 1737 00fa 01       		.uleb128 0x1
 1738 00fb 31       		.uleb128 0x31
 1739 00fc 13       		.uleb128 0x13
 1740 00fd 00       		.byte	0
 1741 00fe 00       		.byte	0
 1742 00ff 13       		.uleb128 0x13
 1743 0100 898201   		.uleb128 0x4109
 1744 0103 01       		.byte	0x1
 1745 0104 11       		.uleb128 0x11
 1746 0105 01       		.uleb128 0x1
 1747 0106 31       		.uleb128 0x31
 1748 0107 13       		.uleb128 0x13
 1749 0108 01       		.uleb128 0x1
 1750 0109 13       		.uleb128 0x13
 1751 010a 00       		.byte	0
 1752 010b 00       		.byte	0
 1753 010c 14       		.uleb128 0x14
 1754 010d 8A8201   		.uleb128 0x410a
 1755 0110 00       		.byte	0
 1756 0111 02       		.uleb128 0x2
 1757 0112 18       		.uleb128 0x18
 1758 0113 9142     		.uleb128 0x2111
 1759 0115 18       		.uleb128 0x18
 1760 0116 00       		.byte	0
 1761 0117 00       		.byte	0
 1762 0118 15       		.uleb128 0x15
 1763 0119 898201   		.uleb128 0x4109
 1764 011c 01       		.byte	0x1
 1765 011d 11       		.uleb128 0x11
 1766 011e 01       		.uleb128 0x1
 1767 011f 31       		.uleb128 0x31
 1768 0120 13       		.uleb128 0x13
 1769 0121 00       		.byte	0
 1770 0122 00       		.byte	0
 1771 0123 16       		.uleb128 0x16
 1772 0124 01       		.uleb128 0x1
 1773 0125 01       		.byte	0x1
 1774 0126 49       		.uleb128 0x49
 1775 0127 13       		.uleb128 0x13
 1776 0128 01       		.uleb128 0x1
 1777 0129 13       		.uleb128 0x13
 1778 012a 00       		.byte	0
 1779 012b 00       		.byte	0
 1780 012c 17       		.uleb128 0x17
 1781 012d 21       		.uleb128 0x21
 1782 012e 00       		.byte	0
 1783 012f 49       		.uleb128 0x49
 1784 0130 13       		.uleb128 0x13
 1785 0131 2F       		.uleb128 0x2f
 1786 0132 0B       		.uleb128 0xb
 1787 0133 00       		.byte	0
 1788 0134 00       		.byte	0
 1789 0135 18       		.uleb128 0x18
 1790 0136 2E       		.uleb128 0x2e
 1791 0137 01       		.byte	0x1
 1792 0138 3F       		.uleb128 0x3f
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 45


 1793 0139 19       		.uleb128 0x19
 1794 013a 03       		.uleb128 0x3
 1795 013b 0E       		.uleb128 0xe
 1796 013c 3A       		.uleb128 0x3a
 1797 013d 0B       		.uleb128 0xb
 1798 013e 3B       		.uleb128 0x3b
 1799 013f 05       		.uleb128 0x5
 1800 0140 27       		.uleb128 0x27
 1801 0141 19       		.uleb128 0x19
 1802 0142 49       		.uleb128 0x49
 1803 0143 13       		.uleb128 0x13
 1804 0144 11       		.uleb128 0x11
 1805 0145 01       		.uleb128 0x1
 1806 0146 12       		.uleb128 0x12
 1807 0147 06       		.uleb128 0x6
 1808 0148 40       		.uleb128 0x40
 1809 0149 18       		.uleb128 0x18
 1810 014a 9742     		.uleb128 0x2117
 1811 014c 19       		.uleb128 0x19
 1812 014d 01       		.uleb128 0x1
 1813 014e 13       		.uleb128 0x13
 1814 014f 00       		.byte	0
 1815 0150 00       		.byte	0
 1816 0151 19       		.uleb128 0x19
 1817 0152 05       		.uleb128 0x5
 1818 0153 00       		.byte	0
 1819 0154 03       		.uleb128 0x3
 1820 0155 0E       		.uleb128 0xe
 1821 0156 3A       		.uleb128 0x3a
 1822 0157 0B       		.uleb128 0xb
 1823 0158 3B       		.uleb128 0x3b
 1824 0159 05       		.uleb128 0x5
 1825 015a 49       		.uleb128 0x49
 1826 015b 13       		.uleb128 0x13
 1827 015c 02       		.uleb128 0x2
 1828 015d 17       		.uleb128 0x17
 1829 015e 00       		.byte	0
 1830 015f 00       		.byte	0
 1831 0160 1A       		.uleb128 0x1a
 1832 0161 05       		.uleb128 0x5
 1833 0162 00       		.byte	0
 1834 0163 03       		.uleb128 0x3
 1835 0164 08       		.uleb128 0x8
 1836 0165 3A       		.uleb128 0x3a
 1837 0166 0B       		.uleb128 0xb
 1838 0167 3B       		.uleb128 0x3b
 1839 0168 05       		.uleb128 0x5
 1840 0169 49       		.uleb128 0x49
 1841 016a 13       		.uleb128 0x13
 1842 016b 02       		.uleb128 0x2
 1843 016c 17       		.uleb128 0x17
 1844 016d 00       		.byte	0
 1845 016e 00       		.byte	0
 1846 016f 1B       		.uleb128 0x1b
 1847 0170 34       		.uleb128 0x34
 1848 0171 00       		.byte	0
 1849 0172 03       		.uleb128 0x3
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 46


 1850 0173 08       		.uleb128 0x8
 1851 0174 3A       		.uleb128 0x3a
 1852 0175 0B       		.uleb128 0xb
 1853 0176 3B       		.uleb128 0x3b
 1854 0177 05       		.uleb128 0x5
 1855 0178 49       		.uleb128 0x49
 1856 0179 13       		.uleb128 0x13
 1857 017a 02       		.uleb128 0x2
 1858 017b 17       		.uleb128 0x17
 1859 017c 00       		.byte	0
 1860 017d 00       		.byte	0
 1861 017e 1C       		.uleb128 0x1c
 1862 017f 34       		.uleb128 0x34
 1863 0180 00       		.byte	0
 1864 0181 03       		.uleb128 0x3
 1865 0182 0E       		.uleb128 0xe
 1866 0183 3A       		.uleb128 0x3a
 1867 0184 0B       		.uleb128 0xb
 1868 0185 3B       		.uleb128 0x3b
 1869 0186 05       		.uleb128 0x5
 1870 0187 49       		.uleb128 0x49
 1871 0188 13       		.uleb128 0x13
 1872 0189 3F       		.uleb128 0x3f
 1873 018a 19       		.uleb128 0x19
 1874 018b 3C       		.uleb128 0x3c
 1875 018c 19       		.uleb128 0x19
 1876 018d 00       		.byte	0
 1877 018e 00       		.byte	0
 1878 018f 1D       		.uleb128 0x1d
 1879 0190 35       		.uleb128 0x35
 1880 0191 00       		.byte	0
 1881 0192 49       		.uleb128 0x49
 1882 0193 13       		.uleb128 0x13
 1883 0194 00       		.byte	0
 1884 0195 00       		.byte	0
 1885 0196 1E       		.uleb128 0x1e
 1886 0197 2E       		.uleb128 0x2e
 1887 0198 00       		.byte	0
 1888 0199 3F       		.uleb128 0x3f
 1889 019a 19       		.uleb128 0x19
 1890 019b 03       		.uleb128 0x3
 1891 019c 0E       		.uleb128 0xe
 1892 019d 3A       		.uleb128 0x3a
 1893 019e 0B       		.uleb128 0xb
 1894 019f 3B       		.uleb128 0x3b
 1895 01a0 0B       		.uleb128 0xb
 1896 01a1 27       		.uleb128 0x27
 1897 01a2 19       		.uleb128 0x19
 1898 01a3 3C       		.uleb128 0x3c
 1899 01a4 19       		.uleb128 0x19
 1900 01a5 00       		.byte	0
 1901 01a6 00       		.byte	0
 1902 01a7 1F       		.uleb128 0x1f
 1903 01a8 2E       		.uleb128 0x2e
 1904 01a9 01       		.byte	0x1
 1905 01aa 3F       		.uleb128 0x3f
 1906 01ab 19       		.uleb128 0x19
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 47


 1907 01ac 03       		.uleb128 0x3
 1908 01ad 0E       		.uleb128 0xe
 1909 01ae 3A       		.uleb128 0x3a
 1910 01af 0B       		.uleb128 0xb
 1911 01b0 3B       		.uleb128 0x3b
 1912 01b1 0B       		.uleb128 0xb
 1913 01b2 3C       		.uleb128 0x3c
 1914 01b3 19       		.uleb128 0x19
 1915 01b4 01       		.uleb128 0x1
 1916 01b5 13       		.uleb128 0x13
 1917 01b6 00       		.byte	0
 1918 01b7 00       		.byte	0
 1919 01b8 20       		.uleb128 0x20
 1920 01b9 18       		.uleb128 0x18
 1921 01ba 00       		.byte	0
 1922 01bb 00       		.byte	0
 1923 01bc 00       		.byte	0
 1924 01bd 21       		.uleb128 0x21
 1925 01be 2E       		.uleb128 0x2e
 1926 01bf 01       		.byte	0x1
 1927 01c0 3F       		.uleb128 0x3f
 1928 01c1 19       		.uleb128 0x19
 1929 01c2 03       		.uleb128 0x3
 1930 01c3 0E       		.uleb128 0xe
 1931 01c4 3A       		.uleb128 0x3a
 1932 01c5 0B       		.uleb128 0xb
 1933 01c6 3B       		.uleb128 0x3b
 1934 01c7 0B       		.uleb128 0xb
 1935 01c8 27       		.uleb128 0x27
 1936 01c9 19       		.uleb128 0x19
 1937 01ca 3C       		.uleb128 0x3c
 1938 01cb 19       		.uleb128 0x19
 1939 01cc 01       		.uleb128 0x1
 1940 01cd 13       		.uleb128 0x13
 1941 01ce 00       		.byte	0
 1942 01cf 00       		.byte	0
 1943 01d0 22       		.uleb128 0x22
 1944 01d1 05       		.uleb128 0x5
 1945 01d2 00       		.byte	0
 1946 01d3 49       		.uleb128 0x49
 1947 01d4 13       		.uleb128 0x13
 1948 01d5 00       		.byte	0
 1949 01d6 00       		.byte	0
 1950 01d7 23       		.uleb128 0x23
 1951 01d8 2E       		.uleb128 0x2e
 1952 01d9 00       		.byte	0
 1953 01da 3F       		.uleb128 0x3f
 1954 01db 19       		.uleb128 0x19
 1955 01dc 03       		.uleb128 0x3
 1956 01dd 0E       		.uleb128 0xe
 1957 01de 3A       		.uleb128 0x3a
 1958 01df 0B       		.uleb128 0xb
 1959 01e0 3B       		.uleb128 0x3b
 1960 01e1 0B       		.uleb128 0xb
 1961 01e2 27       		.uleb128 0x27
 1962 01e3 19       		.uleb128 0x19
 1963 01e4 49       		.uleb128 0x49
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 48


 1964 01e5 13       		.uleb128 0x13
 1965 01e6 3C       		.uleb128 0x3c
 1966 01e7 19       		.uleb128 0x19
 1967 01e8 00       		.byte	0
 1968 01e9 00       		.byte	0
 1969 01ea 24       		.uleb128 0x24
 1970 01eb 2E       		.uleb128 0x2e
 1971 01ec 01       		.byte	0x1
 1972 01ed 3F       		.uleb128 0x3f
 1973 01ee 19       		.uleb128 0x19
 1974 01ef 03       		.uleb128 0x3
 1975 01f0 0E       		.uleb128 0xe
 1976 01f1 3A       		.uleb128 0x3a
 1977 01f2 0B       		.uleb128 0xb
 1978 01f3 3B       		.uleb128 0x3b
 1979 01f4 05       		.uleb128 0x5
 1980 01f5 27       		.uleb128 0x27
 1981 01f6 19       		.uleb128 0x19
 1982 01f7 49       		.uleb128 0x49
 1983 01f8 13       		.uleb128 0x13
 1984 01f9 3C       		.uleb128 0x3c
 1985 01fa 19       		.uleb128 0x19
 1986 01fb 01       		.uleb128 0x1
 1987 01fc 13       		.uleb128 0x13
 1988 01fd 00       		.byte	0
 1989 01fe 00       		.byte	0
 1990 01ff 00       		.byte	0
 1991              		.section	.debug_loc,"",%progbits
 1992              	.Ldebug_loc0:
 1993              	.LLST0:
 1994 0000 06000000 		.4byte	.LVL0
 1995 0004 7C000000 		.4byte	.LVL19
 1996 0008 0200     		.2byte	0x2
 1997 000a 30       		.byte	0x30
 1998 000b 9F       		.byte	0x9f
 1999 000c 7C000000 		.4byte	.LVL19
 2000 0010 10020000 		.4byte	.LVL90
 2001 0014 0100     		.2byte	0x1
 2002 0016 5B       		.byte	0x5b
 2003 0017 10020000 		.4byte	.LVL90
 2004 001b 14020000 		.4byte	.LVL91
 2005 001f 0200     		.2byte	0x2
 2006 0021 30       		.byte	0x30
 2007 0022 9F       		.byte	0x9f
 2008 0023 14020000 		.4byte	.LVL91
 2009 0027 60020000 		.4byte	.LFE63
 2010 002b 0100     		.2byte	0x1
 2011 002d 5B       		.byte	0x5b
 2012 002e 00000000 		.4byte	0
 2013 0032 00000000 		.4byte	0
 2014              	.LLST1:
 2015 0036 06000000 		.4byte	.LVL0
 2016 003a 54000000 		.4byte	.LVL12
 2017 003e 0200     		.2byte	0x2
 2018 0040 30       		.byte	0x30
 2019 0041 9F       		.byte	0x9f
 2020 0042 54000000 		.4byte	.LVL12
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 49


 2021 0046 5A000000 		.4byte	.LVL14
 2022 004a 0100     		.2byte	0x1
 2023 004c 54       		.byte	0x54
 2024 004d 5A000000 		.4byte	.LVL14
 2025 0051 62000000 		.4byte	.LVL17
 2026 0055 0200     		.2byte	0x2
 2027 0057 31       		.byte	0x31
 2028 0058 9F       		.byte	0x9f
 2029 0059 62000000 		.4byte	.LVL17
 2030 005d 7C000000 		.4byte	.LVL19
 2031 0061 0100     		.2byte	0x1
 2032 0063 54       		.byte	0x54
 2033 0064 00000000 		.4byte	0
 2034 0068 00000000 		.4byte	0
 2035              	.LLST2:
 2036 006c 06000000 		.4byte	.LVL0
 2037 0070 7C000000 		.4byte	.LVL19
 2038 0074 0200     		.2byte	0x2
 2039 0076 30       		.byte	0x30
 2040 0077 9F       		.byte	0x9f
 2041 0078 7C000000 		.4byte	.LVL19
 2042 007c A0000000 		.4byte	.LVL25
 2043 0080 0200     		.2byte	0x2
 2044 0082 31       		.byte	0x31
 2045 0083 9F       		.byte	0x9f
 2046 0084 A0000000 		.4byte	.LVL25
 2047 0088 A8000000 		.4byte	.LVL26
 2048 008c 0100     		.2byte	0x1
 2049 008e 59       		.byte	0x59
 2050 008f A8000000 		.4byte	.LVL26
 2051 0093 CA000000 		.4byte	.LVL32
 2052 0097 0200     		.2byte	0x2
 2053 0099 32       		.byte	0x32
 2054 009a 9F       		.byte	0x9f
 2055 009b CA000000 		.4byte	.LVL32
 2056 009f F6010000 		.4byte	.LVL86
 2057 00a3 0100     		.2byte	0x1
 2058 00a5 59       		.byte	0x59
 2059 00a6 F6010000 		.4byte	.LVL86
 2060 00aa 02020000 		.4byte	.LVL88
 2061 00ae 0200     		.2byte	0x2
 2062 00b0 30       		.byte	0x30
 2063 00b1 9F       		.byte	0x9f
 2064 00b2 02020000 		.4byte	.LVL88
 2065 00b6 60020000 		.4byte	.LFE63
 2066 00ba 0100     		.2byte	0x1
 2067 00bc 59       		.byte	0x59
 2068 00bd 00000000 		.4byte	0
 2069 00c1 00000000 		.4byte	0
 2070              	.LLST3:
 2071 00c5 06000000 		.4byte	.LVL0
 2072 00c9 D4000000 		.4byte	.LVL33
 2073 00cd 0200     		.2byte	0x2
 2074 00cf 30       		.byte	0x30
 2075 00d0 9F       		.byte	0x9f
 2076 00d1 6A010000 		.4byte	.LVL62
 2077 00d5 6C010000 		.4byte	.LVL63
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 50


 2078 00d9 0100     		.2byte	0x1
 2079 00db 50       		.byte	0x50
 2080 00dc 6C010000 		.4byte	.LVL63
 2081 00e0 92010000 		.4byte	.LVL70
 2082 00e4 0100     		.2byte	0x1
 2083 00e6 5A       		.byte	0x5a
 2084 00e7 92010000 		.4byte	.LVL70
 2085 00eb 94010000 		.4byte	.LVL71
 2086 00ef 0100     		.2byte	0x1
 2087 00f1 50       		.byte	0x50
 2088 00f2 94010000 		.4byte	.LVL71
 2089 00f6 C2010000 		.4byte	.LVL79
 2090 00fa 0100     		.2byte	0x1
 2091 00fc 57       		.byte	0x57
 2092 00fd C2010000 		.4byte	.LVL79
 2093 0101 CA010000 		.4byte	.LVL81
 2094 0105 0100     		.2byte	0x1
 2095 0107 50       		.byte	0x50
 2096 0108 F6010000 		.4byte	.LVL86
 2097 010c 60020000 		.4byte	.LFE63
 2098 0110 0200     		.2byte	0x2
 2099 0112 30       		.byte	0x30
 2100 0113 9F       		.byte	0x9f
 2101 0114 00000000 		.4byte	0
 2102 0118 00000000 		.4byte	0
 2103              	.LLST4:
 2104 011c 06000000 		.4byte	.LVL0
 2105 0120 7C000000 		.4byte	.LVL19
 2106 0124 0200     		.2byte	0x2
 2107 0126 30       		.byte	0x30
 2108 0127 9F       		.byte	0x9f
 2109 0128 7C000000 		.4byte	.LVL19
 2110 012c AA000000 		.4byte	.LVL27
 2111 0130 0100     		.2byte	0x1
 2112 0132 58       		.byte	0x58
 2113 0133 AA000000 		.4byte	.LVL27
 2114 0137 B1000000 		.4byte	.LVL28-1
 2115 013b 0100     		.2byte	0x1
 2116 013d 53       		.byte	0x53
 2117 013e B1000000 		.4byte	.LVL28-1
 2118 0142 60020000 		.4byte	.LFE63
 2119 0146 0100     		.2byte	0x1
 2120 0148 58       		.byte	0x58
 2121 0149 00000000 		.4byte	0
 2122 014d 00000000 		.4byte	0
 2123              	.LLST5:
 2124 0151 06000000 		.4byte	.LVL0
 2125 0155 7C000000 		.4byte	.LVL19
 2126 0159 0200     		.2byte	0x2
 2127 015b 30       		.byte	0x30
 2128 015c 9F       		.byte	0x9f
 2129 015d 7C000000 		.4byte	.LVL19
 2130 0161 8E000000 		.4byte	.LVL24
 2131 0165 0200     		.2byte	0x2
 2132 0167 7D       		.byte	0x7d
 2133 0168 00       		.sleb128 0
 2134 0169 8E000000 		.4byte	.LVL24
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 51


 2135 016d A0000000 		.4byte	.LVL25
 2136 0171 0400     		.2byte	0x4
 2137 0173 0A       		.byte	0xa
 2138 0174 BC34     		.2byte	0x34bc
 2139 0176 9F       		.byte	0x9f
 2140 0177 A0000000 		.4byte	.LVL25
 2141 017b BA000000 		.4byte	.LVL31
 2142 017f 0200     		.2byte	0x2
 2143 0181 7D       		.byte	0x7d
 2144 0182 00       		.sleb128 0
 2145 0183 BA000000 		.4byte	.LVL31
 2146 0187 CA000000 		.4byte	.LVL32
 2147 018b 0400     		.2byte	0x4
 2148 018d 0A       		.byte	0xa
 2149 018e 9E46     		.2byte	0x469e
 2150 0190 9F       		.byte	0x9f
 2151 0191 CA000000 		.4byte	.LVL32
 2152 0195 60020000 		.4byte	.LFE63
 2153 0199 0200     		.2byte	0x2
 2154 019b 7D       		.byte	0x7d
 2155 019c 00       		.sleb128 0
 2156 019d 00000000 		.4byte	0
 2157 01a1 00000000 		.4byte	0
 2158              	.LLST6:
 2159 01a5 06000000 		.4byte	.LVL0
 2160 01a9 7C000000 		.4byte	.LVL19
 2161 01ad 0200     		.2byte	0x2
 2162 01af 30       		.byte	0x30
 2163 01b0 9F       		.byte	0x9f
 2164 01b1 7C000000 		.4byte	.LVL19
 2165 01b5 8E000000 		.4byte	.LVL24
 2166 01b9 0300     		.2byte	0x3
 2167 01bb 91       		.byte	0x91
 2168 01bc B47F     		.sleb128 -76
 2169 01be 8E000000 		.4byte	.LVL24
 2170 01c2 A0000000 		.4byte	.LVL25
 2171 01c6 0400     		.2byte	0x4
 2172 01c8 0A       		.byte	0xa
 2173 01c9 5046     		.2byte	0x4650
 2174 01cb 9F       		.byte	0x9f
 2175 01cc A0000000 		.4byte	.LVL25
 2176 01d0 BA000000 		.4byte	.LVL31
 2177 01d4 0300     		.2byte	0x3
 2178 01d6 91       		.byte	0x91
 2179 01d7 B47F     		.sleb128 -76
 2180 01d9 BA000000 		.4byte	.LVL31
 2181 01dd CA000000 		.4byte	.LVL32
 2182 01e1 0400     		.2byte	0x4
 2183 01e3 0A       		.byte	0xa
 2184 01e4 4858     		.2byte	0x5848
 2185 01e6 9F       		.byte	0x9f
 2186 01e7 CA000000 		.4byte	.LVL32
 2187 01eb 60020000 		.4byte	.LFE63
 2188 01ef 0300     		.2byte	0x3
 2189 01f1 91       		.byte	0x91
 2190 01f2 B47F     		.sleb128 -76
 2191 01f4 00000000 		.4byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 52


 2192 01f8 00000000 		.4byte	0
 2193              	.LLST7:
 2194 01fc 06000000 		.4byte	.LVL0
 2195 0200 7C000000 		.4byte	.LVL19
 2196 0204 0600     		.2byte	0x6
 2197 0206 9E       		.byte	0x9e
 2198 0207 04       		.uleb128 0x4
 2199 0208 007EBB46 		.4byte	0x46bb7e00
 2200 020c 7C000000 		.4byte	.LVL19
 2201 0210 88000000 		.4byte	.LVL22
 2202 0214 0100     		.2byte	0x1
 2203 0216 55       		.byte	0x55
 2204 0217 88000000 		.4byte	.LVL22
 2205 021b 8A000000 		.4byte	.LVL23
 2206 021f 0100     		.2byte	0x1
 2207 0221 50       		.byte	0x50
 2208 0222 8A000000 		.4byte	.LVL23
 2209 0226 B4000000 		.4byte	.LVL29
 2210 022a 0100     		.2byte	0x1
 2211 022c 55       		.byte	0x55
 2212 022d B4000000 		.4byte	.LVL29
 2213 0231 B6000000 		.4byte	.LVL30
 2214 0235 0100     		.2byte	0x1
 2215 0237 50       		.byte	0x50
 2216 0238 B6000000 		.4byte	.LVL30
 2217 023c D4000000 		.4byte	.LVL33
 2218 0240 0100     		.2byte	0x1
 2219 0242 55       		.byte	0x55
 2220 0243 D4000000 		.4byte	.LVL33
 2221 0247 D6000000 		.4byte	.LVL34
 2222 024b 0100     		.2byte	0x1
 2223 024d 54       		.byte	0x54
 2224 024e D6000000 		.4byte	.LVL34
 2225 0252 12010000 		.4byte	.LVL47
 2226 0256 0100     		.2byte	0x1
 2227 0258 55       		.byte	0x55
 2228 0259 D2010000 		.4byte	.LVL82
 2229 025d 02020000 		.4byte	.LVL88
 2230 0261 0100     		.2byte	0x1
 2231 0263 54       		.byte	0x54
 2232 0264 02020000 		.4byte	.LVL88
 2233 0268 60020000 		.4byte	.LFE63
 2234 026c 0100     		.2byte	0x1
 2235 026e 55       		.byte	0x55
 2236 026f 00000000 		.4byte	0
 2237 0273 00000000 		.4byte	0
 2238              	.LLST8:
 2239 0277 06000000 		.4byte	.LVL0
 2240 027b 7C000000 		.4byte	.LVL19
 2241 027f 0600     		.2byte	0x6
 2242 0281 9E       		.byte	0x9e
 2243 0282 04       		.uleb128 0x4
 2244 0283 007EBB46 		.4byte	0x46bb7e00
 2245 0287 D4000000 		.4byte	.LVL33
 2246 028b D6000000 		.4byte	.LVL34
 2247 028f 0100     		.2byte	0x1
 2248 0291 54       		.byte	0x54
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 53


 2249 0292 F6000000 		.4byte	.LVL39
 2250 0296 F8000000 		.4byte	.LVL40
 2251 029a 0100     		.2byte	0x1
 2252 029c 50       		.byte	0x50
 2253 029d 06010000 		.4byte	.LVL43
 2254 02a1 08010000 		.4byte	.LVL44
 2255 02a5 0100     		.2byte	0x1
 2256 02a7 50       		.byte	0x50
 2257 02a8 08010000 		.4byte	.LVL44
 2258 02ac 02020000 		.4byte	.LVL88
 2259 02b0 0100     		.2byte	0x1
 2260 02b2 54       		.byte	0x54
 2261 02b3 00000000 		.4byte	0
 2262 02b7 00000000 		.4byte	0
 2263              	.LLST9:
 2264 02bb 06000000 		.4byte	.LVL0
 2265 02bf 7C000000 		.4byte	.LVL19
 2266 02c3 0600     		.2byte	0x6
 2267 02c5 9E       		.byte	0x9e
 2268 02c6 04       		.uleb128 0x4
 2269 02c7 00000000 		.4byte	0
 2270 02cb D4000000 		.4byte	.LVL33
 2271 02cf D6000000 		.4byte	.LVL34
 2272 02d3 0100     		.2byte	0x1
 2273 02d5 56       		.byte	0x56
 2274 02d6 10010000 		.4byte	.LVL46
 2275 02da 1B010000 		.4byte	.LVL48-1
 2276 02de 0100     		.2byte	0x1
 2277 02e0 50       		.byte	0x50
 2278 02e1 1B010000 		.4byte	.LVL48-1
 2279 02e5 02020000 		.4byte	.LVL88
 2280 02e9 0100     		.2byte	0x1
 2281 02eb 56       		.byte	0x56
 2282 02ec 00000000 		.4byte	0
 2283 02f0 00000000 		.4byte	0
 2284              	.LLST10:
 2285 02f4 0C000000 		.4byte	.LVL1
 2286 02f8 7C000000 		.4byte	.LVL19
 2287 02fc 0600     		.2byte	0x6
 2288 02fe 9E       		.byte	0x9e
 2289 02ff 04       		.uleb128 0x4
 2290 0300 00000000 		.4byte	0
 2291 0304 2C010000 		.4byte	.LVL51
 2292 0308 31010000 		.4byte	.LVL52-1
 2293 030c 0100     		.2byte	0x1
 2294 030e 50       		.byte	0x50
 2295 030f 31010000 		.4byte	.LVL52-1
 2296 0313 38010000 		.4byte	.LVL53
 2297 0317 0100     		.2byte	0x1
 2298 0319 55       		.byte	0x55
 2299 031a 00000000 		.4byte	0
 2300 031e 00000000 		.4byte	0
 2301              	.LLST11:
 2302 0322 0C000000 		.4byte	.LVL1
 2303 0326 7C000000 		.4byte	.LVL19
 2304 032a 0600     		.2byte	0x6
 2305 032c 9E       		.byte	0x9e
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 54


 2306 032d 04       		.uleb128 0x4
 2307 032e 00000000 		.4byte	0
 2308 0332 00000000 		.4byte	0
 2309 0336 00000000 		.4byte	0
 2310              	.LLST12:
 2311 033a E4010000 		.4byte	.LVL84
 2312 033e FB010000 		.4byte	.LVL87-1
 2313 0342 0100     		.2byte	0x1
 2314 0344 53       		.byte	0x53
 2315 0345 00000000 		.4byte	0
 2316 0349 00000000 		.4byte	0
 2317              	.LLST13:
 2318 034d 0C000000 		.4byte	.LVL1
 2319 0351 7C000000 		.4byte	.LVL19
 2320 0355 0600     		.2byte	0x6
 2321 0357 9E       		.byte	0x9e
 2322 0358 04       		.uleb128 0x4
 2323 0359 00000000 		.4byte	0
 2324 035d 2C010000 		.4byte	.LVL51
 2325 0361 31010000 		.4byte	.LVL52-1
 2326 0365 0100     		.2byte	0x1
 2327 0367 50       		.byte	0x50
 2328 0368 31010000 		.4byte	.LVL52-1
 2329 036c 9C010000 		.4byte	.LVL73
 2330 0370 0100     		.2byte	0x1
 2331 0372 55       		.byte	0x55
 2332 0373 00000000 		.4byte	0
 2333 0377 00000000 		.4byte	0
 2334              	.LLST14:
 2335 037b 0C000000 		.4byte	.LVL1
 2336 037f 7C000000 		.4byte	.LVL19
 2337 0383 0600     		.2byte	0x6
 2338 0385 9E       		.byte	0x9e
 2339 0386 04       		.uleb128 0x4
 2340 0387 00000000 		.4byte	0
 2341 038b D4000000 		.4byte	.LVL33
 2342 038f D6000000 		.4byte	.LVL34
 2343 0393 0100     		.2byte	0x1
 2344 0395 54       		.byte	0x54
 2345 0396 44010000 		.4byte	.LVL55
 2346 039a 02020000 		.4byte	.LVL88
 2347 039e 0100     		.2byte	0x1
 2348 03a0 54       		.byte	0x54
 2349 03a1 00000000 		.4byte	0
 2350 03a5 00000000 		.4byte	0
 2351              	.LLST15:
 2352 03a9 58000000 		.4byte	.LVL13
 2353 03ad 5C000000 		.4byte	.LVL15
 2354 03b1 0100     		.2byte	0x1
 2355 03b3 50       		.byte	0x50
 2356 03b4 00000000 		.4byte	0
 2357 03b8 00000000 		.4byte	0
 2358              	.LLST16:
 2359 03bc 00000000 		.4byte	.LVL95
 2360 03c0 0A000000 		.4byte	.LVL97
 2361 03c4 0100     		.2byte	0x1
 2362 03c6 50       		.byte	0x50
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 55


 2363 03c7 0A000000 		.4byte	.LVL97
 2364 03cb 2A000000 		.4byte	.LFE64
 2365 03cf 0400     		.2byte	0x4
 2366 03d1 F3       		.byte	0xf3
 2367 03d2 01       		.uleb128 0x1
 2368 03d3 50       		.byte	0x50
 2369 03d4 9F       		.byte	0x9f
 2370 03d5 00000000 		.4byte	0
 2371 03d9 00000000 		.4byte	0
 2372              	.LLST17:
 2373 03dd 00000000 		.4byte	.LVL95
 2374 03e1 0A000000 		.4byte	.LVL97
 2375 03e5 0100     		.2byte	0x1
 2376 03e7 51       		.byte	0x51
 2377 03e8 0A000000 		.4byte	.LVL97
 2378 03ec 18000000 		.4byte	.LVL99
 2379 03f0 0100     		.2byte	0x1
 2380 03f2 54       		.byte	0x54
 2381 03f3 18000000 		.4byte	.LVL99
 2382 03f7 22000000 		.4byte	.LVL102
 2383 03fb 0100     		.2byte	0x1
 2384 03fd 56       		.byte	0x56
 2385 03fe 22000000 		.4byte	.LVL102
 2386 0402 2A000000 		.4byte	.LFE64
 2387 0406 0100     		.2byte	0x1
 2388 0408 54       		.byte	0x54
 2389 0409 00000000 		.4byte	0
 2390 040d 00000000 		.4byte	0
 2391              	.LLST18:
 2392 0411 00000000 		.4byte	.LVL95
 2393 0415 0A000000 		.4byte	.LVL97
 2394 0419 0100     		.2byte	0x1
 2395 041b 52       		.byte	0x52
 2396 041c 0A000000 		.4byte	.LVL97
 2397 0420 2A000000 		.4byte	.LFE64
 2398 0424 0100     		.2byte	0x1
 2399 0426 57       		.byte	0x57
 2400 0427 00000000 		.4byte	0
 2401 042b 00000000 		.4byte	0
 2402              	.LLST19:
 2403 042f 06000000 		.4byte	.LVL96
 2404 0433 0A000000 		.4byte	.LVL97
 2405 0437 0200     		.2byte	0x2
 2406 0439 30       		.byte	0x30
 2407 043a 9F       		.byte	0x9f
 2408 043b 0A000000 		.4byte	.LVL97
 2409 043f 2A000000 		.4byte	.LFE64
 2410 0443 0100     		.2byte	0x1
 2411 0445 55       		.byte	0x55
 2412 0446 00000000 		.4byte	0
 2413 044a 00000000 		.4byte	0
 2414              	.LLST20:
 2415 044e 00000000 		.4byte	.LVL103
 2416 0452 0A000000 		.4byte	.LVL105
 2417 0456 0100     		.2byte	0x1
 2418 0458 50       		.byte	0x50
 2419 0459 0A000000 		.4byte	.LVL105
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 56


 2420 045d 38000000 		.4byte	.LFE65
 2421 0461 0400     		.2byte	0x4
 2422 0463 F3       		.byte	0xf3
 2423 0464 01       		.uleb128 0x1
 2424 0465 50       		.byte	0x50
 2425 0466 9F       		.byte	0x9f
 2426 0467 00000000 		.4byte	0
 2427 046b 00000000 		.4byte	0
 2428              	.LLST21:
 2429 046f 00000000 		.4byte	.LVL103
 2430 0473 0A000000 		.4byte	.LVL105
 2431 0477 0100     		.2byte	0x1
 2432 0479 51       		.byte	0x51
 2433 047a 0A000000 		.4byte	.LVL105
 2434 047e 26000000 		.4byte	.LVL112
 2435 0482 0100     		.2byte	0x1
 2436 0484 57       		.byte	0x57
 2437 0485 26000000 		.4byte	.LVL112
 2438 0489 30000000 		.4byte	.LVL114
 2439 048d 0100     		.2byte	0x1
 2440 048f 53       		.byte	0x53
 2441 0490 30000000 		.4byte	.LVL114
 2442 0494 34000000 		.4byte	.LVL115
 2443 0498 0100     		.2byte	0x1
 2444 049a 57       		.byte	0x57
 2445 049b 00000000 		.4byte	0
 2446 049f 00000000 		.4byte	0
 2447              	.LLST22:
 2448 04a3 00000000 		.4byte	.LVL103
 2449 04a7 0A000000 		.4byte	.LVL105
 2450 04ab 0100     		.2byte	0x1
 2451 04ad 52       		.byte	0x52
 2452 04ae 0A000000 		.4byte	.LVL105
 2453 04b2 38000000 		.4byte	.LFE65
 2454 04b6 0100     		.2byte	0x1
 2455 04b8 54       		.byte	0x54
 2456 04b9 00000000 		.4byte	0
 2457 04bd 00000000 		.4byte	0
 2458              	.LLST23:
 2459 04c1 06000000 		.4byte	.LVL104
 2460 04c5 0A000000 		.4byte	.LVL105
 2461 04c9 0200     		.2byte	0x2
 2462 04cb 30       		.byte	0x30
 2463 04cc 9F       		.byte	0x9f
 2464 04cd 0A000000 		.4byte	.LVL105
 2465 04d1 38000000 		.4byte	.LFE65
 2466 04d5 0100     		.2byte	0x1
 2467 04d7 56       		.byte	0x56
 2468 04d8 00000000 		.4byte	0
 2469 04dc 00000000 		.4byte	0
 2470              	.LLST24:
 2471 04e0 0E000000 		.4byte	.LVL106
 2472 04e4 15000000 		.4byte	.LVL107-1
 2473 04e8 0100     		.2byte	0x1
 2474 04ea 50       		.byte	0x50
 2475 04eb 1C000000 		.4byte	.LVL109
 2476 04ef 24000000 		.4byte	.LVL111
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 57


 2477 04f3 0200     		.2byte	0x2
 2478 04f5 3A       		.byte	0x3a
 2479 04f6 9F       		.byte	0x9f
 2480 04f7 24000000 		.4byte	.LVL111
 2481 04fb 30000000 		.4byte	.LVL114
 2482 04ff 0100     		.2byte	0x1
 2483 0501 55       		.byte	0x55
 2484 0502 00000000 		.4byte	0
 2485 0506 00000000 		.4byte	0
 2486              		.section	.debug_aranges,"",%progbits
 2487 0000 2C000000 		.4byte	0x2c
 2488 0004 0200     		.2byte	0x2
 2489 0006 00000000 		.4byte	.Ldebug_info0
 2490 000a 04       		.byte	0x4
 2491 000b 00       		.byte	0
 2492 000c 0000     		.2byte	0
 2493 000e 0000     		.2byte	0
 2494 0010 00000000 		.4byte	.LFB63
 2495 0014 60020000 		.4byte	.LFE63-.LFB63
 2496 0018 00000000 		.4byte	.LFB64
 2497 001c 2A000000 		.4byte	.LFE64-.LFB64
 2498 0020 00000000 		.4byte	.LFB65
 2499 0024 38000000 		.4byte	.LFE65-.LFB65
 2500 0028 00000000 		.4byte	0
 2501 002c 00000000 		.4byte	0
 2502              		.section	.debug_ranges,"",%progbits
 2503              	.Ldebug_ranges0:
 2504 0000 00000000 		.4byte	.LFB63
 2505 0004 60020000 		.4byte	.LFE63
 2506 0008 00000000 		.4byte	.LFB64
 2507 000c 2A000000 		.4byte	.LFE64
 2508 0010 00000000 		.4byte	.LFB65
 2509 0014 38000000 		.4byte	.LFE65
 2510 0018 00000000 		.4byte	0
 2511 001c 00000000 		.4byte	0
 2512              		.section	.debug_line,"",%progbits
 2513              	.Ldebug_line0:
 2514 0000 D2020000 		.section	.debug_str,"MS",%progbits,1
 2514      0200CD01 
 2514      00000201 
 2514      FB0E0D00 
 2514      01010101 
 2515              	.LASF72:
 2516 0000 55415254 		.ascii	"UART_1_GetChar\000"
 2516      5F315F47 
 2516      65744368 
 2516      617200
 2517              	.LASF3:
 2518 000f 73686F72 		.ascii	"short int\000"
 2518      7420696E 
 2518      7400
 2519              	.LASF19:
 2520 0019 73697A65 		.ascii	"sizetype\000"
 2520      74797065 
 2520      00
 2521              	.LASF37:
 2522 0022 6D617844 		.ascii	"maxDiff_l1\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 58


 2522      6966665F 
 2522      6C3100
 2523              	.LASF21:
 2524 002d 6379636C 		.ascii	"cycles\000"
 2524      657300
 2525              	.LASF77:
 2526 0034 6D61696E 		.ascii	"main\000"
 2526      00
 2527              	.LASF52:
 2528 0039 5F777269 		.ascii	"_write\000"
 2528      746500
 2529              	.LASF5:
 2530 0040 5F5F7569 		.ascii	"__uint16_t\000"
 2530      6E743136 
 2530      5F7400
 2531              	.LASF51:
 2532 004b 66696C65 		.ascii	"file\000"
 2532      00
 2533              	.LASF45:
 2534 0050 64696666 		.ascii	"diffs\000"
 2534      7300
 2535              	.LASF73:
 2536 0056 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2536      4320342E 
 2536      392E3320 
 2536      32303135 
 2536      30333033 
 2537 0089 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2537      20726576 
 2537      6973696F 
 2537      6E203232 
 2537      31323230 
 2538 00bc 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2538      66756E63 
 2538      74696F6E 
 2538      2D736563 
 2538      74696F6E 
 2539              	.LASF58:
 2540 00e4 6D6F746F 		.ascii	"motor_start\000"
 2540      725F7374 
 2540      61727400 
 2541              	.LASF76:
 2542 00f0 73656E73 		.ascii	"sensors_\000"
 2542      6F72735F 
 2542      00
 2543              	.LASF30:
 2544 00f9 626C6163 		.ascii	"black_threshold_l1\000"
 2544      6B5F7468 
 2544      72657368 
 2544      6F6C645F 
 2544      6C3100
 2545              	.LASF29:
 2546 010c 626C6163 		.ascii	"black_threshold_l3\000"
 2546      6B5F7468 
 2546      72657368 
 2546      6F6C645F 
 2546      6C3300
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 59


 2547              	.LASF14:
 2548 011f 75696E74 		.ascii	"uint8\000"
 2548      3800
 2549              	.LASF57:
 2550 0125 4D656173 		.ascii	"Measure_Voltage\000"
 2550      7572655F 
 2550      566F6C74 
 2550      61676500 
 2551              	.LASF62:
 2552 0135 7265666C 		.ascii	"reflectance_start\000"
 2552      65637461 
 2552      6E63655F 
 2552      73746172 
 2552      7400
 2553              	.LASF79:
 2554 0147 706F7766 		.ascii	"powf\000"
 2554      00
 2555              	.LASF70:
 2556 014c 55415254 		.ascii	"UART_1_PutChar\000"
 2556      5F315F50 
 2556      75744368 
 2556      617200
 2557              	.LASF0:
 2558 015b 666C6F61 		.ascii	"float\000"
 2558      7400
 2559              	.LASF9:
 2560 0161 6C6F6E67 		.ascii	"long long int\000"
 2560      206C6F6E 
 2560      6720696E 
 2560      7400
 2561              	.LASF43:
 2562 016f 626C6163 		.ascii	"blackness_2\000"
 2562      6B6E6573 
 2562      735F3200 
 2563              	.LASF47:
 2564 017b 64696666 		.ascii	"diff_prev_ave\000"
 2564      5F707265 
 2564      765F6176 
 2564      6500
 2565              	.LASF68:
 2566 0189 7265666C 		.ascii	"reflectance_digital\000"
 2566      65637461 
 2566      6E63655F 
 2566      64696769 
 2566      74616C00 
 2567              	.LASF17:
 2568 019d 63686172 		.ascii	"char\000"
 2568      00
 2569              	.LASF41:
 2570 01a2 626C6163 		.ascii	"black_threshold\000"
 2570      6B5F7468 
 2570      72657368 
 2570      6F6C6400 
 2571              	.LASF26:
 2572 01b2 65786974 		.ascii	"exitMainLoop\000"
 2572      4D61696E 
 2572      4C6F6F70 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 60


 2572      00
 2573              	.LASF46:
 2574 01bf 64696666 		.ascii	"diff_ave\000"
 2574      5F617665 
 2574      00
 2575              	.LASF50:
 2576 01c8 62757474 		.ascii	"button\000"
 2576      6F6E00
 2577              	.LASF55:
 2578 01cf 55415254 		.ascii	"UART_1_Start\000"
 2578      5F315F53 
 2578      74617274 
 2578      00
 2579              	.LASF66:
 2580 01dc 43757374 		.ascii	"Custom_forward\000"
 2580      6F6D5F66 
 2580      6F727761 
 2580      726400
 2581              	.LASF2:
 2582 01eb 756E7369 		.ascii	"unsigned char\000"
 2582      676E6564 
 2582      20636861 
 2582      7200
 2583              	.LASF22:
 2584 01f9 65786974 		.ascii	"exit\000"
 2584      00
 2585              	.LASF42:
 2586 01fe 626C6163 		.ascii	"blackness_1\000"
 2586      6B6E6573 
 2586      735F3100 
 2587              	.LASF20:
 2588 020a 6C6F6E67 		.ascii	"long double\000"
 2588      20646F75 
 2588      626C6500 
 2589              	.LASF56:
 2590 0216 4144435F 		.ascii	"ADC_Battery_Start\000"
 2590      42617474 
 2590      6572795F 
 2590      53746172 
 2590      7400
 2591              	.LASF18:
 2592 0228 63796973 		.ascii	"cyisraddress\000"
 2592      72616464 
 2592      72657373 
 2592      00
 2593              	.LASF25:
 2594 0235 696E426C 		.ascii	"inBlack\000"
 2594      61636B00 
 2595              	.LASF61:
 2596 023d 7265666C 		.ascii	"reflectance_set_threshold\000"
 2596      65637461 
 2596      6E63655F 
 2596      7365745F 
 2596      74687265 
 2597              	.LASF53:
 2598 0257 5F726561 		.ascii	"_read\000"
 2598      6400
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 61


 2599              	.LASF35:
 2600 025d 77686974 		.ascii	"white_threshold_r1\000"
 2600      655F7468 
 2600      72657368 
 2600      6F6C645F 
 2600      723100
 2601              	.LASF1:
 2602 0270 7369676E 		.ascii	"signed char\000"
 2602      65642063 
 2602      68617200 
 2603              	.LASF36:
 2604 027c 77686974 		.ascii	"white_threshold_r3\000"
 2604      655F7468 
 2604      72657368 
 2604      6F6C645F 
 2604      723300
 2605              	.LASF10:
 2606 028f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2606      206C6F6E 
 2606      6720756E 
 2606      7369676E 
 2606      65642069 
 2607              	.LASF11:
 2608 02a6 756E7369 		.ascii	"unsigned int\000"
 2608      676E6564 
 2608      20696E74 
 2608      00
 2609              	.LASF12:
 2610 02b3 75696E74 		.ascii	"uint16_t\000"
 2610      31365F74 
 2610      00
 2611              	.LASF27:
 2612 02bc 7475726E 		.ascii	"turn\000"
 2612      00
 2613              	.LASF28:
 2614 02c1 73706565 		.ascii	"speed\000"
 2614      6400
 2615              	.LASF4:
 2616 02c7 73686F72 		.ascii	"short unsigned int\000"
 2616      7420756E 
 2616      7369676E 
 2616      65642069 
 2616      6E7400
 2617              	.LASF59:
 2618 02da 6D6F746F 		.ascii	"motor_forward\000"
 2618      725F666F 
 2618      72776172 
 2618      6400
 2619              	.LASF24:
 2620 02e8 636F756E 		.ascii	"countLines\000"
 2620      744C696E 
 2620      657300
 2621              	.LASF7:
 2622 02f3 6C6F6E67 		.ascii	"long int\000"
 2622      20696E74 
 2622      00
 2623              	.LASF44:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 62


 2624 02fc 626C6163 		.ascii	"blackDiff\000"
 2624      6B446966 
 2624      6600
 2625              	.LASF13:
 2626 0306 696E7433 		.ascii	"int32_t\000"
 2626      325F7400 
 2627              	.LASF75:
 2628 030e 433A5C55 		.ascii	"C:\\Users\\Ville L\\Desktop\\Zumo_Robotti\\Zumo_Rob"
 2628      73657273 
 2628      5C56696C 
 2628      6C65204C 
 2628      5C446573 
 2629 033c 6F747469 		.ascii	"otti\\ZumoBot.cydsn\000"
 2629      5C5A756D 
 2629      6F426F74 
 2629      2E637964 
 2629      736E00
 2630              	.LASF40:
 2631 034f 6D617844 		.ascii	"maxDiff\000"
 2631      69666600 
 2632              	.LASF64:
 2633 0357 42617474 		.ascii	"BatteryLed_Write\000"
 2633      6572794C 
 2633      65645F57 
 2633      72697465 
 2633      00
 2634              	.LASF71:
 2635 0368 5357315F 		.ascii	"SW1_Read\000"
 2635      52656164 
 2635      00
 2636              	.LASF15:
 2637 0371 75696E74 		.ascii	"uint32\000"
 2637      333200
 2638              	.LASF74:
 2639 0378 6D61696E 		.ascii	"main.c\000"
 2639      2E6300
 2640              	.LASF38:
 2641 037f 6D617844 		.ascii	"maxDiff_r1\000"
 2641      6966665F 
 2641      723100
 2642              	.LASF8:
 2643 038a 6C6F6E67 		.ascii	"long unsigned int\000"
 2643      20756E73 
 2643      69676E65 
 2643      6420696E 
 2643      7400
 2644              	.LASF60:
 2645 039c 73656E73 		.ascii	"sensor_isr_StartEx\000"
 2645      6F725F69 
 2645      73725F53 
 2645      74617274 
 2645      457800
 2646              	.LASF69:
 2647 03af 5475726E 		.ascii	"Turn\000"
 2647      00
 2648              	.LASF39:
 2649 03b4 64696769 		.ascii	"digital\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 63


 2649      74616C00 
 2650              	.LASF23:
 2651 03bc 6469725F 		.ascii	"dir_flag\000"
 2651      666C6167 
 2651      00
 2652              	.LASF54:
 2653 03c5 636F756E 		.ascii	"count\000"
 2653      7400
 2654              	.LASF6:
 2655 03cb 5F5F696E 		.ascii	"__int32_t\000"
 2655      7433325F 
 2655      7400
 2656              	.LASF31:
 2657 03d5 626C6163 		.ascii	"black_threshold_r1\000"
 2657      6B5F7468 
 2657      72657368 
 2657      6F6C645F 
 2657      723100
 2658              	.LASF48:
 2659 03e8 64696666 		.ascii	"diff_pos\000"
 2659      5F706F73 
 2659      00
 2660              	.LASF32:
 2661 03f1 626C6163 		.ascii	"black_threshold_r3\000"
 2661      6B5F7468 
 2661      72657368 
 2661      6F6C645F 
 2661      723300
 2662              	.LASF49:
 2663 0404 6E6F726D 		.ascii	"norm_blackness_2\000"
 2663      5F626C61 
 2663      636B6E65 
 2663      73735F32 
 2663      00
 2664              	.LASF16:
 2665 0415 646F7562 		.ascii	"double\000"
 2665      6C6500
 2666              	.LASF34:
 2667 041c 77686974 		.ascii	"white_threshold_l1\000"
 2667      655F7468 
 2667      72657368 
 2667      6F6C645F 
 2667      6C3100
 2668              	.LASF33:
 2669 042f 77686974 		.ascii	"white_threshold_l3\000"
 2669      655F7468 
 2669      72657368 
 2669      6F6C645F 
 2669      6C3300
 2670              	.LASF78:
 2671 0442 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2671      52784275 
 2671      66666572 
 2671      00
 2672              	.LASF65:
 2673 044f 43794465 		.ascii	"CyDelay\000"
 2673      6C617900 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccNVvBhc.s 			page 64


 2674              	.LASF67:
 2675 0457 7265666C 		.ascii	"reflectance_read\000"
 2675      65637461 
 2675      6E63655F 
 2675      72656164 
 2675      00
 2676              	.LASF63:
 2677 0468 49525F6C 		.ascii	"IR_led_Write\000"
 2677      65645F57 
 2677      72697465 
 2677      00
 2678              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
