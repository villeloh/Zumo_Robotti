ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_i2d
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_d2uiz
  21              		.section	.text.main,"ax",%progbits
  22              		.align	2
  23              		.global	main
  24              		.thumb
  25              		.thumb_func
  26              		.type	main, %function
  27              	main:
  28              	.LFB63:
  29              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        **** */
  12:main.c        ****     
  13:main.c        **** /**
  14:main.c        ****  * @file    main.c
  15:main.c        ****  * @brief   
  16:main.c        ****  * @details  ** You should enable global interrupt for operating properly. **<br>&nbsp;&nbsp;&nbsp;
  17:main.c        **** */
  18:main.c        **** 
  19:main.c        **** #include <project.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include "Motor.h"
  22:main.c        **** #include "Ultra.h"
  23:main.c        **** #include "Nunchuk.h"
  24:main.c        **** #include "Reflectance.h"
  25:main.c        **** #include "I2C_made.h"
  26:main.c        **** #include "Gyro.h"
  27:main.c        **** #include "Accel_magnet.h"
  28:main.c        **** #include "IR.h"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 2


  29:main.c        **** #include "Ambient.h"
  30:main.c        **** #include "Beep.h"
  31:main.c        **** 
  32:main.c        **** int rread(void);
  33:main.c        **** void motor_start();
  34:main.c        **** void motor_forward(uint8 speed,uint32 delay);
  35:main.c        **** void Custom_forward(uint8 speed);
  36:main.c        **** void motor_turn(uint8 l_speed, uint8 r_speed, uint32 delay);
  37:main.c        **** void reflectance_set_threshold(uint16_t l3, uint16_t l1, uint16_t r1, uint16_t r3);
  38:main.c        **** void Measure_Voltage();
  39:main.c        **** void Right_turn(uint8 speed);
  40:main.c        **** void Left_turn(uint8 speed);
  41:main.c        **** void Forceful_left_turn(uint8 speed);
  42:main.c        **** void Forceful_right_turn(uint8 speed);
  43:main.c        **** 
  44:main.c        **** 
  45:main.c        **** 
  46:main.c        **** int main()
  47:main.c        **** {
  30              		.loc 1 47 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 30B5     		push	{r4, r5, lr}
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 85B0     		sub	sp, sp, #20
  40              		.cfi_def_cfa_offset 32
  41              	.LVL0:
  48:main.c        ****     // 'Time counter' for the voltage measurement interval
  49:main.c        ****     int cycles = 0;
  50:main.c        ****     
  51:main.c        ****     // Needed for using the button to start the robot's movement routine
  52:main.c        ****     int exit = 0;
  53:main.c        ****     
  54:main.c        ****     int exitMain = 0;
  55:main.c        ****     
  56:main.c        ****     // turn value for the motors to use
  57:main.c        ****     uint8 turn = 0;
  58:main.c        ****     
  59:main.c        ****     // color thresholds for use in different behaviours
  60:main.c        ****     int threshold_l3 = 21000;
  61:main.c        ****     int threshold_l1 = 17500;
  62:main.c        ****     int threshold_r1 = 22000;
  63:main.c        ****     int threshold_r3 = 21500;
  64:main.c        ****     
  65:main.c        ****     // maximum movement speed of the robot
  66:main.c        ****     int speed = 124;
  67:main.c        ****     
  68:main.c        ****     // reflectance sub-limits for different turning behaviour
  69:main.c        ****     int left_forceful_limit = 14000;
  70:main.c        ****     int right_forceful_limit = 17000;
  71:main.c        ****       
  72:main.c        ****     struct sensors_ ref;
  73:main.c        ****     struct sensors_ dig;
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 3


  74:main.c        ****     CyGlobalIntEnable; 
  42              		.loc 1 74 0
  43              	@ 74 "main.c" 1
  44 0004 62B6     		CPSIE   i
  45              	@ 0 "" 2
  75:main.c        ****     UART_1_Start();
  46              		.loc 1 75 0
  47              		.thumb
  48 0006 FFF7FEFF 		bl	UART_1_Start
  49              	.LVL1:
  76:main.c        ****     ADC_Battery_Start();   
  50              		.loc 1 76 0
  51 000a FFF7FEFF 		bl	ADC_Battery_Start
  52              	.LVL2:
  77:main.c        ****     Measure_Voltage(); // measure battery voltage at robot start
  53              		.loc 1 77 0
  54 000e FFF7FEFF 		bl	Measure_Voltage
  55              	.LVL3:
  78:main.c        ****     
  79:main.c        ****     motor_start();
  56              		.loc 1 79 0
  57 0012 FFF7FEFF 		bl	motor_start
  58              	.LVL4:
  80:main.c        ****     motor_forward(0, 0); // stop the motor at robot start, as it seems to run at a low speed if sim
  59              		.loc 1 80 0
  60 0016 0020     		movs	r0, #0
  61 0018 0146     		mov	r1, r0
  62 001a FFF7FEFF 		bl	motor_forward
  63              	.LVL5:
  81:main.c        ****     
  82:main.c        ****     // Initialize IR sensors
  83:main.c        ****     sensor_isr_StartEx(sensor_isr_handler); 
  64              		.loc 1 83 0
  65 001e 5448     		ldr	r0, .L18+8
  66 0020 FFF7FEFF 		bl	sensor_isr_StartEx
  67              	.LVL6:
  84:main.c        ****     reflectance_set_threshold(threshold_l3, threshold_l1, threshold_r1, threshold_r3);  
  68              		.loc 1 84 0
  69 0024 45F20820 		movw	r0, #21000
  70 0028 44F25C41 		movw	r1, #17500
  71 002c 45F2F052 		movw	r2, #22000
  72 0030 45F2FC33 		movw	r3, #21500
  73 0034 FFF7FEFF 		bl	reflectance_set_threshold
  74              	.LVL7:
  85:main.c        ****     reflectance_start();
  75              		.loc 1 85 0
  76 0038 FFF7FEFF 		bl	reflectance_start
  77              	.LVL8:
  86:main.c        ****     IR_led_Write(1);
  78              		.loc 1 86 0
  79 003c 0120     		movs	r0, #1
  80 003e FFF7FEFF 		bl	IR_led_Write
  81              	.LVL9:
  87:main.c        **** 
  88:main.c        ****     printf("\nBoot\n");
  82              		.loc 1 88 0
  83 0042 4C48     		ldr	r0, .L18+12
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 4


  84 0044 FFF7FEFF 		bl	puts
  85              	.LVL10:
  89:main.c        **** 
  90:main.c        ****     //BatteryLed_Write(1); // Switch led on 
  91:main.c        ****     BatteryLed_Write(0); // Switch led off 
  86              		.loc 1 91 0
  87 0048 0020     		movs	r0, #0
  88 004a FFF7FEFF 		bl	BatteryLed_Write
  89              	.LVL11:
  52:main.c        ****     
  90              		.loc 1 52 0
  91 004e 0024     		movs	r4, #0
  92:main.c        ****     uint8 button;
  93:main.c        ****     //button = SW1_Read(); // read SW1 on pSoC board
  94:main.c        ****     
  95:main.c        ****     // To start the robot's movement routine, press the button
  96:main.c        ****     while (exit == 0) 
  92              		.loc 1 96 0
  93 0050 06E0     		b	.L3
  94              	.LVL12:
  95              	.L4:
  97:main.c        ****     {
  98:main.c        ****         button = SW1_Read();
  96              		.loc 1 98 0
  97 0052 FFF7FEFF 		bl	SW1_Read
  98              	.LVL13:
  99:main.c        ****         
 100:main.c        ****         if (button == 0) 
  99              		.loc 1 100 0
 100 0056 18B9     		cbnz	r0, .L3
 101              	.LVL14:
 101:main.c        ****         {
 102:main.c        ****             exit = 1;
 103:main.c        ****             CyDelay(1);
 102              		.loc 1 103 0
 103 0058 0120     		movs	r0, #1
 104              	.LVL15:
 105 005a FFF7FEFF 		bl	CyDelay
 106              	.LVL16:
 102:main.c        ****             CyDelay(1);
 107              		.loc 1 102 0
 108 005e 0124     		movs	r4, #1
 109              	.LVL17:
 110              	.L3:
  96:main.c        ****     {
 111              		.loc 1 96 0
 112 0060 002C     		cmp	r4, #0
 113 0062 F6D0     		beq	.L4
 104:main.c        ****         }
 105:main.c        ****     }
 106:main.c        ****     
 107:main.c        ****     Custom_forward(speed);
 114              		.loc 1 107 0
 115 0064 7C20     		movs	r0, #124
 116 0066 FFF7FEFF 		bl	Custom_forward
 117              	.LVL18:
  54:main.c        ****     
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 5


 118              		.loc 1 54 0
 119 006a 0025     		movs	r5, #0
  49:main.c        ****     
 120              		.loc 1 49 0
 121 006c 2C46     		mov	r4, r5
 122              	.LVL19:
 108:main.c        **** 
 109:main.c        ****     while(exitMain == 0)
 123              		.loc 1 109 0
 124 006e 73E0     		b	.L5
 125              	.LVL20:
 126              	.L16:
 110:main.c        ****     {    
 111:main.c        ****         
 112:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 24 000
 127              		.loc 1 112 0
 128 0070 02A8     		add	r0, sp, #8
 129 0072 FFF7FEFF 		bl	reflectance_read
 130              	.LVL21:
 113:main.c        ****         //printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period
 114:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 131              		.loc 1 114 0
 132 0076 6846     		mov	r0, sp
 133 0078 FFF7FEFF 		bl	reflectance_digital
 134              	.LVL22:
 115:main.c        ****         //printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 acc
 116:main.c        ****         //CyDelay(1000); // comment this delay out when doing movement tests / racing !!!
 117:main.c        ****         
 118:main.c        ****         
 119:main.c        ****         // Line-following logic (alpha version ... ).
 120:main.c        ****         // NOTE: due to the calibration of the motor speeds, 248 (255 - 7) is our current max speed
 121:main.c        ****         // NOTE#2: I'm not sure if there is a better way of doing things than to continuously call 
 122:main.c        ****         // It seems horribly inefficient, but it's an easy way to stop the turn exactly when the va
 123:main.c        ****         if (dig.l1 == 1)
 135              		.loc 1 123 0
 136 007c BDF80230 		ldrh	r3, [sp, #2]
 137 0080 012B     		cmp	r3, #1
 138 0082 2AD1     		bne	.L6
 139              	.L9:
 124:main.c        ****         { 
 125:main.c        ****             // When the robot starts to veer off to the left, do a correction towards the right, un
 126:main.c        ****             do {
 127:main.c        ****                 reflectance_read(&ref);
 140              		.loc 1 127 0
 141 0084 02A8     		add	r0, sp, #8
 142 0086 FFF7FEFF 		bl	reflectance_read
 143              	.LVL23:
 128:main.c        ****                 reflectance_digital(&dig); 
 144              		.loc 1 128 0
 145 008a 6846     		mov	r0, sp
 146 008c FFF7FEFF 		bl	reflectance_digital
 147              	.LVL24:
 129:main.c        ****                 
 130:main.c        ****                 turn = 248 * (ref.l1 / threshold_l1);
 148              		.loc 1 130 0
 149 0090 BDF80A20 		ldrh	r2, [sp, #10]
 150 0094 384B     		ldr	r3, .L18+16
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 6


 151 0096 83FB0213 		smull	r1, r3, r3, r2
 152 009a DB12     		asrs	r3, r3, #11
 153 009c C3EB4313 		rsb	r3, r3, r3, lsl #5
 154 00a0 D800     		lsls	r0, r3, #3
 155 00a2 C0B2     		uxtb	r0, r0
 156              	.LVL25:
 131:main.c        ****                 
 132:main.c        ****                 // If the reflectance reaches a certain level of whiteness, execute a more forceful
 133:main.c        ****                 // NOTE: This would work better with the SPEED of the change in reflectance, as hig
 134:main.c        ****                 // is reached quicker in steeped curves
 135:main.c        ****                 if (ref.l1 < left_forceful_limit)
 157              		.loc 1 135 0
 158 00a4 43F2AF63 		movw	r3, #13999
 159 00a8 9A42     		cmp	r2, r3
 160 00aa 0CDC     		bgt	.L7
 136:main.c        ****                 {
 137:main.c        ****                     //Forceful_right_turn(turn);
 138:main.c        ****                     turn *= 0.7;
 161              		.loc 1 138 0
 162 00ac FFF7FEFF 		bl	__aeabi_i2d
 163              	.LVL26:
 164 00b0 2DA3     		adr	r3, .L18
 165 00b2 D3E90023 		ldrd	r2, [r3]
 166 00b6 FFF7FEFF 		bl	__aeabi_dmul
 167              	.LVL27:
 168 00ba FFF7FEFF 		bl	__aeabi_d2uiz
 169              	.LVL28:
 139:main.c        ****                     Right_turn(turn);
 170              		.loc 1 139 0
 171 00be C0B2     		uxtb	r0, r0
 172 00c0 FFF7FEFF 		bl	Right_turn
 173              	.LVL29:
 174 00c4 01E0     		b	.L8
 175              	.LVL30:
 176              	.L7:
 140:main.c        ****                     
 141:main.c        ****                 } else {
 142:main.c        ****                 
 143:main.c        ****                     Right_turn(turn); 
 177              		.loc 1 143 0
 178 00c6 FFF7FEFF 		bl	Right_turn
 179              	.LVL31:
 180              	.L8:
 144:main.c        ****                 }
 145:main.c        ****                 
 146:main.c        ****             } while (dig.l1 == 1);
 181              		.loc 1 146 0
 182 00ca BDF80230 		ldrh	r3, [sp, #2]
 183 00ce 012B     		cmp	r3, #1
 184 00d0 D8D0     		beq	.L9
 147:main.c        ****             Custom_forward(speed);
 185              		.loc 1 147 0
 186 00d2 7C20     		movs	r0, #124
 187 00d4 FFF7FEFF 		bl	Custom_forward
 188              	.LVL32:
 189 00d8 2DE0     		b	.L10
 190              	.L6:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 7


 148:main.c        ****                     
 149:main.c        ****         } else if (dig.r1 == 1) {
 191              		.loc 1 149 0
 192 00da BDF80430 		ldrh	r3, [sp, #4]
 193 00de 012B     		cmp	r3, #1
 194 00e0 29D1     		bne	.L10
 195              	.L13:
 150:main.c        ****             
 151:main.c        ****             // When the robot starts to veer off to the right, do a correction towards the left, un
 152:main.c        ****             do {
 153:main.c        ****                 reflectance_read(&ref); 
 196              		.loc 1 153 0
 197 00e2 02A8     		add	r0, sp, #8
 198 00e4 FFF7FEFF 		bl	reflectance_read
 199              	.LVL33:
 154:main.c        ****                 reflectance_digital(&dig);
 200              		.loc 1 154 0
 201 00e8 6846     		mov	r0, sp
 202 00ea FFF7FEFF 		bl	reflectance_digital
 203              	.LVL34:
 155:main.c        ****                 
 156:main.c        ****                 turn = 248 * (ref.r1 / threshold_r1);
 204              		.loc 1 156 0
 205 00ee BDF80C20 		ldrh	r2, [sp, #12]
 206 00f2 224B     		ldr	r3, .L18+20
 207 00f4 83FB0213 		smull	r1, r3, r3, r2
 208 00f8 5B13     		asrs	r3, r3, #13
 209 00fa C3EB4313 		rsb	r3, r3, r3, lsl #5
 210 00fe D800     		lsls	r0, r3, #3
 211 0100 C0B2     		uxtb	r0, r0
 212              	.LVL35:
 157:main.c        **** 
 158:main.c        ****                 // If the reflectance reaches a certain level of whiteness, execute a more forceful
 159:main.c        ****                 // NOTE: This would work better with the SPEED of the change in reflectance, as hig
 160:main.c        ****                 // is reached quicker in steeped curves
 161:main.c        ****                 if (ref.r1 < right_forceful_limit)
 213              		.loc 1 161 0
 214 0102 44F26723 		movw	r3, #16999
 215 0106 9A42     		cmp	r2, r3
 216 0108 0CDC     		bgt	.L11
 162:main.c        ****                 {
 163:main.c        ****                     //Forceful_left_turn(turn);
 164:main.c        ****                     turn *= 0.7;
 217              		.loc 1 164 0
 218 010a FFF7FEFF 		bl	__aeabi_i2d
 219              	.LVL36:
 220 010e 16A3     		adr	r3, .L18
 221 0110 D3E90023 		ldrd	r2, [r3]
 222 0114 FFF7FEFF 		bl	__aeabi_dmul
 223              	.LVL37:
 224 0118 FFF7FEFF 		bl	__aeabi_d2uiz
 225              	.LVL38:
 165:main.c        ****                     Left_turn(turn);
 226              		.loc 1 165 0
 227 011c C0B2     		uxtb	r0, r0
 228 011e FFF7FEFF 		bl	Left_turn
 229              	.LVL39:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 8


 230 0122 01E0     		b	.L12
 231              	.LVL40:
 232              	.L11:
 166:main.c        ****                     
 167:main.c        ****                 } else {
 168:main.c        ****                 
 169:main.c        ****                     Left_turn(turn); 
 233              		.loc 1 169 0
 234 0124 FFF7FEFF 		bl	Left_turn
 235              	.LVL41:
 236              	.L12:
 170:main.c        ****                 }
 171:main.c        **** 
 172:main.c        ****             } while (dig.r1 == 1);
 237              		.loc 1 172 0
 238 0128 BDF80430 		ldrh	r3, [sp, #4]
 239 012c 012B     		cmp	r3, #1
 240 012e D8D0     		beq	.L13
 173:main.c        ****             Custom_forward(speed);
 241              		.loc 1 173 0
 242 0130 7C20     		movs	r0, #124
 243 0132 FFF7FEFF 		bl	Custom_forward
 244              	.LVL42:
 245              	.L10:
 174:main.c        ****         } 
 175:main.c        ****                                     
 176:main.c        ****         // For measuring the battery voltage at regular intervals. 
 177:main.c        ****         // 80000 'cycles' should equal ~80 seconds, due to the delay that is used below (1).
 178:main.c        ****         // NOTE: the cycle limit will have to be adjusted each time we add delays to the while loop
 179:main.c        ****         // There must be a way around this, but for now we should keep this in mind and adjust it a
 180:main.c        ****         // NOTE2: If ALL delays are disabled, change the limit to 30 000 000 !
 181:main.c        ****         cycles++;
 246              		.loc 1 181 0
 247 0136 0134     		adds	r4, r4, #1
 248              	.LVL43:
 182:main.c        ****         if (cycles >= 80000)
 249              		.loc 1 182 0
 250 0138 114B     		ldr	r3, .L18+24
 251 013a 9C42     		cmp	r4, r3
 252 013c 02DD     		ble	.L14
 183:main.c        ****         {
 184:main.c        ****             Measure_Voltage();
 253              		.loc 1 184 0
 254 013e FFF7FEFF 		bl	Measure_Voltage
 255              	.LVL44:
 185:main.c        ****             cycles = 0;
 256              		.loc 1 185 0
 257 0142 0024     		movs	r4, #0
 258              	.LVL45:
 259              	.L14:
 186:main.c        ****         }
 187:main.c        ****         
 188:main.c        ****         CyDelay(1);
 260              		.loc 1 188 0
 261 0144 0120     		movs	r0, #1
 262 0146 FFF7FEFF 		bl	CyDelay
 263              	.LVL46:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 9


 189:main.c        ****         
 190:main.c        ****         button = SW1_Read();
 264              		.loc 1 190 0
 265 014a FFF7FEFF 		bl	SW1_Read
 266              	.LVL47:
 191:main.c        ****         if (button == 0) 
 267              		.loc 1 191 0
 268 014e 18B9     		cbnz	r0, .L5
 269              	.LVL48:
 192:main.c        ****         {
 193:main.c        ****             exitMain = 1;
 194:main.c        ****             CyDelay(1);
 270              		.loc 1 194 0
 271 0150 0120     		movs	r0, #1
 272              	.LVL49:
 273 0152 FFF7FEFF 		bl	CyDelay
 274              	.LVL50:
 193:main.c        ****             CyDelay(1);
 275              		.loc 1 193 0
 276 0156 0125     		movs	r5, #1
 277              	.LVL51:
 278              	.L5:
 109:main.c        ****     {    
 279              		.loc 1 109 0
 280 0158 002D     		cmp	r5, #0
 281 015a 89D0     		beq	.L16
 195:main.c        ****         }
 196:main.c        ****     }
 197:main.c        ****     
 198:main.c        ****     motor_stop();
 282              		.loc 1 198 0
 283 015c FFF7FEFF 		bl	motor_stop
 284              	.LVL52:
 199:main.c        ****     return 0;
 200:main.c        ****      
 201:main.c        ****  }   
 285              		.loc 1 201 0
 286 0160 0020     		movs	r0, #0
 287 0162 05B0     		add	sp, sp, #20
 288              		.cfi_def_cfa_offset 12
 289              		@ sp needed
 290 0164 30BD     		pop	{r4, r5, pc}
 291              	.LVL53:
 292              	.L19:
 293 0166 00BF     		.align	3
 294              	.L18:
 295 0168 66666666 		.word	1717986918
 296 016c 6666E63F 		.word	1072064102
 297 0170 00000000 		.word	sensor_isr_handler
 298 0174 00000000 		.word	.LC0
 299 0178 9F95F51D 		.word	502633887
 300 017c 2939535F 		.word	1599289641
 301 0180 7F380100 		.word	79999
 302              		.cfi_endproc
 303              	.LFE63:
 304              		.size	main, .-main
 305 0184 AFF30080 		.section	.text._write,"ax",%progbits
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 10


 306              		.align	2
 307              		.global	_write
 308              		.thumb
 309              		.thumb_func
 310              		.type	_write, %function
 311              	_write:
 312              	.LFB64:
 202:main.c        **** 
 203:main.c        **** // ================================================================================================
 204:main.c        **** // ================================================================================================
 205:main.c        **** 
 206:main.c        **** 
 207:main.c        **** //*/
 208:main.c        **** 
 209:main.c        **** /*//ultra sonic sensor//
 210:main.c        **** int main()
 211:main.c        **** {
 212:main.c        ****     CyGlobalIntEnable; 
 213:main.c        ****     UART_1_Start();
 214:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 215:main.c        ****     while(1) {
 216:main.c        ****         //If you want to print out the value  
 217:main.c        ****         printf("distance = %5.0f\r\n", Ultra_GetDistance());
 218:main.c        ****         CyDelay(1000);
 219:main.c        ****     }
 220:main.c        **** }   
 221:main.c        **** //*/
 222:main.c        **** 
 223:main.c        **** 
 224:main.c        **** /*//nunchuk//
 225:main.c        **** int main()
 226:main.c        **** {
 227:main.c        ****     CyGlobalIntEnable; 
 228:main.c        ****     UART_1_Start();
 229:main.c        ****   
 230:main.c        ****     nunchuk_start();
 231:main.c        ****     nunchuk_init();
 232:main.c        ****     
 233:main.c        ****     for(;;)
 234:main.c        ****     {    
 235:main.c        ****         nunchuk_read();
 236:main.c        ****     }
 237:main.c        **** }   
 238:main.c        **** //*/
 239:main.c        **** 
 240:main.c        **** 
 241:main.c        **** /*//IR receiver//
 242:main.c        **** int main()
 243:main.c        **** {
 244:main.c        ****     CyGlobalIntEnable; 
 245:main.c        ****     UART_1_Start();
 246:main.c        ****     
 247:main.c        ****     unsigned int IR_val; 
 248:main.c        ****     
 249:main.c        ****     for(;;)
 250:main.c        ****     {
 251:main.c        ****        IR_val = get_IR();
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 11


 252:main.c        ****        printf("%x\r\n\n",IR_val);
 253:main.c        ****     }    
 254:main.c        ****  }   
 255:main.c        **** //*/
 256:main.c        **** 
 257:main.c        **** 
 258:main.c        **** /*//Ambient light sensor//
 259:main.c        **** int main()
 260:main.c        **** {
 261:main.c        ****     CyGlobalIntEnable; 
 262:main.c        ****     UART_1_Start();
 263:main.c        ****     
 264:main.c        ****     I2C_Start();
 265:main.c        ****     
 266:main.c        ****     I2C_write(0x29,0x80,0x00);          // set to power down
 267:main.c        ****     I2C_write(0x29,0x80,0x03);          // set to power on
 268:main.c        ****     
 269:main.c        ****     for(;;)
 270:main.c        ****     {    
 271:main.c        ****         uint8 Data0Low,Data0High,Data1Low,Data1High;
 272:main.c        ****         Data0Low = I2C_read(0x29,CH0_L);
 273:main.c        ****         Data0High = I2C_read(0x29,CH0_H);
 274:main.c        ****         Data1Low = I2C_read(0x29,CH1_L);
 275:main.c        ****         Data1High = I2C_read(0x29,CH1_H);
 276:main.c        ****         
 277:main.c        ****         uint8 CH0, CH1;
 278:main.c        ****         CH0 = convert_raw(Data0Low,Data0High);      // combine Data0
 279:main.c        ****         CH1 = convert_raw(Data1Low,Data1High);      // combine Data1
 280:main.c        **** 
 281:main.c        ****         double Ch0 = CH0;
 282:main.c        ****         double Ch1 = CH1;
 283:main.c        ****         
 284:main.c        ****         double data = 0;
 285:main.c        ****         data = getLux(Ch0,Ch1);
 286:main.c        ****         
 287:main.c        ****         // If you want to print out data
 288:main.c        ****         //printf("%lf\r\n",data);    
 289:main.c        ****     }    
 290:main.c        ****  }   
 291:main.c        **** //*/
 292:main.c        **** 
 293:main.c        **** 
 294:main.c        **** /*//accelerometer//
 295:main.c        **** int main()
 296:main.c        **** {
 297:main.c        ****     CyGlobalIntEnable; 
 298:main.c        ****     UART_1_Start();
 299:main.c        ****   
 300:main.c        ****     I2C_Start();
 301:main.c        ****   
 302:main.c        ****     uint8 X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A;
 303:main.c        ****     int16 X_AXIS_A, Y_AXIS_A, Z_AXIS_A;
 304:main.c        ****     
 305:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 306:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 307:main.c        ****     
 308:main.c        ****     
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 12


 309:main.c        ****     for(;;)
 310:main.c        ****     {
 311:main.c        ****         //print out accelerometer output
 312:main.c        ****         X_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_A);
 313:main.c        ****         X_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_A);
 314:main.c        ****         X_AXIS_A = convert_raw(X_L_A, X_H_A);
 315:main.c        ****         
 316:main.c        ****         Y_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_A);
 317:main.c        ****         Y_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_A);
 318:main.c        ****         Y_AXIS_A = convert_raw(Y_L_A, Y_H_A);
 319:main.c        ****         
 320:main.c        ****         Z_L_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_A);
 321:main.c        ****         Z_H_A = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_A);
 322:main.c        ****         Z_AXIS_A = convert_raw(Z_L_A, Z_H_A);
 323:main.c        ****         
 324:main.c        ****         printf("ACCEL: %d %d %d %d %d %d \r\n", X_L_A, X_H_A, Y_L_A, Y_H_A, Z_L_A, Z_H_A);
 325:main.c        ****         value_convert_accel(X_AXIS_A, Y_AXIS_A, Z_AXIS_A);
 326:main.c        ****         printf("\n");
 327:main.c        ****         
 328:main.c        ****         CyDelay(50);
 329:main.c        ****     }
 330:main.c        **** }   
 331:main.c        **** //*/
 332:main.c        **** 
 333:main.c        **** 
 334:main.c        **** /*//reflectance//
 335:main.c        **** int main()
 336:main.c        **** {
 337:main.c        ****     struct sensors_ ref;
 338:main.c        ****     struct sensors_ dig;
 339:main.c        ****     CyGlobalIntEnable; 
 340:main.c        ****     UART_1_Start();
 341:main.c        ****   
 342:main.c        ****     sensor_isr_StartEx(sensor_isr_handler);
 343:main.c        ****     
 344:main.c        ****     reflectance_start();
 345:main.c        **** 
 346:main.c        ****     IR_led_Write(1);
 347:main.c        ****     for(;;)
 348:main.c        ****     {
 349:main.c        ****         reflectance_read(&ref); // raw sensor value; 0 - 22 000
 350:main.c        ****         printf("%d %d %d %d \r\n", ref.l3, ref.l1, ref.r1, ref.r3);       //print out each period o
 351:main.c        ****         reflectance_digital(&dig);      //print out 0 or 1 according to results of reflectance peri
 352:main.c        ****         printf("%d %d %d %d \r\n", dig.l3, dig.l1, dig.r1, dig.r3);        //print out 0 or 1 accor
 353:main.c        ****         
 354:main.c        ****         CyDelay(500);
 355:main.c        ****     }
 356:main.c        **** }   
 357:main.c        **** //*/
 358:main.c        **** 
 359:main.c        ****  /* //motor//
 360:main.c        **** int main()
 361:main.c        **** {
 362:main.c        ****     CyGlobalIntEnable; 
 363:main.c        ****     UART_1_Start();
 364:main.c        **** 
 365:main.c        ****     motor_start();              // motor start
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 13


 366:main.c        **** 
 367:main.c        ****     motor_forward(100,2000);     // moving forward
 368:main.c        ****     motor_turn(200,50,2000);     // turn
 369:main.c        ****     motor_turn(50,200,2000);     // turn
 370:main.c        ****     motor_backward(100,2000);    // movinb backward
 371:main.c        ****        
 372:main.c        ****     motor_stop();               // motor stop
 373:main.c        ****     
 374:main.c        ****     for(;;)
 375:main.c        ****     {
 376:main.c        **** 
 377:main.c        ****     }
 378:main.c        **** }
 379:main.c        **** //*/
 380:main.c        ****     
 381:main.c        **** 
 382:main.c        **** /*//gyroscope//
 383:main.c        **** int main()
 384:main.c        **** {
 385:main.c        ****     CyGlobalIntEnable; 
 386:main.c        ****     UART_1_Start();
 387:main.c        ****   
 388:main.c        ****     I2C_Start();
 389:main.c        ****   
 390:main.c        ****     uint8 X_L_G, X_H_G, Y_L_G, Y_H_G, Z_L_G, Z_H_G;
 391:main.c        ****     int16 X_AXIS_G, Y_AXIS_G, Z_AXIS_G;
 392:main.c        ****     
 393:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 394:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps 
 395:main.c        ****     
 396:main.c        ****     for(;;)
 397:main.c        ****     {
 398:main.c        ****         //print out gyroscope output
 399:main.c        ****         X_L_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_L);
 400:main.c        ****         X_H_G = I2C_read(GYRO_ADDR, OUT_X_AXIS_H);
 401:main.c        ****         X_AXIS_G = convert_raw(X_H_G, X_L_G);
 402:main.c        ****         
 403:main.c        ****         
 404:main.c        ****         Y_L_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_L);
 405:main.c        ****         Y_H_G = I2C_read(GYRO_ADDR, OUT_Y_AXIS_H);
 406:main.c        ****         Y_AXIS_G = convert_raw(Y_H_G, Y_L_G);
 407:main.c        ****         
 408:main.c        ****         
 409:main.c        ****         Z_L_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_L);
 410:main.c        ****         Z_H_G = I2C_read(GYRO_ADDR, OUT_Z_AXIS_H);
 411:main.c        ****         Z_AXIS_G = convert_raw(Z_H_G, Z_L_G);
 412:main.c        ****      
 413:main.c        ****         // If you want to print value
 414:main.c        ****         printf("%d %d %d \r\n", X_AXIS_G, Y_AXIS_G, Z_AXIS_G);
 415:main.c        ****         CyDelay(50);
 416:main.c        ****     }
 417:main.c        **** }   
 418:main.c        **** //*/
 419:main.c        **** 
 420:main.c        **** 
 421:main.c        **** /*//magnetometer//
 422:main.c        **** int main()
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 14


 423:main.c        **** {
 424:main.c        ****     CyGlobalIntEnable; 
 425:main.c        ****     UART_1_Start();
 426:main.c        ****   
 427:main.c        ****     I2C_Start();
 428:main.c        ****    
 429:main.c        ****     uint8 X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M;
 430:main.c        ****     int16 X_AXIS, Y_AXIS, Z_AXIS;
 431:main.c        ****     
 432:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL1_REG, 0x0F);             // set gyroscope into active mode
 433:main.c        ****     I2C_write(GYRO_ADDR, GYRO_CTRL4_REG, 0x30);             // set full scale selection to 2000dps
 434:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL1_REG, 0x37);           // set accelerometer & magnetometer
 435:main.c        ****     I2C_write(ACCEL_MAG_ADDR, ACCEL_CTRL7_REG, 0x22);
 436:main.c        ****     
 437:main.c        ****     
 438:main.c        ****     for(;;)
 439:main.c        ****     {
 440:main.c        ****         X_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_L_M);
 441:main.c        ****         X_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_X_H_M);
 442:main.c        ****         X_AXIS = convert_raw(X_L_M, X_H_M);
 443:main.c        ****         
 444:main.c        ****         Y_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_L_M);
 445:main.c        ****         Y_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Y_H_M);
 446:main.c        ****         Y_AXIS = convert_raw(Y_L_M, Y_H_M);
 447:main.c        ****         
 448:main.c        ****         Z_L_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_L_M);
 449:main.c        ****         Z_H_M = I2C_read(ACCEL_MAG_ADDR, OUT_Z_H_M);
 450:main.c        ****         Z_AXIS = convert_raw(Z_L_M, Z_H_M);
 451:main.c        ****         
 452:main.c        ****         heading(X_AXIS, Y_AXIS);
 453:main.c        ****         printf("MAGNET: %d %d %d %d %d %d \r\n", X_L_M, X_H_M, Y_L_M, Y_H_M, Z_L_M, Z_H_M);
 454:main.c        ****         printf("%d %d %d \r\n", X_AXIS,Y_AXIS, Z_AXIS);
 455:main.c        ****         CyDelay(50);      
 456:main.c        ****     }
 457:main.c        **** }   
 458:main.c        **** //*/
 459:main.c        **** 
 460:main.c        **** 
 461:main.c        **** /*
 462:main.c        **** 
 463:main.c        **** 
 464:main.c        ****     <p>
 465:main.c        ****     <B>Sensors</B><br>
 466:main.c        ****     &nbsp;Included: <br>
 467:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
 468:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
 469:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
 470:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
 471:main.c        ****     &nbsp;Wii nunchuck<br>
 472:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
 473:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
 474:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
 475:main.c        ****     &nbsp;IR LED <br><br><br>
 476:main.c        ****     </p>
 477:main.c        ****     
 478:main.c        ****     <p>
 479:main.c        ****     <B>Communication</B><br>
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 15


 480:main.c        ****     I2C, UART, Serial<br>
 481:main.c        ****     </p>
 482:main.c        **** 
 483:main.c        **** */
 484:main.c        **** 
 485:main.c        **** 
 486:main.c        **** #if 0
 487:main.c        **** int rread(void)
 488:main.c        **** {
 489:main.c        ****     SC0_SetDriveMode(PIN_DM_STRONG);
 490:main.c        ****     SC0_Write(1);
 491:main.c        ****     CyDelayUs(10);
 492:main.c        ****     SC0_SetDriveMode(PIN_DM_DIG_HIZ);
 493:main.c        ****     Timer_1_Start();
 494:main.c        ****     uint16_t start = Timer_1_ReadCounter();
 495:main.c        ****     uint16_t end = 0;
 496:main.c        ****     while(!(Timer_1_ReadStatusRegister() & Timer_1_STATUS_TC)) {
 497:main.c        ****         if(SC0_Read() == 0 && end == 0) {
 498:main.c        ****             end = Timer_1_ReadCounter();
 499:main.c        ****         }
 500:main.c        ****     }
 501:main.c        ****     Timer_1_Stop();
 502:main.c        ****     
 503:main.c        ****     return (start - end);
 504:main.c        **** }
 505:main.c        **** #endif
 506:main.c        **** 
 507:main.c        **** /* Don't remove the functions below */
 508:main.c        **** int _write(int file, char *ptr, int len)
 509:main.c        **** {
 313              		.loc 1 509 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL54:
 318 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 319              		.cfi_def_cfa_offset 24
 320              		.cfi_offset 3, -24
 321              		.cfi_offset 4, -20
 322              		.cfi_offset 5, -16
 323              		.cfi_offset 6, -12
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 0C46     		mov	r4, r1
 327 0004 1746     		mov	r7, r2
 328              	.LVL55:
 510:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 511:main.c        **** 	int n;
 512:main.c        **** 	for(n = 0; n < len; n++) {
 329              		.loc 1 512 0
 330 0006 0025     		movs	r5, #0
 331 0008 0BE0     		b	.L21
 332              	.LVL56:
 333              	.L23:
 513:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 334              		.loc 1 513 0
 335 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 16


 336 000c 0A2B     		cmp	r3, #10
 337 000e 02D1     		bne	.L22
 338              		.loc 1 513 0 is_stmt 0 discriminator 1
 339 0010 0D20     		movs	r0, #13
 340 0012 FFF7FEFF 		bl	UART_1_PutChar
 341              	.LVL57:
 342              	.L22:
 514:main.c        **** 		UART_1_PutChar(*ptr++);
 343              		.loc 1 514 0 is_stmt 1 discriminator 2
 344 0016 661C     		adds	r6, r4, #1
 345              	.LVL58:
 346 0018 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 347 001a FFF7FEFF 		bl	UART_1_PutChar
 348              	.LVL59:
 512:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 349              		.loc 1 512 0 discriminator 2
 350 001e 0135     		adds	r5, r5, #1
 351              	.LVL60:
 352              		.loc 1 514 0 discriminator 2
 353 0020 3446     		mov	r4, r6
 354              	.LVL61:
 355              	.L21:
 512:main.c        ****         if(*ptr == '\n') UART_1_PutChar('\r');
 356              		.loc 1 512 0 discriminator 1
 357 0022 BD42     		cmp	r5, r7
 358 0024 F1DB     		blt	.L23
 515:main.c        **** 	}
 516:main.c        **** 	return len;
 517:main.c        **** }
 359              		.loc 1 517 0
 360 0026 3846     		mov	r0, r7
 361 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 362              		.cfi_endproc
 363              	.LFE64:
 364              		.size	_write, .-_write
 365 002a 00BF     		.section	.text._read,"ax",%progbits
 366              		.align	2
 367              		.global	_read
 368              		.thumb
 369              		.thumb_func
 370              		.type	_read, %function
 371              	_read:
 372              	.LFB65:
 518:main.c        **** 
 519:main.c        **** int _read (int file, char *ptr, int count)
 520:main.c        **** {
 373              		.loc 1 520 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              	.LVL62:
 378 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 379              		.cfi_def_cfa_offset 24
 380              		.cfi_offset 3, -24
 381              		.cfi_offset 4, -20
 382              		.cfi_offset 5, -16
 383              		.cfi_offset 6, -12
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 17


 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 0F46     		mov	r7, r1
 387 0004 1446     		mov	r4, r2
 388              	.LVL63:
 521:main.c        ****     int chs = 0;
 389              		.loc 1 521 0
 390 0006 0026     		movs	r6, #0
 522:main.c        ****     char ch;
 523:main.c        ****  
 524:main.c        ****     (void)file; /* Parameter is not used, suppress unused argument warning */
 525:main.c        ****     while(count > 0) {
 391              		.loc 1 525 0
 392 0008 12E0     		b	.L27
 393              	.LVL64:
 394              	.L30:
 526:main.c        ****         ch = UART_1_GetChar();
 395              		.loc 1 526 0
 396 000a FFF7FEFF 		bl	UART_1_GetChar
 397              	.LVL65:
 527:main.c        ****         if(ch != 0) {
 398              		.loc 1 527 0
 399 000e 0546     		mov	r5, r0
 400 0010 70B1     		cbz	r0, .L27
 528:main.c        ****             UART_1_PutChar(ch);
 401              		.loc 1 528 0
 402 0012 FFF7FEFF 		bl	UART_1_PutChar
 403              	.LVL66:
 529:main.c        ****             chs++;
 404              		.loc 1 529 0
 405 0016 0136     		adds	r6, r6, #1
 406              	.LVL67:
 530:main.c        ****             if(ch == '\r') {
 407              		.loc 1 530 0
 408 0018 0D2D     		cmp	r5, #13
 409 001a 03D1     		bne	.L28
 410              	.LVL68:
 531:main.c        ****                 ch = '\n';
 532:main.c        ****                 UART_1_PutChar(ch);
 411              		.loc 1 532 0
 412 001c 0A20     		movs	r0, #10
 413 001e FFF7FEFF 		bl	UART_1_PutChar
 414              	.LVL69:
 531:main.c        ****                 ch = '\n';
 415              		.loc 1 531 0
 416 0022 0A25     		movs	r5, #10
 417              	.LVL70:
 418              	.L28:
 533:main.c        ****             }
 534:main.c        ****             *ptr++ = ch;
 419              		.loc 1 534 0
 420 0024 7B1C     		adds	r3, r7, #1
 421              	.LVL71:
 422 0026 3D70     		strb	r5, [r7]
 535:main.c        ****             count--;
 423              		.loc 1 535 0
 424 0028 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 18


 425              	.LVL72:
 536:main.c        ****             if(ch == '\n') break;
 426              		.loc 1 536 0
 427 002a 0A2D     		cmp	r5, #10
 428 002c 02D0     		beq	.L29
 534:main.c        ****             count--;
 429              		.loc 1 534 0
 430 002e 1F46     		mov	r7, r3
 431              	.LVL73:
 432              	.L27:
 525:main.c        ****         ch = UART_1_GetChar();
 433              		.loc 1 525 0
 434 0030 002C     		cmp	r4, #0
 435 0032 EADC     		bgt	.L30
 436              	.LVL74:
 437              	.L29:
 537:main.c        ****         }
 538:main.c        ****     }
 539:main.c        ****     return chs;
 540:main.c        **** }
 438              		.loc 1 540 0
 439 0034 3046     		mov	r0, r6
 440 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 441              		.cfi_endproc
 442              	.LFE65:
 443              		.size	_read, .-_read
 444              		.section	.rodata.str1.4,"aMS",%progbits,1
 445              		.align	2
 446              	.LC0:
 447 0000 0A426F6F 		.ascii	"\012Boot\000"
 447      7400
 448 0006 0000     		.text
 449              	.Letext0:
 450              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 451              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 452              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 453              		.file 5 ".\\ZumoLibrary/Reflectance.h"
 454              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 455              		.file 7 "Generated_Source\\PSoC5/ADC_Battery.h"
 456              		.file 8 "Generated_Source\\PSoC5/sensor_isr.h"
 457              		.file 9 "Generated_Source\\PSoC5/IR_led.h"
 458              		.file 10 "Generated_Source\\PSoC5/BatteryLed.h"
 459              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 460              		.file 12 ".\\ZumoLibrary/Motor.h"
 461              		.file 13 "Generated_Source\\PSoC5/SW1.h"
 462              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 463              		.file 15 "<built-in>"
 464              		.section	.debug_info,"",%progbits
 465              	.Ldebug_info0:
 466 0000 5E060000 		.4byte	0x65e
 467 0004 0400     		.2byte	0x4
 468 0006 00000000 		.4byte	.Ldebug_abbrev0
 469 000a 04       		.byte	0x4
 470 000b 01       		.uleb128 0x1
 471 000c 3B020000 		.4byte	.LASF57
 472 0010 01       		.byte	0x1
 473 0011 33030000 		.4byte	.LASF58
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 19


 474 0015 D1020000 		.4byte	.LASF59
 475 0019 00000000 		.4byte	.Ldebug_ranges0+0
 476 001d 00000000 		.4byte	0
 477 0021 00000000 		.4byte	.Ldebug_line0
 478 0025 02       		.uleb128 0x2
 479 0026 01       		.byte	0x1
 480 0027 06       		.byte	0x6
 481 0028 AB010000 		.4byte	.LASF0
 482 002c 02       		.uleb128 0x2
 483 002d 01       		.byte	0x1
 484 002e 08       		.byte	0x8
 485 002f 50010000 		.4byte	.LASF1
 486 0033 02       		.uleb128 0x2
 487 0034 02       		.byte	0x2
 488 0035 05       		.byte	0x5
 489 0036 29000000 		.4byte	.LASF2
 490 003a 03       		.uleb128 0x3
 491 003b 5C000000 		.4byte	.LASF4
 492 003f 02       		.byte	0x2
 493 0040 2B       		.byte	0x2b
 494 0041 45000000 		.4byte	0x45
 495 0045 02       		.uleb128 0x2
 496 0046 02       		.byte	0x2
 497 0047 07       		.byte	0x7
 498 0048 F4010000 		.4byte	.LASF3
 499 004c 03       		.uleb128 0x3
 500 004d 71030000 		.4byte	.LASF5
 501 0051 02       		.byte	0x2
 502 0052 3F       		.byte	0x3f
 503 0053 57000000 		.4byte	0x57
 504 0057 02       		.uleb128 0x2
 505 0058 04       		.byte	0x4
 506 0059 05       		.byte	0x5
 507 005a 31010000 		.4byte	.LASF6
 508 005e 02       		.uleb128 0x2
 509 005f 04       		.byte	0x4
 510 0060 07       		.byte	0x7
 511 0061 3A030000 		.4byte	.LASF7
 512 0065 02       		.uleb128 0x2
 513 0066 08       		.byte	0x8
 514 0067 05       		.byte	0x5
 515 0068 ED000000 		.4byte	.LASF8
 516 006c 02       		.uleb128 0x2
 517 006d 08       		.byte	0x8
 518 006e 07       		.byte	0x7
 519 006f B7010000 		.4byte	.LASF9
 520 0073 04       		.uleb128 0x4
 521 0074 04       		.byte	0x4
 522 0075 05       		.byte	0x5
 523 0076 696E7400 		.ascii	"int\000"
 524 007a 02       		.uleb128 0x2
 525 007b 04       		.byte	0x4
 526 007c 07       		.byte	0x7
 527 007d CE010000 		.4byte	.LASF10
 528 0081 03       		.uleb128 0x3
 529 0082 DB010000 		.4byte	.LASF11
 530 0086 03       		.byte	0x3
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 20


 531 0087 21       		.byte	0x21
 532 0088 3A000000 		.4byte	0x3a
 533 008c 03       		.uleb128 0x3
 534 008d C9020000 		.4byte	.LASF12
 535 0091 03       		.byte	0x3
 536 0092 2C       		.byte	0x2c
 537 0093 4C000000 		.4byte	0x4c
 538 0097 05       		.uleb128 0x5
 539 0098 8F000000 		.4byte	.LASF13
 540 009c 04       		.byte	0x4
 541 009d 9201     		.2byte	0x192
 542 009f 2C000000 		.4byte	0x2c
 543 00a3 05       		.uleb128 0x5
 544 00a4 2C030000 		.4byte	.LASF14
 545 00a8 04       		.byte	0x4
 546 00a9 9401     		.2byte	0x194
 547 00ab 5E000000 		.4byte	0x5e
 548 00af 02       		.uleb128 0x2
 549 00b0 04       		.byte	0x4
 550 00b1 04       		.byte	0x4
 551 00b2 E7000000 		.4byte	.LASF15
 552 00b6 02       		.uleb128 0x2
 553 00b7 08       		.byte	0x8
 554 00b8 04       		.byte	0x4
 555 00b9 8C030000 		.4byte	.LASF16
 556 00bd 02       		.uleb128 0x2
 557 00be 01       		.byte	0x1
 558 00bf 08       		.byte	0x8
 559 00c0 36020000 		.4byte	.LASF17
 560 00c4 05       		.uleb128 0x5
 561 00c5 FB000000 		.4byte	.LASF18
 562 00c9 04       		.byte	0x4
 563 00ca 4E02     		.2byte	0x24e
 564 00cc D0000000 		.4byte	0xd0
 565 00d0 06       		.uleb128 0x6
 566 00d1 04       		.byte	0x4
 567 00d2 D6000000 		.4byte	0xd6
 568 00d6 07       		.uleb128 0x7
 569 00d7 02       		.uleb128 0x2
 570 00d8 04       		.byte	0x4
 571 00d9 07       		.byte	0x7
 572 00da 33000000 		.4byte	.LASF19
 573 00de 06       		.uleb128 0x6
 574 00df 04       		.byte	0x4
 575 00e0 BD000000 		.4byte	0xbd
 576 00e4 06       		.uleb128 0x6
 577 00e5 04       		.byte	0x4
 578 00e6 EA000000 		.4byte	0xea
 579 00ea 08       		.uleb128 0x8
 580 00eb BD000000 		.4byte	0xbd
 581 00ef 09       		.uleb128 0x9
 582 00f0 6C000000 		.4byte	.LASF60
 583 00f4 08       		.byte	0x8
 584 00f5 05       		.byte	0x5
 585 00f6 11       		.byte	0x11
 586 00f7 28010000 		.4byte	0x128
 587 00fb 0A       		.uleb128 0xa
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 21


 588 00fc 6C3300   		.ascii	"l3\000"
 589 00ff 05       		.byte	0x5
 590 0100 12       		.byte	0x12
 591 0101 81000000 		.4byte	0x81
 592 0105 00       		.byte	0
 593 0106 0A       		.uleb128 0xa
 594 0107 6C3100   		.ascii	"l1\000"
 595 010a 05       		.byte	0x5
 596 010b 14       		.byte	0x14
 597 010c 81000000 		.4byte	0x81
 598 0110 02       		.byte	0x2
 599 0111 0A       		.uleb128 0xa
 600 0112 723100   		.ascii	"r1\000"
 601 0115 05       		.byte	0x5
 602 0116 15       		.byte	0x15
 603 0117 81000000 		.4byte	0x81
 604 011b 04       		.byte	0x4
 605 011c 0A       		.uleb128 0xa
 606 011d 723300   		.ascii	"r3\000"
 607 0120 05       		.byte	0x5
 608 0121 17       		.byte	0x17
 609 0122 81000000 		.4byte	0x81
 610 0126 06       		.byte	0x6
 611 0127 00       		.byte	0
 612 0128 02       		.uleb128 0x2
 613 0129 08       		.byte	0x8
 614 012a 04       		.byte	0x4
 615 012b 63010000 		.4byte	.LASF20
 616 012f 0B       		.uleb128 0xb
 617 0130 45000000 		.4byte	.LASF61
 618 0134 01       		.byte	0x1
 619 0135 2E       		.byte	0x2e
 620 0136 73000000 		.4byte	0x73
 621 013a 00000000 		.4byte	.LFB63
 622 013e 84010000 		.4byte	.LFE63-.LFB63
 623 0142 01       		.uleb128 0x1
 624 0143 9C       		.byte	0x9c
 625 0144 F4030000 		.4byte	0x3f4
 626 0148 0C       		.uleb128 0xc
 627 0149 07020000 		.4byte	.LASF21
 628 014d 01       		.byte	0x1
 629 014e 31       		.byte	0x31
 630 014f 73000000 		.4byte	0x73
 631 0153 00000000 		.4byte	.LLST0
 632 0157 0C       		.uleb128 0xc
 633 0158 5E010000 		.4byte	.LASF22
 634 015c 01       		.byte	0x1
 635 015d 34       		.byte	0x34
 636 015e 73000000 		.4byte	0x73
 637 0162 36000000 		.4byte	.LLST1
 638 0166 0C       		.uleb128 0xc
 639 0167 3C000000 		.4byte	.LASF23
 640 016b 01       		.byte	0x1
 641 016c 36       		.byte	0x36
 642 016d 73000000 		.4byte	0x73
 643 0171 6C000000 		.4byte	.LLST2
 644 0175 0C       		.uleb128 0xc
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 22


 645 0176 E4010000 		.4byte	.LASF24
 646 017a 01       		.byte	0x1
 647 017b 39       		.byte	0x39
 648 017c 97000000 		.4byte	0x97
 649 0180 A2000000 		.4byte	.LLST3
 650 0184 0D       		.uleb128 0xd
 651 0185 29020000 		.4byte	.LASF25
 652 0189 01       		.byte	0x1
 653 018a 3C       		.byte	0x3c
 654 018b 73000000 		.4byte	0x73
 655 018f 0852     		.2byte	0x5208
 656 0191 0D       		.uleb128 0xd
 657 0192 0E020000 		.4byte	.LASF26
 658 0196 01       		.byte	0x1
 659 0197 3D       		.byte	0x3d
 660 0198 73000000 		.4byte	0x73
 661 019c 5C44     		.2byte	0x445c
 662 019e 0D       		.uleb128 0xd
 663 019f 75000000 		.4byte	.LASF27
 664 01a3 01       		.byte	0x1
 665 01a4 3E       		.byte	0x3e
 666 01a5 73000000 		.4byte	0x73
 667 01a9 F055     		.2byte	0x55f0
 668 01ab 0D       		.uleb128 0xd
 669 01ac 82000000 		.4byte	.LASF28
 670 01b0 01       		.byte	0x1
 671 01b1 3F       		.byte	0x3f
 672 01b2 73000000 		.4byte	0x73
 673 01b6 FC53     		.2byte	0x53fc
 674 01b8 0E       		.uleb128 0xe
 675 01b9 E9010000 		.4byte	.LASF29
 676 01bd 01       		.byte	0x1
 677 01be 42       		.byte	0x42
 678 01bf 73000000 		.4byte	0x73
 679 01c3 7C       		.byte	0x7c
 680 01c4 0D       		.uleb128 0xd
 681 01c5 95000000 		.4byte	.LASF30
 682 01c9 01       		.byte	0x1
 683 01ca 45       		.byte	0x45
 684 01cb 73000000 		.4byte	0x73
 685 01cf B036     		.2byte	0x36b0
 686 01d1 0D       		.uleb128 0xd
 687 01d2 1C010000 		.4byte	.LASF31
 688 01d6 01       		.byte	0x1
 689 01d7 46       		.byte	0x46
 690 01d8 73000000 		.4byte	0x73
 691 01dc 6842     		.2byte	0x4268
 692 01de 0F       		.uleb128 0xf
 693 01df 72656600 		.ascii	"ref\000"
 694 01e3 01       		.byte	0x1
 695 01e4 48       		.byte	0x48
 696 01e5 EF000000 		.4byte	0xef
 697 01e9 02       		.uleb128 0x2
 698 01ea 91       		.byte	0x91
 699 01eb 68       		.sleb128 -24
 700 01ec 0F       		.uleb128 0xf
 701 01ed 64696700 		.ascii	"dig\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 23


 702 01f1 01       		.byte	0x1
 703 01f2 49       		.byte	0x49
 704 01f3 EF000000 		.4byte	0xef
 705 01f7 02       		.uleb128 0x2
 706 01f8 91       		.byte	0x91
 707 01f9 60       		.sleb128 -32
 708 01fa 0C       		.uleb128 0xc
 709 01fb 3A010000 		.4byte	.LASF32
 710 01ff 01       		.byte	0x1
 711 0200 5C       		.byte	0x5c
 712 0201 97000000 		.4byte	0x97
 713 0205 F8000000 		.4byte	.LLST4
 714 0209 10       		.uleb128 0x10
 715 020a 0A000000 		.4byte	.LVL1
 716 020e 10050000 		.4byte	0x510
 717 0212 10       		.uleb128 0x10
 718 0213 0E000000 		.4byte	.LVL2
 719 0217 17050000 		.4byte	0x517
 720 021b 10       		.uleb128 0x10
 721 021c 12000000 		.4byte	.LVL3
 722 0220 1E050000 		.4byte	0x51e
 723 0224 10       		.uleb128 0x10
 724 0225 16000000 		.4byte	.LVL4
 725 0229 2B050000 		.4byte	0x52b
 726 022d 11       		.uleb128 0x11
 727 022e 1E000000 		.4byte	.LVL5
 728 0232 38050000 		.4byte	0x538
 729 0236 45020000 		.4byte	0x245
 730 023a 12       		.uleb128 0x12
 731 023b 01       		.uleb128 0x1
 732 023c 51       		.byte	0x51
 733 023d 01       		.uleb128 0x1
 734 023e 30       		.byte	0x30
 735 023f 12       		.uleb128 0x12
 736 0240 01       		.uleb128 0x1
 737 0241 50       		.byte	0x50
 738 0242 01       		.uleb128 0x1
 739 0243 30       		.byte	0x30
 740 0244 00       		.byte	0
 741 0245 10       		.uleb128 0x10
 742 0246 24000000 		.4byte	.LVL6
 743 024a 4E050000 		.4byte	0x54e
 744 024e 11       		.uleb128 0x11
 745 024f 38000000 		.4byte	.LVL7
 746 0253 5F050000 		.4byte	0x55f
 747 0257 78020000 		.4byte	0x278
 748 025b 12       		.uleb128 0x12
 749 025c 01       		.uleb128 0x1
 750 025d 53       		.byte	0x53
 751 025e 03       		.uleb128 0x3
 752 025f 0A       		.byte	0xa
 753 0260 FC53     		.2byte	0x53fc
 754 0262 12       		.uleb128 0x12
 755 0263 01       		.uleb128 0x1
 756 0264 52       		.byte	0x52
 757 0265 03       		.uleb128 0x3
 758 0266 0A       		.byte	0xa
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 24


 759 0267 F055     		.2byte	0x55f0
 760 0269 12       		.uleb128 0x12
 761 026a 01       		.uleb128 0x1
 762 026b 51       		.byte	0x51
 763 026c 03       		.uleb128 0x3
 764 026d 0A       		.byte	0xa
 765 026e 5C44     		.2byte	0x445c
 766 0270 12       		.uleb128 0x12
 767 0271 01       		.uleb128 0x1
 768 0272 50       		.byte	0x50
 769 0273 03       		.uleb128 0x3
 770 0274 0A       		.byte	0xa
 771 0275 0852     		.2byte	0x5208
 772 0277 00       		.byte	0
 773 0278 10       		.uleb128 0x10
 774 0279 3C000000 		.4byte	.LVL8
 775 027d 7F050000 		.4byte	0x57f
 776 0281 11       		.uleb128 0x11
 777 0282 42000000 		.4byte	.LVL9
 778 0286 86050000 		.4byte	0x586
 779 028a 94020000 		.4byte	0x294
 780 028e 12       		.uleb128 0x12
 781 028f 01       		.uleb128 0x1
 782 0290 50       		.byte	0x50
 783 0291 01       		.uleb128 0x1
 784 0292 31       		.byte	0x31
 785 0293 00       		.byte	0
 786 0294 11       		.uleb128 0x11
 787 0295 48000000 		.4byte	.LVL10
 788 0299 97050000 		.4byte	0x597
 789 029d AB020000 		.4byte	0x2ab
 790 02a1 12       		.uleb128 0x12
 791 02a2 01       		.uleb128 0x1
 792 02a3 50       		.byte	0x50
 793 02a4 05       		.uleb128 0x5
 794 02a5 03       		.byte	0x3
 795 02a6 00000000 		.4byte	.LC0
 796 02aa 00       		.byte	0
 797 02ab 11       		.uleb128 0x11
 798 02ac 4E000000 		.4byte	.LVL11
 799 02b0 B0050000 		.4byte	0x5b0
 800 02b4 BE020000 		.4byte	0x2be
 801 02b8 12       		.uleb128 0x12
 802 02b9 01       		.uleb128 0x1
 803 02ba 50       		.byte	0x50
 804 02bb 01       		.uleb128 0x1
 805 02bc 30       		.byte	0x30
 806 02bd 00       		.byte	0
 807 02be 10       		.uleb128 0x10
 808 02bf 56000000 		.4byte	.LVL13
 809 02c3 C1050000 		.4byte	0x5c1
 810 02c7 11       		.uleb128 0x11
 811 02c8 5E000000 		.4byte	.LVL16
 812 02cc CC050000 		.4byte	0x5cc
 813 02d0 DA020000 		.4byte	0x2da
 814 02d4 12       		.uleb128 0x12
 815 02d5 01       		.uleb128 0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 25


 816 02d6 50       		.byte	0x50
 817 02d7 01       		.uleb128 0x1
 818 02d8 31       		.byte	0x31
 819 02d9 00       		.byte	0
 820 02da 11       		.uleb128 0x11
 821 02db 6A000000 		.4byte	.LVL18
 822 02df DD050000 		.4byte	0x5dd
 823 02e3 EE020000 		.4byte	0x2ee
 824 02e7 12       		.uleb128 0x12
 825 02e8 01       		.uleb128 0x1
 826 02e9 50       		.byte	0x50
 827 02ea 02       		.uleb128 0x2
 828 02eb 08       		.byte	0x8
 829 02ec 7C       		.byte	0x7c
 830 02ed 00       		.byte	0
 831 02ee 11       		.uleb128 0x11
 832 02ef 76000000 		.4byte	.LVL21
 833 02f3 EE050000 		.4byte	0x5ee
 834 02f7 02030000 		.4byte	0x302
 835 02fb 12       		.uleb128 0x12
 836 02fc 01       		.uleb128 0x1
 837 02fd 50       		.byte	0x50
 838 02fe 02       		.uleb128 0x2
 839 02ff 91       		.byte	0x91
 840 0300 68       		.sleb128 -24
 841 0301 00       		.byte	0
 842 0302 11       		.uleb128 0x11
 843 0303 7C000000 		.4byte	.LVL22
 844 0307 05060000 		.4byte	0x605
 845 030b 16030000 		.4byte	0x316
 846 030f 12       		.uleb128 0x12
 847 0310 01       		.uleb128 0x1
 848 0311 50       		.byte	0x50
 849 0312 02       		.uleb128 0x2
 850 0313 7D       		.byte	0x7d
 851 0314 00       		.sleb128 0
 852 0315 00       		.byte	0
 853 0316 11       		.uleb128 0x11
 854 0317 8A000000 		.4byte	.LVL23
 855 031b EE050000 		.4byte	0x5ee
 856 031f 2A030000 		.4byte	0x32a
 857 0323 12       		.uleb128 0x12
 858 0324 01       		.uleb128 0x1
 859 0325 50       		.byte	0x50
 860 0326 02       		.uleb128 0x2
 861 0327 91       		.byte	0x91
 862 0328 68       		.sleb128 -24
 863 0329 00       		.byte	0
 864 032a 11       		.uleb128 0x11
 865 032b 90000000 		.4byte	.LVL24
 866 032f 05060000 		.4byte	0x605
 867 0333 3E030000 		.4byte	0x33e
 868 0337 12       		.uleb128 0x12
 869 0338 01       		.uleb128 0x1
 870 0339 50       		.byte	0x50
 871 033a 02       		.uleb128 0x2
 872 033b 7D       		.byte	0x7d
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 26


 873 033c 00       		.sleb128 0
 874 033d 00       		.byte	0
 875 033e 10       		.uleb128 0x10
 876 033f C4000000 		.4byte	.LVL29
 877 0343 16060000 		.4byte	0x616
 878 0347 10       		.uleb128 0x10
 879 0348 CA000000 		.4byte	.LVL31
 880 034c 16060000 		.4byte	0x616
 881 0350 11       		.uleb128 0x11
 882 0351 D8000000 		.4byte	.LVL32
 883 0355 DD050000 		.4byte	0x5dd
 884 0359 64030000 		.4byte	0x364
 885 035d 12       		.uleb128 0x12
 886 035e 01       		.uleb128 0x1
 887 035f 50       		.byte	0x50
 888 0360 02       		.uleb128 0x2
 889 0361 08       		.byte	0x8
 890 0362 7C       		.byte	0x7c
 891 0363 00       		.byte	0
 892 0364 11       		.uleb128 0x11
 893 0365 E8000000 		.4byte	.LVL33
 894 0369 EE050000 		.4byte	0x5ee
 895 036d 78030000 		.4byte	0x378
 896 0371 12       		.uleb128 0x12
 897 0372 01       		.uleb128 0x1
 898 0373 50       		.byte	0x50
 899 0374 02       		.uleb128 0x2
 900 0375 91       		.byte	0x91
 901 0376 68       		.sleb128 -24
 902 0377 00       		.byte	0
 903 0378 11       		.uleb128 0x11
 904 0379 EE000000 		.4byte	.LVL34
 905 037d 05060000 		.4byte	0x605
 906 0381 8C030000 		.4byte	0x38c
 907 0385 12       		.uleb128 0x12
 908 0386 01       		.uleb128 0x1
 909 0387 50       		.byte	0x50
 910 0388 02       		.uleb128 0x2
 911 0389 7D       		.byte	0x7d
 912 038a 00       		.sleb128 0
 913 038b 00       		.byte	0
 914 038c 10       		.uleb128 0x10
 915 038d 22010000 		.4byte	.LVL39
 916 0391 27060000 		.4byte	0x627
 917 0395 10       		.uleb128 0x10
 918 0396 28010000 		.4byte	.LVL41
 919 039a 27060000 		.4byte	0x627
 920 039e 11       		.uleb128 0x11
 921 039f 36010000 		.4byte	.LVL42
 922 03a3 DD050000 		.4byte	0x5dd
 923 03a7 B2030000 		.4byte	0x3b2
 924 03ab 12       		.uleb128 0x12
 925 03ac 01       		.uleb128 0x1
 926 03ad 50       		.byte	0x50
 927 03ae 02       		.uleb128 0x2
 928 03af 08       		.byte	0x8
 929 03b0 7C       		.byte	0x7c
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 27


 930 03b1 00       		.byte	0
 931 03b2 10       		.uleb128 0x10
 932 03b3 42010000 		.4byte	.LVL44
 933 03b7 1E050000 		.4byte	0x51e
 934 03bb 11       		.uleb128 0x11
 935 03bc 4A010000 		.4byte	.LVL46
 936 03c0 CC050000 		.4byte	0x5cc
 937 03c4 CE030000 		.4byte	0x3ce
 938 03c8 12       		.uleb128 0x12
 939 03c9 01       		.uleb128 0x1
 940 03ca 50       		.byte	0x50
 941 03cb 01       		.uleb128 0x1
 942 03cc 31       		.byte	0x31
 943 03cd 00       		.byte	0
 944 03ce 10       		.uleb128 0x10
 945 03cf 4E010000 		.4byte	.LVL47
 946 03d3 C1050000 		.4byte	0x5c1
 947 03d7 11       		.uleb128 0x11
 948 03d8 56010000 		.4byte	.LVL50
 949 03dc CC050000 		.4byte	0x5cc
 950 03e0 EA030000 		.4byte	0x3ea
 951 03e4 12       		.uleb128 0x12
 952 03e5 01       		.uleb128 0x1
 953 03e6 50       		.byte	0x50
 954 03e7 01       		.uleb128 0x1
 955 03e8 31       		.byte	0x31
 956 03e9 00       		.byte	0
 957 03ea 10       		.uleb128 0x10
 958 03eb 60010000 		.4byte	.LVL52
 959 03ef 38060000 		.4byte	0x638
 960 03f3 00       		.byte	0
 961 03f4 13       		.uleb128 0x13
 962 03f5 4A000000 		.4byte	.LASF34
 963 03f9 01       		.byte	0x1
 964 03fa FC01     		.2byte	0x1fc
 965 03fc 73000000 		.4byte	0x73
 966 0400 00000000 		.4byte	.LFB64
 967 0404 2A000000 		.4byte	.LFE64-.LFB64
 968 0408 01       		.uleb128 0x1
 969 0409 9C       		.byte	0x9c
 970 040a 69040000 		.4byte	0x469
 971 040e 14       		.uleb128 0x14
 972 040f 67000000 		.4byte	.LASF33
 973 0413 01       		.byte	0x1
 974 0414 FC01     		.2byte	0x1fc
 975 0416 73000000 		.4byte	0x73
 976 041a 16010000 		.4byte	.LLST5
 977 041e 15       		.uleb128 0x15
 978 041f 70747200 		.ascii	"ptr\000"
 979 0423 01       		.byte	0x1
 980 0424 FC01     		.2byte	0x1fc
 981 0426 DE000000 		.4byte	0xde
 982 042a 37010000 		.4byte	.LLST6
 983 042e 15       		.uleb128 0x15
 984 042f 6C656E00 		.ascii	"len\000"
 985 0433 01       		.byte	0x1
 986 0434 FC01     		.2byte	0x1fc
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 28


 987 0436 73000000 		.4byte	0x73
 988 043a 6B010000 		.4byte	.LLST7
 989 043e 16       		.uleb128 0x16
 990 043f 6E00     		.ascii	"n\000"
 991 0441 01       		.byte	0x1
 992 0442 FF01     		.2byte	0x1ff
 993 0444 73000000 		.4byte	0x73
 994 0448 89010000 		.4byte	.LLST8
 995 044c 11       		.uleb128 0x11
 996 044d 16000000 		.4byte	.LVL57
 997 0451 45060000 		.4byte	0x645
 998 0455 5F040000 		.4byte	0x45f
 999 0459 12       		.uleb128 0x12
 1000 045a 01       		.uleb128 0x1
 1001 045b 50       		.byte	0x50
 1002 045c 01       		.uleb128 0x1
 1003 045d 3D       		.byte	0x3d
 1004 045e 00       		.byte	0
 1005 045f 10       		.uleb128 0x10
 1006 0460 1E000000 		.4byte	.LVL59
 1007 0464 45060000 		.4byte	0x645
 1008 0468 00       		.byte	0
 1009 0469 13       		.uleb128 0x13
 1010 046a A5010000 		.4byte	.LASF35
 1011 046e 01       		.byte	0x1
 1012 046f 0702     		.2byte	0x207
 1013 0471 73000000 		.4byte	0x73
 1014 0475 00000000 		.4byte	.LFB65
 1015 0479 38000000 		.4byte	.LFE65-.LFB65
 1016 047d 01       		.uleb128 0x1
 1017 047e 9C       		.byte	0x9c
 1018 047f FF040000 		.4byte	0x4ff
 1019 0483 14       		.uleb128 0x14
 1020 0484 67000000 		.4byte	.LASF33
 1021 0488 01       		.byte	0x1
 1022 0489 0702     		.2byte	0x207
 1023 048b 73000000 		.4byte	0x73
 1024 048f A8010000 		.4byte	.LLST9
 1025 0493 15       		.uleb128 0x15
 1026 0494 70747200 		.ascii	"ptr\000"
 1027 0498 01       		.byte	0x1
 1028 0499 0702     		.2byte	0x207
 1029 049b DE000000 		.4byte	0xde
 1030 049f C9010000 		.4byte	.LLST10
 1031 04a3 14       		.uleb128 0x14
 1032 04a4 6B030000 		.4byte	.LASF36
 1033 04a8 01       		.byte	0x1
 1034 04a9 0702     		.2byte	0x207
 1035 04ab 73000000 		.4byte	0x73
 1036 04af FD010000 		.4byte	.LLST11
 1037 04b3 16       		.uleb128 0x16
 1038 04b4 63687300 		.ascii	"chs\000"
 1039 04b8 01       		.byte	0x1
 1040 04b9 0902     		.2byte	0x209
 1041 04bb 73000000 		.4byte	0x73
 1042 04bf 1B020000 		.4byte	.LLST12
 1043 04c3 16       		.uleb128 0x16
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 29


 1044 04c4 636800   		.ascii	"ch\000"
 1045 04c7 01       		.byte	0x1
 1046 04c8 0A02     		.2byte	0x20a
 1047 04ca BD000000 		.4byte	0xbd
 1048 04ce 3A020000 		.4byte	.LLST13
 1049 04d2 10       		.uleb128 0x10
 1050 04d3 0E000000 		.4byte	.LVL65
 1051 04d7 56060000 		.4byte	0x656
 1052 04db 11       		.uleb128 0x11
 1053 04dc 16000000 		.4byte	.LVL66
 1054 04e0 45060000 		.4byte	0x645
 1055 04e4 EF040000 		.4byte	0x4ef
 1056 04e8 12       		.uleb128 0x12
 1057 04e9 01       		.uleb128 0x1
 1058 04ea 50       		.byte	0x50
 1059 04eb 02       		.uleb128 0x2
 1060 04ec 75       		.byte	0x75
 1061 04ed 00       		.sleb128 0
 1062 04ee 00       		.byte	0
 1063 04ef 17       		.uleb128 0x17
 1064 04f0 22000000 		.4byte	.LVL69
 1065 04f4 45060000 		.4byte	0x645
 1066 04f8 12       		.uleb128 0x12
 1067 04f9 01       		.uleb128 0x1
 1068 04fa 50       		.byte	0x50
 1069 04fb 01       		.uleb128 0x1
 1070 04fc 3A       		.byte	0x3a
 1071 04fd 00       		.byte	0
 1072 04fe 00       		.byte	0
 1073 04ff 18       		.uleb128 0x18
 1074 0500 93030000 		.4byte	.LASF62
 1075 0504 0E       		.byte	0xe
 1076 0505 9606     		.2byte	0x696
 1077 0507 0B050000 		.4byte	0x50b
 1078 050b 19       		.uleb128 0x19
 1079 050c 8C000000 		.4byte	0x8c
 1080 0510 1A       		.uleb128 0x1a
 1081 0511 CB000000 		.4byte	.LASF37
 1082 0515 06       		.byte	0x6
 1083 0516 54       		.byte	0x54
 1084 0517 1A       		.uleb128 0x1a
 1085 0518 6F010000 		.4byte	.LASF38
 1086 051c 07       		.byte	0x7
 1087 051d 34       		.byte	0x34
 1088 051e 1B       		.uleb128 0x1b
 1089 051f A9000000 		.4byte	.LASF39
 1090 0523 01       		.byte	0x1
 1091 0524 26       		.byte	0x26
 1092 0525 2B050000 		.4byte	0x52b
 1093 0529 1C       		.uleb128 0x1c
 1094 052a 00       		.byte	0
 1095 052b 1B       		.uleb128 0x1b
 1096 052c 5F030000 		.4byte	.LASF40
 1097 0530 01       		.byte	0x1
 1098 0531 21       		.byte	0x21
 1099 0532 38050000 		.4byte	0x538
 1100 0536 1C       		.uleb128 0x1c
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 30


 1101 0537 00       		.byte	0
 1102 0538 1D       		.uleb128 0x1d
 1103 0539 1B020000 		.4byte	.LASF41
 1104 053d 01       		.byte	0x1
 1105 053e 22       		.byte	0x22
 1106 053f 4E050000 		.4byte	0x54e
 1107 0543 1E       		.uleb128 0x1e
 1108 0544 97000000 		.4byte	0x97
 1109 0548 1E       		.uleb128 0x1e
 1110 0549 A3000000 		.4byte	0xa3
 1111 054d 00       		.byte	0
 1112 054e 1D       		.uleb128 0x1d
 1113 054f 4C030000 		.4byte	.LASF42
 1114 0553 08       		.byte	0x8
 1115 0554 18       		.byte	0x18
 1116 0555 5F050000 		.4byte	0x55f
 1117 0559 1E       		.uleb128 0x1e
 1118 055a C4000000 		.4byte	0xc4
 1119 055e 00       		.byte	0
 1120 055f 1D       		.uleb128 0x1d
 1121 0560 8B010000 		.4byte	.LASF43
 1122 0564 01       		.byte	0x1
 1123 0565 25       		.byte	0x25
 1124 0566 7F050000 		.4byte	0x57f
 1125 056a 1E       		.uleb128 0x1e
 1126 056b 81000000 		.4byte	0x81
 1127 056f 1E       		.uleb128 0x1e
 1128 0570 81000000 		.4byte	0x81
 1129 0574 1E       		.uleb128 0x1e
 1130 0575 81000000 		.4byte	0x81
 1131 0579 1E       		.uleb128 0x1e
 1132 057a 81000000 		.4byte	0x81
 1133 057e 00       		.byte	0
 1134 057f 1A       		.uleb128 0x1a
 1135 0580 B9000000 		.4byte	.LASF44
 1136 0584 05       		.byte	0x5
 1137 0585 1A       		.byte	0x1a
 1138 0586 1D       		.uleb128 0x1d
 1139 0587 A8030000 		.4byte	.LASF45
 1140 058b 09       		.byte	0x9
 1141 058c 26       		.byte	0x26
 1142 058d 97050000 		.4byte	0x597
 1143 0591 1E       		.uleb128 0x1e
 1144 0592 97000000 		.4byte	0x97
 1145 0596 00       		.byte	0
 1146 0597 1F       		.uleb128 0x1f
 1147 0598 00000000 		.4byte	.LASF63
 1148 059c 0F       		.byte	0xf
 1149 059d 00       		.byte	0
 1150 059e EF010000 		.4byte	.LASF64
 1151 05a2 73000000 		.4byte	0x73
 1152 05a6 B0050000 		.4byte	0x5b0
 1153 05aa 1E       		.uleb128 0x1e
 1154 05ab E4000000 		.4byte	0xe4
 1155 05af 00       		.byte	0
 1156 05b0 1D       		.uleb128 0x1d
 1157 05b1 12030000 		.4byte	.LASF46
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 31


 1158 05b5 0A       		.byte	0xa
 1159 05b6 26       		.byte	0x26
 1160 05b7 C1050000 		.4byte	0x5c1
 1161 05bb 1E       		.uleb128 0x1e
 1162 05bc 97000000 		.4byte	0x97
 1163 05c0 00       		.byte	0
 1164 05c1 20       		.uleb128 0x20
 1165 05c2 23030000 		.4byte	.LASF55
 1166 05c6 0D       		.byte	0xd
 1167 05c7 29       		.byte	0x29
 1168 05c8 97000000 		.4byte	0x97
 1169 05cc 1D       		.uleb128 0x1d
 1170 05cd A0030000 		.4byte	.LASF47
 1171 05d1 0B       		.byte	0xb
 1172 05d2 76       		.byte	0x76
 1173 05d3 DD050000 		.4byte	0x5dd
 1174 05d7 1E       		.uleb128 0x1e
 1175 05d8 A3000000 		.4byte	0xa3
 1176 05dc 00       		.byte	0
 1177 05dd 1D       		.uleb128 0x1d
 1178 05de 41010000 		.4byte	.LASF48
 1179 05e2 01       		.byte	0x1
 1180 05e3 23       		.byte	0x23
 1181 05e4 EE050000 		.4byte	0x5ee
 1182 05e8 1E       		.uleb128 0x1e
 1183 05e9 97000000 		.4byte	0x97
 1184 05ed 00       		.byte	0
 1185 05ee 1D       		.uleb128 0x1d
 1186 05ef 7B030000 		.4byte	.LASF49
 1187 05f3 05       		.byte	0x5
 1188 05f4 1B       		.byte	0x1b
 1189 05f5 FF050000 		.4byte	0x5ff
 1190 05f9 1E       		.uleb128 0x1e
 1191 05fa FF050000 		.4byte	0x5ff
 1192 05fe 00       		.byte	0
 1193 05ff 06       		.uleb128 0x6
 1194 0600 04       		.byte	0x4
 1195 0601 EF000000 		.4byte	0xef
 1196 0605 1D       		.uleb128 0x1d
 1197 0606 08010000 		.4byte	.LASF50
 1198 060a 05       		.byte	0x5
 1199 060b 1C       		.byte	0x1c
 1200 060c 16060000 		.4byte	0x616
 1201 0610 1E       		.uleb128 0x1e
 1202 0611 FF050000 		.4byte	0x5ff
 1203 0615 00       		.byte	0
 1204 0616 1D       		.uleb128 0x1d
 1205 0617 51000000 		.4byte	.LASF51
 1206 061b 01       		.byte	0x1
 1207 061c 27       		.byte	0x27
 1208 061d 27060000 		.4byte	0x627
 1209 0621 1E       		.uleb128 0x1e
 1210 0622 97000000 		.4byte	0x97
 1211 0626 00       		.byte	0
 1212 0627 1D       		.uleb128 0x1d
 1213 0628 81010000 		.4byte	.LASF52
 1214 062c 01       		.byte	0x1
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 32


 1215 062d 28       		.byte	0x28
 1216 062e 38060000 		.4byte	0x638
 1217 0632 1E       		.uleb128 0x1e
 1218 0633 97000000 		.4byte	0x97
 1219 0637 00       		.byte	0
 1220 0638 1B       		.uleb128 0x1b
 1221 0639 1E000000 		.4byte	.LASF53
 1222 063d 0C       		.byte	0xc
 1223 063e 0C       		.byte	0xc
 1224 063f 45060000 		.4byte	0x645
 1225 0643 1C       		.uleb128 0x1c
 1226 0644 00       		.byte	0
 1227 0645 1D       		.uleb128 0x1d
 1228 0646 D8000000 		.4byte	.LASF54
 1229 064a 06       		.byte	0x6
 1230 064b 8A       		.byte	0x8a
 1231 064c 56060000 		.4byte	0x656
 1232 0650 1E       		.uleb128 0x1e
 1233 0651 97000000 		.4byte	0x97
 1234 0655 00       		.byte	0
 1235 0656 20       		.uleb128 0x20
 1236 0657 0F000000 		.4byte	.LASF56
 1237 065b 06       		.byte	0x6
 1238 065c 71       		.byte	0x71
 1239 065d 97000000 		.4byte	0x97
 1240 0661 00       		.byte	0
 1241              		.section	.debug_abbrev,"",%progbits
 1242              	.Ldebug_abbrev0:
 1243 0000 01       		.uleb128 0x1
 1244 0001 11       		.uleb128 0x11
 1245 0002 01       		.byte	0x1
 1246 0003 25       		.uleb128 0x25
 1247 0004 0E       		.uleb128 0xe
 1248 0005 13       		.uleb128 0x13
 1249 0006 0B       		.uleb128 0xb
 1250 0007 03       		.uleb128 0x3
 1251 0008 0E       		.uleb128 0xe
 1252 0009 1B       		.uleb128 0x1b
 1253 000a 0E       		.uleb128 0xe
 1254 000b 55       		.uleb128 0x55
 1255 000c 17       		.uleb128 0x17
 1256 000d 11       		.uleb128 0x11
 1257 000e 01       		.uleb128 0x1
 1258 000f 10       		.uleb128 0x10
 1259 0010 17       		.uleb128 0x17
 1260 0011 00       		.byte	0
 1261 0012 00       		.byte	0
 1262 0013 02       		.uleb128 0x2
 1263 0014 24       		.uleb128 0x24
 1264 0015 00       		.byte	0
 1265 0016 0B       		.uleb128 0xb
 1266 0017 0B       		.uleb128 0xb
 1267 0018 3E       		.uleb128 0x3e
 1268 0019 0B       		.uleb128 0xb
 1269 001a 03       		.uleb128 0x3
 1270 001b 0E       		.uleb128 0xe
 1271 001c 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 33


 1272 001d 00       		.byte	0
 1273 001e 03       		.uleb128 0x3
 1274 001f 16       		.uleb128 0x16
 1275 0020 00       		.byte	0
 1276 0021 03       		.uleb128 0x3
 1277 0022 0E       		.uleb128 0xe
 1278 0023 3A       		.uleb128 0x3a
 1279 0024 0B       		.uleb128 0xb
 1280 0025 3B       		.uleb128 0x3b
 1281 0026 0B       		.uleb128 0xb
 1282 0027 49       		.uleb128 0x49
 1283 0028 13       		.uleb128 0x13
 1284 0029 00       		.byte	0
 1285 002a 00       		.byte	0
 1286 002b 04       		.uleb128 0x4
 1287 002c 24       		.uleb128 0x24
 1288 002d 00       		.byte	0
 1289 002e 0B       		.uleb128 0xb
 1290 002f 0B       		.uleb128 0xb
 1291 0030 3E       		.uleb128 0x3e
 1292 0031 0B       		.uleb128 0xb
 1293 0032 03       		.uleb128 0x3
 1294 0033 08       		.uleb128 0x8
 1295 0034 00       		.byte	0
 1296 0035 00       		.byte	0
 1297 0036 05       		.uleb128 0x5
 1298 0037 16       		.uleb128 0x16
 1299 0038 00       		.byte	0
 1300 0039 03       		.uleb128 0x3
 1301 003a 0E       		.uleb128 0xe
 1302 003b 3A       		.uleb128 0x3a
 1303 003c 0B       		.uleb128 0xb
 1304 003d 3B       		.uleb128 0x3b
 1305 003e 05       		.uleb128 0x5
 1306 003f 49       		.uleb128 0x49
 1307 0040 13       		.uleb128 0x13
 1308 0041 00       		.byte	0
 1309 0042 00       		.byte	0
 1310 0043 06       		.uleb128 0x6
 1311 0044 0F       		.uleb128 0xf
 1312 0045 00       		.byte	0
 1313 0046 0B       		.uleb128 0xb
 1314 0047 0B       		.uleb128 0xb
 1315 0048 49       		.uleb128 0x49
 1316 0049 13       		.uleb128 0x13
 1317 004a 00       		.byte	0
 1318 004b 00       		.byte	0
 1319 004c 07       		.uleb128 0x7
 1320 004d 15       		.uleb128 0x15
 1321 004e 00       		.byte	0
 1322 004f 27       		.uleb128 0x27
 1323 0050 19       		.uleb128 0x19
 1324 0051 00       		.byte	0
 1325 0052 00       		.byte	0
 1326 0053 08       		.uleb128 0x8
 1327 0054 26       		.uleb128 0x26
 1328 0055 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 34


 1329 0056 49       		.uleb128 0x49
 1330 0057 13       		.uleb128 0x13
 1331 0058 00       		.byte	0
 1332 0059 00       		.byte	0
 1333 005a 09       		.uleb128 0x9
 1334 005b 13       		.uleb128 0x13
 1335 005c 01       		.byte	0x1
 1336 005d 03       		.uleb128 0x3
 1337 005e 0E       		.uleb128 0xe
 1338 005f 0B       		.uleb128 0xb
 1339 0060 0B       		.uleb128 0xb
 1340 0061 3A       		.uleb128 0x3a
 1341 0062 0B       		.uleb128 0xb
 1342 0063 3B       		.uleb128 0x3b
 1343 0064 0B       		.uleb128 0xb
 1344 0065 01       		.uleb128 0x1
 1345 0066 13       		.uleb128 0x13
 1346 0067 00       		.byte	0
 1347 0068 00       		.byte	0
 1348 0069 0A       		.uleb128 0xa
 1349 006a 0D       		.uleb128 0xd
 1350 006b 00       		.byte	0
 1351 006c 03       		.uleb128 0x3
 1352 006d 08       		.uleb128 0x8
 1353 006e 3A       		.uleb128 0x3a
 1354 006f 0B       		.uleb128 0xb
 1355 0070 3B       		.uleb128 0x3b
 1356 0071 0B       		.uleb128 0xb
 1357 0072 49       		.uleb128 0x49
 1358 0073 13       		.uleb128 0x13
 1359 0074 38       		.uleb128 0x38
 1360 0075 0B       		.uleb128 0xb
 1361 0076 00       		.byte	0
 1362 0077 00       		.byte	0
 1363 0078 0B       		.uleb128 0xb
 1364 0079 2E       		.uleb128 0x2e
 1365 007a 01       		.byte	0x1
 1366 007b 3F       		.uleb128 0x3f
 1367 007c 19       		.uleb128 0x19
 1368 007d 03       		.uleb128 0x3
 1369 007e 0E       		.uleb128 0xe
 1370 007f 3A       		.uleb128 0x3a
 1371 0080 0B       		.uleb128 0xb
 1372 0081 3B       		.uleb128 0x3b
 1373 0082 0B       		.uleb128 0xb
 1374 0083 49       		.uleb128 0x49
 1375 0084 13       		.uleb128 0x13
 1376 0085 11       		.uleb128 0x11
 1377 0086 01       		.uleb128 0x1
 1378 0087 12       		.uleb128 0x12
 1379 0088 06       		.uleb128 0x6
 1380 0089 40       		.uleb128 0x40
 1381 008a 18       		.uleb128 0x18
 1382 008b 9642     		.uleb128 0x2116
 1383 008d 19       		.uleb128 0x19
 1384 008e 01       		.uleb128 0x1
 1385 008f 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 35


 1386 0090 00       		.byte	0
 1387 0091 00       		.byte	0
 1388 0092 0C       		.uleb128 0xc
 1389 0093 34       		.uleb128 0x34
 1390 0094 00       		.byte	0
 1391 0095 03       		.uleb128 0x3
 1392 0096 0E       		.uleb128 0xe
 1393 0097 3A       		.uleb128 0x3a
 1394 0098 0B       		.uleb128 0xb
 1395 0099 3B       		.uleb128 0x3b
 1396 009a 0B       		.uleb128 0xb
 1397 009b 49       		.uleb128 0x49
 1398 009c 13       		.uleb128 0x13
 1399 009d 02       		.uleb128 0x2
 1400 009e 17       		.uleb128 0x17
 1401 009f 00       		.byte	0
 1402 00a0 00       		.byte	0
 1403 00a1 0D       		.uleb128 0xd
 1404 00a2 34       		.uleb128 0x34
 1405 00a3 00       		.byte	0
 1406 00a4 03       		.uleb128 0x3
 1407 00a5 0E       		.uleb128 0xe
 1408 00a6 3A       		.uleb128 0x3a
 1409 00a7 0B       		.uleb128 0xb
 1410 00a8 3B       		.uleb128 0x3b
 1411 00a9 0B       		.uleb128 0xb
 1412 00aa 49       		.uleb128 0x49
 1413 00ab 13       		.uleb128 0x13
 1414 00ac 1C       		.uleb128 0x1c
 1415 00ad 05       		.uleb128 0x5
 1416 00ae 00       		.byte	0
 1417 00af 00       		.byte	0
 1418 00b0 0E       		.uleb128 0xe
 1419 00b1 34       		.uleb128 0x34
 1420 00b2 00       		.byte	0
 1421 00b3 03       		.uleb128 0x3
 1422 00b4 0E       		.uleb128 0xe
 1423 00b5 3A       		.uleb128 0x3a
 1424 00b6 0B       		.uleb128 0xb
 1425 00b7 3B       		.uleb128 0x3b
 1426 00b8 0B       		.uleb128 0xb
 1427 00b9 49       		.uleb128 0x49
 1428 00ba 13       		.uleb128 0x13
 1429 00bb 1C       		.uleb128 0x1c
 1430 00bc 0B       		.uleb128 0xb
 1431 00bd 00       		.byte	0
 1432 00be 00       		.byte	0
 1433 00bf 0F       		.uleb128 0xf
 1434 00c0 34       		.uleb128 0x34
 1435 00c1 00       		.byte	0
 1436 00c2 03       		.uleb128 0x3
 1437 00c3 08       		.uleb128 0x8
 1438 00c4 3A       		.uleb128 0x3a
 1439 00c5 0B       		.uleb128 0xb
 1440 00c6 3B       		.uleb128 0x3b
 1441 00c7 0B       		.uleb128 0xb
 1442 00c8 49       		.uleb128 0x49
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 36


 1443 00c9 13       		.uleb128 0x13
 1444 00ca 02       		.uleb128 0x2
 1445 00cb 18       		.uleb128 0x18
 1446 00cc 00       		.byte	0
 1447 00cd 00       		.byte	0
 1448 00ce 10       		.uleb128 0x10
 1449 00cf 898201   		.uleb128 0x4109
 1450 00d2 00       		.byte	0
 1451 00d3 11       		.uleb128 0x11
 1452 00d4 01       		.uleb128 0x1
 1453 00d5 31       		.uleb128 0x31
 1454 00d6 13       		.uleb128 0x13
 1455 00d7 00       		.byte	0
 1456 00d8 00       		.byte	0
 1457 00d9 11       		.uleb128 0x11
 1458 00da 898201   		.uleb128 0x4109
 1459 00dd 01       		.byte	0x1
 1460 00de 11       		.uleb128 0x11
 1461 00df 01       		.uleb128 0x1
 1462 00e0 31       		.uleb128 0x31
 1463 00e1 13       		.uleb128 0x13
 1464 00e2 01       		.uleb128 0x1
 1465 00e3 13       		.uleb128 0x13
 1466 00e4 00       		.byte	0
 1467 00e5 00       		.byte	0
 1468 00e6 12       		.uleb128 0x12
 1469 00e7 8A8201   		.uleb128 0x410a
 1470 00ea 00       		.byte	0
 1471 00eb 02       		.uleb128 0x2
 1472 00ec 18       		.uleb128 0x18
 1473 00ed 9142     		.uleb128 0x2111
 1474 00ef 18       		.uleb128 0x18
 1475 00f0 00       		.byte	0
 1476 00f1 00       		.byte	0
 1477 00f2 13       		.uleb128 0x13
 1478 00f3 2E       		.uleb128 0x2e
 1479 00f4 01       		.byte	0x1
 1480 00f5 3F       		.uleb128 0x3f
 1481 00f6 19       		.uleb128 0x19
 1482 00f7 03       		.uleb128 0x3
 1483 00f8 0E       		.uleb128 0xe
 1484 00f9 3A       		.uleb128 0x3a
 1485 00fa 0B       		.uleb128 0xb
 1486 00fb 3B       		.uleb128 0x3b
 1487 00fc 05       		.uleb128 0x5
 1488 00fd 27       		.uleb128 0x27
 1489 00fe 19       		.uleb128 0x19
 1490 00ff 49       		.uleb128 0x49
 1491 0100 13       		.uleb128 0x13
 1492 0101 11       		.uleb128 0x11
 1493 0102 01       		.uleb128 0x1
 1494 0103 12       		.uleb128 0x12
 1495 0104 06       		.uleb128 0x6
 1496 0105 40       		.uleb128 0x40
 1497 0106 18       		.uleb128 0x18
 1498 0107 9742     		.uleb128 0x2117
 1499 0109 19       		.uleb128 0x19
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 37


 1500 010a 01       		.uleb128 0x1
 1501 010b 13       		.uleb128 0x13
 1502 010c 00       		.byte	0
 1503 010d 00       		.byte	0
 1504 010e 14       		.uleb128 0x14
 1505 010f 05       		.uleb128 0x5
 1506 0110 00       		.byte	0
 1507 0111 03       		.uleb128 0x3
 1508 0112 0E       		.uleb128 0xe
 1509 0113 3A       		.uleb128 0x3a
 1510 0114 0B       		.uleb128 0xb
 1511 0115 3B       		.uleb128 0x3b
 1512 0116 05       		.uleb128 0x5
 1513 0117 49       		.uleb128 0x49
 1514 0118 13       		.uleb128 0x13
 1515 0119 02       		.uleb128 0x2
 1516 011a 17       		.uleb128 0x17
 1517 011b 00       		.byte	0
 1518 011c 00       		.byte	0
 1519 011d 15       		.uleb128 0x15
 1520 011e 05       		.uleb128 0x5
 1521 011f 00       		.byte	0
 1522 0120 03       		.uleb128 0x3
 1523 0121 08       		.uleb128 0x8
 1524 0122 3A       		.uleb128 0x3a
 1525 0123 0B       		.uleb128 0xb
 1526 0124 3B       		.uleb128 0x3b
 1527 0125 05       		.uleb128 0x5
 1528 0126 49       		.uleb128 0x49
 1529 0127 13       		.uleb128 0x13
 1530 0128 02       		.uleb128 0x2
 1531 0129 17       		.uleb128 0x17
 1532 012a 00       		.byte	0
 1533 012b 00       		.byte	0
 1534 012c 16       		.uleb128 0x16
 1535 012d 34       		.uleb128 0x34
 1536 012e 00       		.byte	0
 1537 012f 03       		.uleb128 0x3
 1538 0130 08       		.uleb128 0x8
 1539 0131 3A       		.uleb128 0x3a
 1540 0132 0B       		.uleb128 0xb
 1541 0133 3B       		.uleb128 0x3b
 1542 0134 05       		.uleb128 0x5
 1543 0135 49       		.uleb128 0x49
 1544 0136 13       		.uleb128 0x13
 1545 0137 02       		.uleb128 0x2
 1546 0138 17       		.uleb128 0x17
 1547 0139 00       		.byte	0
 1548 013a 00       		.byte	0
 1549 013b 17       		.uleb128 0x17
 1550 013c 898201   		.uleb128 0x4109
 1551 013f 01       		.byte	0x1
 1552 0140 11       		.uleb128 0x11
 1553 0141 01       		.uleb128 0x1
 1554 0142 31       		.uleb128 0x31
 1555 0143 13       		.uleb128 0x13
 1556 0144 00       		.byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 38


 1557 0145 00       		.byte	0
 1558 0146 18       		.uleb128 0x18
 1559 0147 34       		.uleb128 0x34
 1560 0148 00       		.byte	0
 1561 0149 03       		.uleb128 0x3
 1562 014a 0E       		.uleb128 0xe
 1563 014b 3A       		.uleb128 0x3a
 1564 014c 0B       		.uleb128 0xb
 1565 014d 3B       		.uleb128 0x3b
 1566 014e 05       		.uleb128 0x5
 1567 014f 49       		.uleb128 0x49
 1568 0150 13       		.uleb128 0x13
 1569 0151 3F       		.uleb128 0x3f
 1570 0152 19       		.uleb128 0x19
 1571 0153 3C       		.uleb128 0x3c
 1572 0154 19       		.uleb128 0x19
 1573 0155 00       		.byte	0
 1574 0156 00       		.byte	0
 1575 0157 19       		.uleb128 0x19
 1576 0158 35       		.uleb128 0x35
 1577 0159 00       		.byte	0
 1578 015a 49       		.uleb128 0x49
 1579 015b 13       		.uleb128 0x13
 1580 015c 00       		.byte	0
 1581 015d 00       		.byte	0
 1582 015e 1A       		.uleb128 0x1a
 1583 015f 2E       		.uleb128 0x2e
 1584 0160 00       		.byte	0
 1585 0161 3F       		.uleb128 0x3f
 1586 0162 19       		.uleb128 0x19
 1587 0163 03       		.uleb128 0x3
 1588 0164 0E       		.uleb128 0xe
 1589 0165 3A       		.uleb128 0x3a
 1590 0166 0B       		.uleb128 0xb
 1591 0167 3B       		.uleb128 0x3b
 1592 0168 0B       		.uleb128 0xb
 1593 0169 27       		.uleb128 0x27
 1594 016a 19       		.uleb128 0x19
 1595 016b 3C       		.uleb128 0x3c
 1596 016c 19       		.uleb128 0x19
 1597 016d 00       		.byte	0
 1598 016e 00       		.byte	0
 1599 016f 1B       		.uleb128 0x1b
 1600 0170 2E       		.uleb128 0x2e
 1601 0171 01       		.byte	0x1
 1602 0172 3F       		.uleb128 0x3f
 1603 0173 19       		.uleb128 0x19
 1604 0174 03       		.uleb128 0x3
 1605 0175 0E       		.uleb128 0xe
 1606 0176 3A       		.uleb128 0x3a
 1607 0177 0B       		.uleb128 0xb
 1608 0178 3B       		.uleb128 0x3b
 1609 0179 0B       		.uleb128 0xb
 1610 017a 3C       		.uleb128 0x3c
 1611 017b 19       		.uleb128 0x19
 1612 017c 01       		.uleb128 0x1
 1613 017d 13       		.uleb128 0x13
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 39


 1614 017e 00       		.byte	0
 1615 017f 00       		.byte	0
 1616 0180 1C       		.uleb128 0x1c
 1617 0181 18       		.uleb128 0x18
 1618 0182 00       		.byte	0
 1619 0183 00       		.byte	0
 1620 0184 00       		.byte	0
 1621 0185 1D       		.uleb128 0x1d
 1622 0186 2E       		.uleb128 0x2e
 1623 0187 01       		.byte	0x1
 1624 0188 3F       		.uleb128 0x3f
 1625 0189 19       		.uleb128 0x19
 1626 018a 03       		.uleb128 0x3
 1627 018b 0E       		.uleb128 0xe
 1628 018c 3A       		.uleb128 0x3a
 1629 018d 0B       		.uleb128 0xb
 1630 018e 3B       		.uleb128 0x3b
 1631 018f 0B       		.uleb128 0xb
 1632 0190 27       		.uleb128 0x27
 1633 0191 19       		.uleb128 0x19
 1634 0192 3C       		.uleb128 0x3c
 1635 0193 19       		.uleb128 0x19
 1636 0194 01       		.uleb128 0x1
 1637 0195 13       		.uleb128 0x13
 1638 0196 00       		.byte	0
 1639 0197 00       		.byte	0
 1640 0198 1E       		.uleb128 0x1e
 1641 0199 05       		.uleb128 0x5
 1642 019a 00       		.byte	0
 1643 019b 49       		.uleb128 0x49
 1644 019c 13       		.uleb128 0x13
 1645 019d 00       		.byte	0
 1646 019e 00       		.byte	0
 1647 019f 1F       		.uleb128 0x1f
 1648 01a0 2E       		.uleb128 0x2e
 1649 01a1 01       		.byte	0x1
 1650 01a2 3F       		.uleb128 0x3f
 1651 01a3 19       		.uleb128 0x19
 1652 01a4 03       		.uleb128 0x3
 1653 01a5 0E       		.uleb128 0xe
 1654 01a6 3A       		.uleb128 0x3a
 1655 01a7 0B       		.uleb128 0xb
 1656 01a8 3B       		.uleb128 0x3b
 1657 01a9 0B       		.uleb128 0xb
 1658 01aa 6E       		.uleb128 0x6e
 1659 01ab 0E       		.uleb128 0xe
 1660 01ac 27       		.uleb128 0x27
 1661 01ad 19       		.uleb128 0x19
 1662 01ae 49       		.uleb128 0x49
 1663 01af 13       		.uleb128 0x13
 1664 01b0 3C       		.uleb128 0x3c
 1665 01b1 19       		.uleb128 0x19
 1666 01b2 01       		.uleb128 0x1
 1667 01b3 13       		.uleb128 0x13
 1668 01b4 00       		.byte	0
 1669 01b5 00       		.byte	0
 1670 01b6 20       		.uleb128 0x20
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 40


 1671 01b7 2E       		.uleb128 0x2e
 1672 01b8 00       		.byte	0
 1673 01b9 3F       		.uleb128 0x3f
 1674 01ba 19       		.uleb128 0x19
 1675 01bb 03       		.uleb128 0x3
 1676 01bc 0E       		.uleb128 0xe
 1677 01bd 3A       		.uleb128 0x3a
 1678 01be 0B       		.uleb128 0xb
 1679 01bf 3B       		.uleb128 0x3b
 1680 01c0 0B       		.uleb128 0xb
 1681 01c1 27       		.uleb128 0x27
 1682 01c2 19       		.uleb128 0x19
 1683 01c3 49       		.uleb128 0x49
 1684 01c4 13       		.uleb128 0x13
 1685 01c5 3C       		.uleb128 0x3c
 1686 01c6 19       		.uleb128 0x19
 1687 01c7 00       		.byte	0
 1688 01c8 00       		.byte	0
 1689 01c9 00       		.byte	0
 1690              		.section	.debug_loc,"",%progbits
 1691              	.Ldebug_loc0:
 1692              	.LLST0:
 1693 0000 04000000 		.4byte	.LVL0
 1694 0004 70000000 		.4byte	.LVL20
 1695 0008 0200     		.2byte	0x2
 1696 000a 30       		.byte	0x30
 1697 000b 9F       		.byte	0x9f
 1698 000c 70000000 		.4byte	.LVL20
 1699 0010 42010000 		.4byte	.LVL44
 1700 0014 0100     		.2byte	0x1
 1701 0016 54       		.byte	0x54
 1702 0017 42010000 		.4byte	.LVL44
 1703 001b 44010000 		.4byte	.LVL45
 1704 001f 0200     		.2byte	0x2
 1705 0021 30       		.byte	0x30
 1706 0022 9F       		.byte	0x9f
 1707 0023 44010000 		.4byte	.LVL45
 1708 0027 66010000 		.4byte	.LVL53
 1709 002b 0100     		.2byte	0x1
 1710 002d 54       		.byte	0x54
 1711 002e 00000000 		.4byte	0
 1712 0032 00000000 		.4byte	0
 1713              	.LLST1:
 1714 0036 04000000 		.4byte	.LVL0
 1715 003a 52000000 		.4byte	.LVL12
 1716 003e 0200     		.2byte	0x2
 1717 0040 30       		.byte	0x30
 1718 0041 9F       		.byte	0x9f
 1719 0042 52000000 		.4byte	.LVL12
 1720 0046 58000000 		.4byte	.LVL14
 1721 004a 0100     		.2byte	0x1
 1722 004c 54       		.byte	0x54
 1723 004d 58000000 		.4byte	.LVL14
 1724 0051 60000000 		.4byte	.LVL17
 1725 0055 0200     		.2byte	0x2
 1726 0057 31       		.byte	0x31
 1727 0058 9F       		.byte	0x9f
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 41


 1728 0059 60000000 		.4byte	.LVL17
 1729 005d 6E000000 		.4byte	.LVL19
 1730 0061 0100     		.2byte	0x1
 1731 0063 54       		.byte	0x54
 1732 0064 00000000 		.4byte	0
 1733 0068 00000000 		.4byte	0
 1734              	.LLST2:
 1735 006c 04000000 		.4byte	.LVL0
 1736 0070 70000000 		.4byte	.LVL20
 1737 0074 0200     		.2byte	0x2
 1738 0076 30       		.byte	0x30
 1739 0077 9F       		.byte	0x9f
 1740 0078 70000000 		.4byte	.LVL20
 1741 007c 50010000 		.4byte	.LVL48
 1742 0080 0100     		.2byte	0x1
 1743 0082 55       		.byte	0x55
 1744 0083 50010000 		.4byte	.LVL48
 1745 0087 58010000 		.4byte	.LVL51
 1746 008b 0200     		.2byte	0x2
 1747 008d 31       		.byte	0x31
 1748 008e 9F       		.byte	0x9f
 1749 008f 58010000 		.4byte	.LVL51
 1750 0093 66010000 		.4byte	.LVL53
 1751 0097 0100     		.2byte	0x1
 1752 0099 55       		.byte	0x55
 1753 009a 00000000 		.4byte	0
 1754 009e 00000000 		.4byte	0
 1755              	.LLST3:
 1756 00a2 04000000 		.4byte	.LVL0
 1757 00a6 70000000 		.4byte	.LVL20
 1758 00aa 0200     		.2byte	0x2
 1759 00ac 30       		.byte	0x30
 1760 00ad 9F       		.byte	0x9f
 1761 00ae A4000000 		.4byte	.LVL25
 1762 00b2 AF000000 		.4byte	.LVL26-1
 1763 00b6 0100     		.2byte	0x1
 1764 00b8 50       		.byte	0x50
 1765 00b9 BE000000 		.4byte	.LVL28
 1766 00bd C3000000 		.4byte	.LVL29-1
 1767 00c1 0100     		.2byte	0x1
 1768 00c3 50       		.byte	0x50
 1769 00c4 C6000000 		.4byte	.LVL30
 1770 00c8 C9000000 		.4byte	.LVL31-1
 1771 00cc 0100     		.2byte	0x1
 1772 00ce 50       		.byte	0x50
 1773 00cf 02010000 		.4byte	.LVL35
 1774 00d3 0D010000 		.4byte	.LVL36-1
 1775 00d7 0100     		.2byte	0x1
 1776 00d9 50       		.byte	0x50
 1777 00da 1C010000 		.4byte	.LVL38
 1778 00de 21010000 		.4byte	.LVL39-1
 1779 00e2 0100     		.2byte	0x1
 1780 00e4 50       		.byte	0x50
 1781 00e5 24010000 		.4byte	.LVL40
 1782 00e9 27010000 		.4byte	.LVL41-1
 1783 00ed 0100     		.2byte	0x1
 1784 00ef 50       		.byte	0x50
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 42


 1785 00f0 00000000 		.4byte	0
 1786 00f4 00000000 		.4byte	0
 1787              	.LLST4:
 1788 00f8 56000000 		.4byte	.LVL13
 1789 00fc 5A000000 		.4byte	.LVL15
 1790 0100 0100     		.2byte	0x1
 1791 0102 50       		.byte	0x50
 1792 0103 4E010000 		.4byte	.LVL47
 1793 0107 52010000 		.4byte	.LVL49
 1794 010b 0100     		.2byte	0x1
 1795 010d 50       		.byte	0x50
 1796 010e 00000000 		.4byte	0
 1797 0112 00000000 		.4byte	0
 1798              	.LLST5:
 1799 0116 00000000 		.4byte	.LVL54
 1800 011a 0A000000 		.4byte	.LVL56
 1801 011e 0100     		.2byte	0x1
 1802 0120 50       		.byte	0x50
 1803 0121 0A000000 		.4byte	.LVL56
 1804 0125 2A000000 		.4byte	.LFE64
 1805 0129 0400     		.2byte	0x4
 1806 012b F3       		.byte	0xf3
 1807 012c 01       		.uleb128 0x1
 1808 012d 50       		.byte	0x50
 1809 012e 9F       		.byte	0x9f
 1810 012f 00000000 		.4byte	0
 1811 0133 00000000 		.4byte	0
 1812              	.LLST6:
 1813 0137 00000000 		.4byte	.LVL54
 1814 013b 0A000000 		.4byte	.LVL56
 1815 013f 0100     		.2byte	0x1
 1816 0141 51       		.byte	0x51
 1817 0142 0A000000 		.4byte	.LVL56
 1818 0146 18000000 		.4byte	.LVL58
 1819 014a 0100     		.2byte	0x1
 1820 014c 54       		.byte	0x54
 1821 014d 18000000 		.4byte	.LVL58
 1822 0151 22000000 		.4byte	.LVL61
 1823 0155 0100     		.2byte	0x1
 1824 0157 56       		.byte	0x56
 1825 0158 22000000 		.4byte	.LVL61
 1826 015c 2A000000 		.4byte	.LFE64
 1827 0160 0100     		.2byte	0x1
 1828 0162 54       		.byte	0x54
 1829 0163 00000000 		.4byte	0
 1830 0167 00000000 		.4byte	0
 1831              	.LLST7:
 1832 016b 00000000 		.4byte	.LVL54
 1833 016f 0A000000 		.4byte	.LVL56
 1834 0173 0100     		.2byte	0x1
 1835 0175 52       		.byte	0x52
 1836 0176 0A000000 		.4byte	.LVL56
 1837 017a 2A000000 		.4byte	.LFE64
 1838 017e 0100     		.2byte	0x1
 1839 0180 57       		.byte	0x57
 1840 0181 00000000 		.4byte	0
 1841 0185 00000000 		.4byte	0
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 43


 1842              	.LLST8:
 1843 0189 06000000 		.4byte	.LVL55
 1844 018d 0A000000 		.4byte	.LVL56
 1845 0191 0200     		.2byte	0x2
 1846 0193 30       		.byte	0x30
 1847 0194 9F       		.byte	0x9f
 1848 0195 0A000000 		.4byte	.LVL56
 1849 0199 2A000000 		.4byte	.LFE64
 1850 019d 0100     		.2byte	0x1
 1851 019f 55       		.byte	0x55
 1852 01a0 00000000 		.4byte	0
 1853 01a4 00000000 		.4byte	0
 1854              	.LLST9:
 1855 01a8 00000000 		.4byte	.LVL62
 1856 01ac 0A000000 		.4byte	.LVL64
 1857 01b0 0100     		.2byte	0x1
 1858 01b2 50       		.byte	0x50
 1859 01b3 0A000000 		.4byte	.LVL64
 1860 01b7 38000000 		.4byte	.LFE65
 1861 01bb 0400     		.2byte	0x4
 1862 01bd F3       		.byte	0xf3
 1863 01be 01       		.uleb128 0x1
 1864 01bf 50       		.byte	0x50
 1865 01c0 9F       		.byte	0x9f
 1866 01c1 00000000 		.4byte	0
 1867 01c5 00000000 		.4byte	0
 1868              	.LLST10:
 1869 01c9 00000000 		.4byte	.LVL62
 1870 01cd 0A000000 		.4byte	.LVL64
 1871 01d1 0100     		.2byte	0x1
 1872 01d3 51       		.byte	0x51
 1873 01d4 0A000000 		.4byte	.LVL64
 1874 01d8 26000000 		.4byte	.LVL71
 1875 01dc 0100     		.2byte	0x1
 1876 01de 57       		.byte	0x57
 1877 01df 26000000 		.4byte	.LVL71
 1878 01e3 30000000 		.4byte	.LVL73
 1879 01e7 0100     		.2byte	0x1
 1880 01e9 53       		.byte	0x53
 1881 01ea 30000000 		.4byte	.LVL73
 1882 01ee 34000000 		.4byte	.LVL74
 1883 01f2 0100     		.2byte	0x1
 1884 01f4 57       		.byte	0x57
 1885 01f5 00000000 		.4byte	0
 1886 01f9 00000000 		.4byte	0
 1887              	.LLST11:
 1888 01fd 00000000 		.4byte	.LVL62
 1889 0201 0A000000 		.4byte	.LVL64
 1890 0205 0100     		.2byte	0x1
 1891 0207 52       		.byte	0x52
 1892 0208 0A000000 		.4byte	.LVL64
 1893 020c 38000000 		.4byte	.LFE65
 1894 0210 0100     		.2byte	0x1
 1895 0212 54       		.byte	0x54
 1896 0213 00000000 		.4byte	0
 1897 0217 00000000 		.4byte	0
 1898              	.LLST12:
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 44


 1899 021b 06000000 		.4byte	.LVL63
 1900 021f 0A000000 		.4byte	.LVL64
 1901 0223 0200     		.2byte	0x2
 1902 0225 30       		.byte	0x30
 1903 0226 9F       		.byte	0x9f
 1904 0227 0A000000 		.4byte	.LVL64
 1905 022b 38000000 		.4byte	.LFE65
 1906 022f 0100     		.2byte	0x1
 1907 0231 56       		.byte	0x56
 1908 0232 00000000 		.4byte	0
 1909 0236 00000000 		.4byte	0
 1910              	.LLST13:
 1911 023a 0E000000 		.4byte	.LVL65
 1912 023e 15000000 		.4byte	.LVL66-1
 1913 0242 0100     		.2byte	0x1
 1914 0244 50       		.byte	0x50
 1915 0245 1C000000 		.4byte	.LVL68
 1916 0249 24000000 		.4byte	.LVL70
 1917 024d 0200     		.2byte	0x2
 1918 024f 3A       		.byte	0x3a
 1919 0250 9F       		.byte	0x9f
 1920 0251 24000000 		.4byte	.LVL70
 1921 0255 30000000 		.4byte	.LVL73
 1922 0259 0100     		.2byte	0x1
 1923 025b 55       		.byte	0x55
 1924 025c 00000000 		.4byte	0
 1925 0260 00000000 		.4byte	0
 1926              		.section	.debug_aranges,"",%progbits
 1927 0000 2C000000 		.4byte	0x2c
 1928 0004 0200     		.2byte	0x2
 1929 0006 00000000 		.4byte	.Ldebug_info0
 1930 000a 04       		.byte	0x4
 1931 000b 00       		.byte	0
 1932 000c 0000     		.2byte	0
 1933 000e 0000     		.2byte	0
 1934 0010 00000000 		.4byte	.LFB63
 1935 0014 84010000 		.4byte	.LFE63-.LFB63
 1936 0018 00000000 		.4byte	.LFB64
 1937 001c 2A000000 		.4byte	.LFE64-.LFB64
 1938 0020 00000000 		.4byte	.LFB65
 1939 0024 38000000 		.4byte	.LFE65-.LFB65
 1940 0028 00000000 		.4byte	0
 1941 002c 00000000 		.4byte	0
 1942              		.section	.debug_ranges,"",%progbits
 1943              	.Ldebug_ranges0:
 1944 0000 00000000 		.4byte	.LFB63
 1945 0004 84010000 		.4byte	.LFE63
 1946 0008 00000000 		.4byte	.LFB64
 1947 000c 2A000000 		.4byte	.LFE64
 1948 0010 00000000 		.4byte	.LFB65
 1949 0014 38000000 		.4byte	.LFE65
 1950 0018 00000000 		.4byte	0
 1951 001c 00000000 		.4byte	0
 1952              		.section	.debug_line,"",%progbits
 1953              	.Ldebug_line0:
 1954 0000 91020000 		.section	.debug_str,"MS",%progbits,1
 1954      0200DC01 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 45


 1954      00000201 
 1954      FB0E0D00 
 1954      01010101 
 1955              	.LASF63:
 1956 0000 5F5F6275 		.ascii	"__builtin_puts\000"
 1956      696C7469 
 1956      6E5F7075 
 1956      747300
 1957              	.LASF56:
 1958 000f 55415254 		.ascii	"UART_1_GetChar\000"
 1958      5F315F47 
 1958      65744368 
 1958      617200
 1959              	.LASF53:
 1960 001e 6D6F746F 		.ascii	"motor_stop\000"
 1960      725F7374 
 1960      6F7000
 1961              	.LASF2:
 1962 0029 73686F72 		.ascii	"short int\000"
 1962      7420696E 
 1962      7400
 1963              	.LASF19:
 1964 0033 73697A65 		.ascii	"sizetype\000"
 1964      74797065 
 1964      00
 1965              	.LASF23:
 1966 003c 65786974 		.ascii	"exitMain\000"
 1966      4D61696E 
 1966      00
 1967              	.LASF61:
 1968 0045 6D61696E 		.ascii	"main\000"
 1968      00
 1969              	.LASF34:
 1970 004a 5F777269 		.ascii	"_write\000"
 1970      746500
 1971              	.LASF51:
 1972 0051 52696768 		.ascii	"Right_turn\000"
 1972      745F7475 
 1972      726E00
 1973              	.LASF4:
 1974 005c 5F5F7569 		.ascii	"__uint16_t\000"
 1974      6E743136 
 1974      5F7400
 1975              	.LASF33:
 1976 0067 66696C65 		.ascii	"file\000"
 1976      00
 1977              	.LASF60:
 1978 006c 73656E73 		.ascii	"sensors_\000"
 1978      6F72735F 
 1978      00
 1979              	.LASF27:
 1980 0075 74687265 		.ascii	"threshold_r1\000"
 1980      73686F6C 
 1980      645F7231 
 1980      00
 1981              	.LASF28:
 1982 0082 74687265 		.ascii	"threshold_r3\000"
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 46


 1982      73686F6C 
 1982      645F7233 
 1982      00
 1983              	.LASF13:
 1984 008f 75696E74 		.ascii	"uint8\000"
 1984      3800
 1985              	.LASF30:
 1986 0095 6C656674 		.ascii	"left_forceful_limit\000"
 1986      5F666F72 
 1986      63656675 
 1986      6C5F6C69 
 1986      6D697400 
 1987              	.LASF39:
 1988 00a9 4D656173 		.ascii	"Measure_Voltage\000"
 1988      7572655F 
 1988      566F6C74 
 1988      61676500 
 1989              	.LASF44:
 1990 00b9 7265666C 		.ascii	"reflectance_start\000"
 1990      65637461 
 1990      6E63655F 
 1990      73746172 
 1990      7400
 1991              	.LASF37:
 1992 00cb 55415254 		.ascii	"UART_1_Start\000"
 1992      5F315F53 
 1992      74617274 
 1992      00
 1993              	.LASF54:
 1994 00d8 55415254 		.ascii	"UART_1_PutChar\000"
 1994      5F315F50 
 1994      75744368 
 1994      617200
 1995              	.LASF15:
 1996 00e7 666C6F61 		.ascii	"float\000"
 1996      7400
 1997              	.LASF8:
 1998 00ed 6C6F6E67 		.ascii	"long long int\000"
 1998      206C6F6E 
 1998      6720696E 
 1998      7400
 1999              	.LASF18:
 2000 00fb 63796973 		.ascii	"cyisraddress\000"
 2000      72616464 
 2000      72657373 
 2000      00
 2001              	.LASF50:
 2002 0108 7265666C 		.ascii	"reflectance_digital\000"
 2002      65637461 
 2002      6E63655F 
 2002      64696769 
 2002      74616C00 
 2003              	.LASF31:
 2004 011c 72696768 		.ascii	"right_forceful_limit\000"
 2004      745F666F 
 2004      72636566 
 2004      756C5F6C 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 47


 2004      696D6974 
 2005              	.LASF6:
 2006 0131 6C6F6E67 		.ascii	"long int\000"
 2006      20696E74 
 2006      00
 2007              	.LASF32:
 2008 013a 62757474 		.ascii	"button\000"
 2008      6F6E00
 2009              	.LASF48:
 2010 0141 43757374 		.ascii	"Custom_forward\000"
 2010      6F6D5F66 
 2010      6F727761 
 2010      726400
 2011              	.LASF1:
 2012 0150 756E7369 		.ascii	"unsigned char\000"
 2012      676E6564 
 2012      20636861 
 2012      7200
 2013              	.LASF22:
 2014 015e 65786974 		.ascii	"exit\000"
 2014      00
 2015              	.LASF20:
 2016 0163 6C6F6E67 		.ascii	"long double\000"
 2016      20646F75 
 2016      626C6500 
 2017              	.LASF38:
 2018 016f 4144435F 		.ascii	"ADC_Battery_Start\000"
 2018      42617474 
 2018      6572795F 
 2018      53746172 
 2018      7400
 2019              	.LASF52:
 2020 0181 4C656674 		.ascii	"Left_turn\000"
 2020      5F747572 
 2020      6E00
 2021              	.LASF43:
 2022 018b 7265666C 		.ascii	"reflectance_set_threshold\000"
 2022      65637461 
 2022      6E63655F 
 2022      7365745F 
 2022      74687265 
 2023              	.LASF35:
 2024 01a5 5F726561 		.ascii	"_read\000"
 2024      6400
 2025              	.LASF0:
 2026 01ab 7369676E 		.ascii	"signed char\000"
 2026      65642063 
 2026      68617200 
 2027              	.LASF9:
 2028 01b7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2028      206C6F6E 
 2028      6720756E 
 2028      7369676E 
 2028      65642069 
 2029              	.LASF10:
 2030 01ce 756E7369 		.ascii	"unsigned int\000"
 2030      676E6564 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 48


 2030      20696E74 
 2030      00
 2031              	.LASF11:
 2032 01db 75696E74 		.ascii	"uint16_t\000"
 2032      31365F74 
 2032      00
 2033              	.LASF24:
 2034 01e4 7475726E 		.ascii	"turn\000"
 2034      00
 2035              	.LASF29:
 2036 01e9 73706565 		.ascii	"speed\000"
 2036      6400
 2037              	.LASF64:
 2038 01ef 70757473 		.ascii	"puts\000"
 2038      00
 2039              	.LASF3:
 2040 01f4 73686F72 		.ascii	"short unsigned int\000"
 2040      7420756E 
 2040      7369676E 
 2040      65642069 
 2040      6E7400
 2041              	.LASF21:
 2042 0207 6379636C 		.ascii	"cycles\000"
 2042      657300
 2043              	.LASF26:
 2044 020e 74687265 		.ascii	"threshold_l1\000"
 2044      73686F6C 
 2044      645F6C31 
 2044      00
 2045              	.LASF41:
 2046 021b 6D6F746F 		.ascii	"motor_forward\000"
 2046      725F666F 
 2046      72776172 
 2046      6400
 2047              	.LASF25:
 2048 0229 74687265 		.ascii	"threshold_l3\000"
 2048      73686F6C 
 2048      645F6C33 
 2048      00
 2049              	.LASF17:
 2050 0236 63686172 		.ascii	"char\000"
 2050      00
 2051              	.LASF57:
 2052 023b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2052      4320342E 
 2052      392E3320 
 2052      32303135 
 2052      30333033 
 2053 026e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2053      20726576 
 2053      6973696F 
 2053      6E203232 
 2053      31323230 
 2054 02a1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2054      66756E63 
 2054      74696F6E 
 2054      2D736563 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 49


 2054      74696F6E 
 2055              	.LASF12:
 2056 02c9 696E7433 		.ascii	"int32_t\000"
 2056      325F7400 
 2057              	.LASF59:
 2058 02d1 433A5C55 		.ascii	"C:\\Users\\Ville L\\Desktop\\Zumo_Robotti\\Zumo_Rob"
 2058      73657273 
 2058      5C56696C 
 2058      6C65204C 
 2058      5C446573 
 2059 02ff 6F747469 		.ascii	"otti\\ZumoBot.cydsn\000"
 2059      5C5A756D 
 2059      6F426F74 
 2059      2E637964 
 2059      736E00
 2060              	.LASF46:
 2061 0312 42617474 		.ascii	"BatteryLed_Write\000"
 2061      6572794C 
 2061      65645F57 
 2061      72697465 
 2061      00
 2062              	.LASF55:
 2063 0323 5357315F 		.ascii	"SW1_Read\000"
 2063      52656164 
 2063      00
 2064              	.LASF14:
 2065 032c 75696E74 		.ascii	"uint32\000"
 2065      333200
 2066              	.LASF58:
 2067 0333 6D61696E 		.ascii	"main.c\000"
 2067      2E6300
 2068              	.LASF7:
 2069 033a 6C6F6E67 		.ascii	"long unsigned int\000"
 2069      20756E73 
 2069      69676E65 
 2069      6420696E 
 2069      7400
 2070              	.LASF42:
 2071 034c 73656E73 		.ascii	"sensor_isr_StartEx\000"
 2071      6F725F69 
 2071      73725F53 
 2071      74617274 
 2071      457800
 2072              	.LASF40:
 2073 035f 6D6F746F 		.ascii	"motor_start\000"
 2073      725F7374 
 2073      61727400 
 2074              	.LASF36:
 2075 036b 636F756E 		.ascii	"count\000"
 2075      7400
 2076              	.LASF5:
 2077 0371 5F5F696E 		.ascii	"__int32_t\000"
 2077      7433325F 
 2077      7400
 2078              	.LASF49:
 2079 037b 7265666C 		.ascii	"reflectance_read\000"
 2079      65637461 
ARM GAS  C:\Users\VILLEL~1\AppData\Local\Temp\ccdBRK3h.s 			page 50


 2079      6E63655F 
 2079      72656164 
 2079      00
 2080              	.LASF16:
 2081 038c 646F7562 		.ascii	"double\000"
 2081      6C6500
 2082              	.LASF62:
 2083 0393 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2083      52784275 
 2083      66666572 
 2083      00
 2084              	.LASF47:
 2085 03a0 43794465 		.ascii	"CyDelay\000"
 2085      6C617900 
 2086              	.LASF45:
 2087 03a8 49525F6C 		.ascii	"IR_led_Write\000"
 2087      65645F57 
 2087      72697465 
 2087      00
 2088              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
